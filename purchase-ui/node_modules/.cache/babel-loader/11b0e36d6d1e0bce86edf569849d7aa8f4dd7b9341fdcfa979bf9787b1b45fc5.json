{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/lot/LotPanel.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Text } from '@consta/uikit/Text';\nimport { Select } from '@consta/uikit/Select';\nimport LotList from './LotList';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LotPanel = ({\n  lots,\n  formatDate\n}) => {\n  _s();\n  const [sortedLots, setSortedLots] = useState(lots);\n  const handleSortChange = event => {\n    const value = event.value;\n    let sortedArray;\n    if (value === 'nearest') {\n      sortedArray = [...lots].sort((a, b) => new Date(a.dateDelivery).getTime() - new Date(b.dateDelivery).getTime());\n    } else if (value === 'latest') {\n      sortedArray = [...lots].sort((a, b) => new Date(b.dateDelivery).getTime() - new Date(a.dateDelivery).getTime());\n    } else {\n      sortedArray = lots; // без сортировки\n    }\n    setSortedLots(sortedArray);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"header\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Text, {\n          as: \"h1\",\n          children: \"\\u0423\\u043F\\u0440\\u0430\\u0432\\u043B\\u0435\\u043D\\u0438\\u0435 \\u043B\\u043E\\u0442\\u0430\\u043C\\u0438\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"controls\",\n          children: /*#__PURE__*/_jsxDEV(Select, {\n            label: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430 \\u043F\\u043E \\u0434\\u0430\\u0442\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438\",\n            items: [{\n              label: 'Ближайшая доставка',\n              value: 'nearest'\n            }, {\n              label: 'Позднейшая доставка',\n              value: 'latest'\n            }, {\n              label: 'Без сортировки',\n              value: 'none'\n            }],\n            onChange: handleSortChange,\n            getItemKey: function (item) {\n              throw new Error('Function not implemented.');\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Text, {\n      as: \"p\",\n      lineHeight: \"m\",\n      children: \"\\u0412 \\u044D\\u0442\\u043E\\u043C \\u043E\\u043A\\u043D\\u0435 \\u0432\\u044B \\u043C\\u043E\\u0436\\u0435\\u0442\\u0435 \\u043F\\u0440\\u043E\\u0441\\u043C\\u0430\\u0442\\u0440\\u0438\\u0432\\u0430\\u0442\\u044C \\u043B\\u043E\\u0442\\u044B, \\u0430 \\u0442\\u0430\\u043A\\u0436\\u0435 \\u0441\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u0438\\u0445 \\u043F\\u043E \\u0434\\u0430\\u0442\\u0435 \\u0434\\u043E\\u0441\\u0442\\u0430\\u0432\\u043A\\u0438. \\u0411\\u043B\\u0430\\u0433\\u043E\\u0434\\u0430\\u0440\\u044F \\u0443\\u0434\\u043E\\u0431\\u043D\\u043E\\u043C\\u0443 \\u0438\\u043D\\u0442\\u0435\\u0440\\u0444\\u0435\\u0439\\u0441\\u0443, \\u043F\\u0440\\u043E\\u0446\\u0435\\u0441\\u0441 \\u043F\\u0440\\u043E\\u0441\\u043C\\u043E\\u0442\\u0440\\u0430 \\u043B\\u043E\\u0442\\u043E\\u0432 \\u044F\\u0432\\u043B\\u044F\\u0435\\u0442\\u0441\\u044F \\u043C\\u0430\\u043A\\u0441\\u0438\\u043C\\u0430\\u043B\\u044C\\u043D\\u043E \\u043F\\u0440\\u043E\\u0441\\u0442\\u044B\\u043C \\u0438 \\u0443\\u0434\\u043E\\u0431\\u043D\\u044B\\u043C \\u0434\\u043B\\u044F \\u043E\\u043F\\u044B\\u0442\\u0430 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u0435\\u0439.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LotList, {\n      lots: sortedLots,\n      formatDate: formatDate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n};\n_s(LotPanel, \"MEzVsSGipeuzpC48b3wHo40R/Qk=\");\n_c = LotPanel;\nexport default LotPanel;\nvar _c;\n$RefreshReg$(_c, \"LotPanel\");","map":{"version":3,"names":["React","useState","Text","Select","LotList","jsxDEV","_jsxDEV","LotPanel","lots","formatDate","_s","sortedLots","setSortedLots","handleSortChange","event","value","sortedArray","sort","a","b","Date","dateDelivery","getTime","className","children","as","fileName","_jsxFileName","lineNumber","columnNumber","label","items","onChange","getItemKey","item","Error","lineHeight","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/lot/LotPanel.tsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { Text } from '@consta/uikit/Text';\nimport { Select } from '@consta/uikit/Select';\nimport LotList from './LotList';\nimport { Lot } from '../../intefaces/LotInterface';\n\ninterface Props {\n  lots: Lot[];\n  formatDate: (date: Date) => string;\n}\n\nconst LotPanel: React.FC<Props> = ({ lots, formatDate }) => {\n  const [sortedLots, setSortedLots] = useState<Lot[]>(lots);\n\n  const handleSortChange = (event: any) => {\n    const value = event.value;\n    let sortedArray;\n\n    if (value === 'nearest') {\n      sortedArray = [...lots].sort(\n        (a, b) =>\n          new Date(a.dateDelivery).getTime() -\n          new Date(b.dateDelivery).getTime()\n      );\n    } else if (value === 'latest') {\n      sortedArray = [...lots].sort(\n        (a, b) =>\n          new Date(b.dateDelivery).getTime() -\n          new Date(a.dateDelivery).getTime()\n      );\n    } else {\n      sortedArray = lots; // без сортировки\n    }\n\n    setSortedLots(sortedArray);\n  };\n\n  return (\n    <div className=\"container\">\n      <div className=\"header\">\n        <div>\n          <Text as=\"h1\">Управление лотами</Text>\n          <div className=\"controls\">\n            <Select\n              label=\"Сортировка по дате доставки\"\n              items={[\n                { label: 'Ближайшая доставка', value: 'nearest' },\n                { label: 'Позднейшая доставка', value: 'latest' },\n                { label: 'Без сортировки', value: 'none' },\n              ]}\n              onChange={handleSortChange}\n              getItemKey={function (item: {\n                label: string;\n                value: string;\n              }): string | number {\n                throw new Error('Function not implemented.');\n              }}\n            />\n          </div>\n        </div>\n      </div>\n      <Text as=\"p\" lineHeight=\"m\">\n        В этом окне вы можете просматривать лоты, а также сортировать их по дате\n        доставки. Благодаря удобному интерфейсу, процесс просмотра лотов\n        является максимально простым и удобным для опыта пользователей.\n      </Text>\n      <hr />\n      <LotList lots={sortedLots} formatDate={formatDate} />\n    </div>\n  );\n};\n\nexport default LotPanel;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}