{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Desktop/purchase-ui/src/components/pages/customer/CustomerList.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Table, TextField } from '@consta/uikit/Table';\nimport { Button } from '@consta/uikit/Button';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { getCustomers, deleteCustomer } from './api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Код',\n  accessor: 'customer_code'\n}, {\n  title: 'Наименование',\n  accessor: 'customer_name'\n}, {\n  title: 'ИНН',\n  accessor: 'customer_inn'\n}, {\n  title: 'КПП',\n  accessor: 'customer_kpp'\n}, {\n  title: 'Юр. адрес',\n  accessor: 'customer_legal_address'\n}, {\n  title: 'Почтовый адрес',\n  accessor: 'customer_postal_address'\n}, {\n  title: 'Электронная почта',\n  accessor: 'customer_email'\n}, {\n  title: 'Действия',\n  accessor: 'actions',\n  renderCell: (customer, {\n    onEditCustomer\n  }) => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      iconLeft: IconEdit,\n      size: \"s\",\n      view: \"ghost\",\n      onClick: () => onEditCustomer(customer),\n      style: {\n        marginRight: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      iconLeft: IconTrash,\n      size: \"s\",\n      view: \"ghost\",\n      onClick: () => deleteCustomer(customer.customer_code).then(() => getCustomers().then(data => setCustomers(data)))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}];\nconst CustomerList = ({\n  onEditCustomer\n}) => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [filter, setFilter] = useState('');\n  useEffect(() => {\n    getCustomers().then(data => setCustomers(data));\n  }, []);\n  const filteredCustomers = customers.filter(customer => customer.customer_name.toLowerCase().includes(filter.toLowerCase()));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(TextField, {\n      value: filter,\n      onChange: ({\n        value\n      }) => setFilter(value !== null && value !== void 0 ? value : ''),\n      placeholder: \"\\u0424\\u0438\\u043B\\u044C\\u0442\\u0440 \\u043F\\u043E \\u043D\\u0430\\u0438\\u043C\\u0435\\u043D\\u043E\\u0432\\u0430\\u043D\\u0438\\u044E\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rows: filteredCustomers,\n      renderRow: ({\n        item\n      }) => /*#__PURE__*/_jsxDEV(TableRow, {\n        item: item,\n        onEditCustomer: onEditCustomer\n      }, item.customer_code, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerList, \"TUgfebk0403lvZ8yoKCLmBpqOE4=\");\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","useEffect","useState","Table","TextField","Button","IconEdit","IconTrash","getCustomers","deleteCustomer","jsxDEV","_jsxDEV","Fragment","_Fragment","columns","title","accessor","renderCell","customer","onEditCustomer","children","iconLeft","size","view","onClick","style","marginRight","fileName","_jsxFileName","lineNumber","columnNumber","customer_code","then","data","setCustomers","CustomerList","_s","customers","filter","setFilter","filteredCustomers","customer_name","toLowerCase","includes","value","onChange","placeholder","rows","renderRow","item","TableRow","_c","$RefreshReg$"],"sources":["/Users/leonofv/Desktop/purchase-ui/src/components/pages/customer/CustomerList.tsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { Table, TableColumn, TextField } from '@consta/uikit/Table';\nimport { Button } from '@consta/uikit/Button';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { getCustomers, deleteCustomer } from './api';\n\ninterface Customer {\n  customer_code: string;\n  customer_name: string;\n  customer_inn: string;\n  customer_kpp: string;\n  customer_legal_address: string;\n  customer_postal_address: string;\n  customer_email: string;\n  customer_code_main: string;\n  is_organization: boolean;\n  is_person: boolean;\n}\n\ninterface CustomerListProps {\n  onEditCustomer: (customer: Customer) => void;\n}\n\nconst columns: TableColumn<Customer>[] = [\n  {\n    title: 'Код',\n    accessor: 'customer_code',\n  },\n  {\n    title: 'Наименование',\n    accessor: 'customer_name',\n  },\n  {\n    title: 'ИНН',\n    accessor: 'customer_inn',\n  },\n  {\n    title: 'КПП',\n    accessor: 'customer_kpp',\n  },\n  {\n    title: 'Юр. адрес',\n    accessor: 'customer_legal_address',\n  },\n  {\n    title: 'Почтовый адрес',\n    accessor: 'customer_postal_address',\n  },\n  {\n    title: 'Электронная почта',\n    accessor: 'customer_email',\n  },\n  {\n    title: 'Действия',\n    accessor: 'actions',\n    renderCell: (customer, { onEditCustomer }) => (\n      <>\n        <Button\n          iconLeft={IconEdit}\n          size=\"s\"\n          view=\"ghost\"\n          onClick={() => onEditCustomer(customer)}\n          style={{ marginRight: '8px' }}\n        />\n        <Button\n          iconLeft={IconTrash}\n          size=\"s\"\n          view=\"ghost\"\n          onClick={() =>\n            deleteCustomer(customer.customer_code).then(() =>\n              getCustomers().then((data) => setCustomers(data))\n            )\n          }\n        />\n      </>\n    ),\n  },\n];\n\nconst CustomerList: React.FC<CustomerListProps> = ({ onEditCustomer }) => {\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [filter, setFilter] = useState<string>('');\n\n  useEffect(() => {\n    getCustomers().then((data) => setCustomers(data));\n  }, []);\n\n  const filteredCustomers = customers.filter((customer) =>\n    customer.customer_name.toLowerCase().includes(filter.toLowerCase())\n  );\n\n  return (\n    <div>\n      <TextField\n        value={filter}\n        onChange={({ value }) => setFilter(value ?? '')}\n        placeholder=\"Фильтр по наименованию\"\n      />\n      <Table\n        columns={columns}\n        rows={filteredCustomers}\n        renderRow={({ item }) => (\n          <TableRow\n            key={item.customer_code}\n            item={item}\n            onEditCustomer={onEditCustomer}\n          />\n        )}\n      />\n    </div>\n  );\n};\n\nexport default CustomerList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}