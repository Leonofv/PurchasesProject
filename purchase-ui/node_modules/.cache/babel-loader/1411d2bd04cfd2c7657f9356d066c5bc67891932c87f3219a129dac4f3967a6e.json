{"ast":null,"code":"import { useEffect } from \"react\";\nimport { useMutableRef } from \"../useMutableRef/useMutableRef\";\nexport function useClickOutside(a) {\n  var b = a.isActive,\n    c = a.ignoreClicksInsideRefs,\n    d = a.handler,\n    e = useMutableRef(d),\n    f = useMutableRef(c),\n    g = useMutableRef(b);\n  useEffect(function () {\n    var a = function (a) {\n      var b, c;\n      if (g.current) {\n        var d = a.target,\n          h = null === (b = f.current) || void 0 === b ? void 0 : b.every(function (a) {\n            var b;\n            return !(null !== (b = a.current) && void 0 !== b && b.contains(d));\n          });\n        h && (null === (c = e.current) || void 0 === c ? void 0 : c.call(e, a));\n      }\n    };\n    return document.addEventListener(\"mousedown\", a), function () {\n      document.removeEventListener(\"mousedown\", a);\n    };\n  }, []);\n}","map":{"version":3,"names":["useEffect","useMutableRef","useClickOutside","a","b","isActive","c","ignoreClicksInsideRefs","d","handler","e","f","g","handleClick","current","target","h","every","contains","call","document","addEventListener","removeEventListener"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/node_modules/@consta/src/hooks/useClickOutside/useClickOutside.tsx"],"sourcesContent":["import { RefObject, useEffect } from 'react';\n\nimport { useMutableRef } from '../useMutableRef/useMutableRef';\n\nexport type ClickOutsideHandler = (event: MouseEvent) => void;\n\ntype UseClickOutsideProps = {\n  isActive?: boolean;\n  ignoreClicksInsideRefs?: ReadonlyArray<RefObject<HTMLElement>>;\n  handler?: ClickOutsideHandler;\n};\n\nexport function useClickOutside({\n  isActive,\n  ignoreClicksInsideRefs,\n  handler,\n}: UseClickOutsideProps): void {\n  // Аргументы вынесены в рефки за тем, чтобы не пересоздавать подписку `mousedown` при кажом чихе.\n  // Бывают кейсы когда на странице несколко `useClickOutside` и один вызывает рендер,\n  // А второй не успевает отрабатывать а просто пересоздается\n  // С такой реализацией пересоздание только при удалении из дома, а аргументы всегда актуалны.\n\n  const handlerRef = useMutableRef(handler);\n  const ignoreClicksInsideRefsRef = useMutableRef(ignoreClicksInsideRefs);\n  const isActiveRef = useMutableRef(isActive);\n\n  useEffect(() => {\n    const handleClick = (event: MouseEvent) => {\n      if (!isActiveRef.current) {\n        return;\n      }\n\n      const target = event.target as Node;\n\n      const shouldCallHandler = ignoreClicksInsideRefsRef.current?.every(\n        (ref) => !ref.current?.contains(target),\n      );\n\n      shouldCallHandler && handlerRef.current?.(event);\n    };\n\n    document.addEventListener('mousedown', handleClick);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClick);\n    };\n  }, []);\n}\n"],"mappings":"AAAA,SAAoBA,SAApB,QAAqC,OAArC;AAEA,SAASC,aAAT;AAUA,OAAO,SAASC,eAATA,CAAAC,CAAA,EAIwB;EAAA,IAH7BC,CAG6B,GAAAD,CAAA,CAH7BE,QAG6B;IAF7BC,CAE6B,GAAAH,CAAA,CAF7BI,sBAE6B;IAD7BC,CAC6B,GAAAL,CAAA,CAD7BM,OAC6B;IAMvBC,CAAU,GAAGT,aAAa,CAACO,CAAD,CANH;IAOvBG,CAAyB,GAAGV,aAAa,CAACK,CAAD,CAPlB;IAQvBM,CAAW,GAAGX,aAAa,CAACG,CAAD,CARJ;EAU7BJ,SAAS,CAAC,YAAM;IACd,IAAMG,CAAW,GAAG,SAAAU,CAACV,CAAD,EAAuB;MAAA,IAAAC,CAAA,EAAAE,CAAA;MACzC,IAAKM,CAAW,CAACE,OAAjB;QAAA,IAIMN,CAAM,GAAGL,CAAK,CAACY,MAJrB;UAMMC,CAAiB,aAAAZ,CAAA,GAAGO,CAAyB,CAACG,OAA7B,gBAAAV,CAAA,YAAGA,CAAA,CAAmCa,KAAnC,CACxB,UAACd,CAAD;YAAA,IAAAC,CAAA;YAAA,OAAS,YAAAA,CAAA,GAACD,CAAG,CAACW,OAAL,gBAAAV,CAAA,IAACA,CAAA,CAAac,QAAb,CAAsBV,CAAtB,CAAD,CAAT;UAAA,CADwB,CAN1B;QAUAQ,CAAiB,eAAAV,CAAA,GAAII,CAAU,CAACI,OAAf,gBAAAR,CAAA,YAAIA,CAAA,CAAAa,IAAA,CAAAT,CAAU,EAAWP,CAAX,CAAd,CAVjB;MAAA;IAWD,CAZD;IAgBA,OAFAiB,QAAQ,CAACC,gBAAT,CAA0B,WAA1B,EAAuClB,CAAvC,CAEA,EAAO,YAAM;MACXiB,QAAQ,CAACE,mBAAT,CAA6B,WAA7B,EAA0CnB,CAA1C,CACD;IAAA,CACF;EAAA,CApBQ,EAoBN,EApBM,CAqBV;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}