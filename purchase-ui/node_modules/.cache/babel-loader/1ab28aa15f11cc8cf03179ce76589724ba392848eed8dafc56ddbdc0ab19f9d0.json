{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport \"./TableTextFilter.css\";\nimport { IconSearchStroked } from \"@consta/icons/IconSearchStroked\";\nimport React, { useMemo, useState } from \"react\";\nimport { cnMixScrollBar } from \"../../../mixs/MixScrollBar\";\nimport { cn } from \"../../../utils/bem\";\nimport { Button } from \"../../Button/Button\";\nimport { CheckboxGroup } from \"../../CheckboxGroup\";\nimport { Text } from \"../../Text/Text\";\nimport { TextField } from \"../../TextField/TextField\";\nimport { TableFilterContainer } from \"../FilterContainer/TableFilterContainer\";\nvar cnTextFilter = cn(\"TableTextFilter\"),\n  sanitizeRegex = function (a) {\n    return a.replaceAll(/[.*+?^${}()|[\\]\\\\]/g, \"\\\\$&\").replaceAll(/\\$/g, \"$$$$\");\n  };\nexport var TableTextFilter = function (a) {\n  var b = a.items,\n    c = void 0 === b ? [] : b,\n    d = a.withSearch,\n    e = a.onConfirm,\n    f = a.onCancel,\n    g = a.filterValue,\n    h = a.title,\n    i = a.emptySearchText,\n    j = void 0 === i ? \"\\u041D\\u0438\\u0447\\u0435\\u0433\\u043E \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u043E :(\" : i,\n    k = useState(null),\n    l = _slicedToArray(k, 2),\n    m = l[0],\n    n = l[1],\n    o = useState(g || c),\n    p = _slicedToArray(o, 2),\n    q = p[0],\n    r = p[1],\n    s = useMemo(function () {\n      return m ? c.filter(function (a) {\n        var b = a.name;\n        return b.match(new RegExp(sanitizeRegex(m), \"i\"));\n      }) : c;\n    }, [m, c]),\n    t = useMemo(function () {\n      return s.length === (null === q || void 0 === q ? void 0 : q.length);\n    }, [s, q]),\n    u = useMemo(function () {\n      return null === q || void 0 === q ? void 0 : q.length;\n    }, [q]);\n  return React.createElement(TableFilterContainer, {\n    title: h,\n    onCancel: f,\n    onConfirm: function confirmHandler() {\n      n(null), e(null === q ? [] : q);\n    }\n  }, void 0 !== d && d && React.createElement(TextField, {\n    value: m,\n    onChange: n,\n    leftSide: IconSearchStroked,\n    size: \"s\",\n    placeholder: \"\\u041D\\u0430\\u0439\\u0442\\u0438 \\u0432 \\u0441\\u043F\\u0438\\u0441\\u043A\\u0435\",\n    className: cnTextFilter(\"Searchbar\")\n  }), React.createElement(\"div\", {\n    className: cnTextFilter(\"Controls\")\n  }, React.createElement(Button, {\n    size: \"m\",\n    type: \"button\",\n    form: \"brick\",\n    label: \"\\u0412\\u044B\\u0431\\u0440\\u0430\\u0442\\u044C \\u0432\\u0441\\u0435\",\n    view: \"clear\",\n    onClick: function setAll() {\n      r(s);\n    },\n    disabled: !s.length || t\n  }), React.createElement(Button, {\n    size: \"m\",\n    form: \"brick\",\n    type: \"button\",\n    label: \"\\u0421\\u0431\\u0440\\u043E\\u0441\\u0438\\u0442\\u044C\",\n    view: \"clear\",\n    onClick: function resetHandler() {\n      r(null);\n    },\n    disabled: !s.length || !u\n  })), React.createElement(\"div\", {\n    className: cnTextFilter(\"Checkboxes\", [cnMixScrollBar()])\n  }, s.length ? React.createElement(CheckboxGroup, {\n    items: s,\n    value: q,\n    getItemLabel: function getItemLabel(a) {\n      return a.name;\n    },\n    onChange: r,\n    name: \"checkboxGroup\"\n  }) : React.createElement(Text, {\n    lineHeight: \"2xs\",\n    view: \"primary\",\n    size: \"m\"\n  }, j)));\n};","map":{"version":3,"names":["IconSearchStroked","React","useMemo","useState","cnMixScrollBar","cn","Button","CheckboxGroup","Text","TextField","TableFilterContainer","cnTextFilter","sanitizeRegex","a","replaceAll","TableTextFilter","b","items","c","d","withSearch","e","onConfirm","f","onCancel","g","filterValue","h","title","i","emptySearchText","j","k","l","_slicedToArray","m","n","o","p","q","r","s","filter","name","match","RegExp","t","length","u","createElement","confirmHandler","value","onChange","leftSide","size","placeholder","className","type","form","label","view","onClick","setAll","disabled","resetHandler","getItemLabel","lineHeight"],"sources":["/Users/leonofv/Desktop/purchase-ui/node_modules/@consta/src/components/Table/TextFilter/TableTextFilter.tsx"],"sourcesContent":["import './TableTextFilter.css';\n\nimport { IconSearchStroked } from '@consta/icons/IconSearchStroked';\nimport React, { useMemo, useState } from 'react';\n\nimport { cnMixScrollBar } from '##/mixs/MixScrollBar';\n\nimport { cn } from '../../../utils/bem';\nimport { Button } from '../../Button/Button';\nimport { CheckboxGroup } from '../../CheckboxGroup';\nimport { Text } from '../../Text/Text';\nimport { TextField } from '../../TextField/TextField';\nimport { TableFilterContainer } from '../FilterContainer/TableFilterContainer';\nimport { FilterComponentProps } from '../filtering';\n\nconst cnTextFilter = cn('TableTextFilter');\n\ntype Item = {\n  name: string;\n  value: string;\n};\n\ntype TableTextFilterProps = FilterComponentProps & {\n  items?: Item[];\n  withSearch?: boolean;\n  title?: string;\n  emptySearchText?: string;\n};\n\nconst sanitizeRegex = (futureRegex: string): string =>\n  futureRegex\n    .replaceAll(/[.*+?^${}()|[\\]\\\\]/g, '\\\\$&')\n    .replaceAll(/\\$/g, '$$$$');\n\nexport const TableTextFilter: React.FC<TableTextFilterProps> = ({\n  items = [],\n  withSearch = false,\n  onConfirm,\n  onCancel,\n  filterValue,\n  title,\n  emptySearchText = 'Ничего не найдено :(',\n}) => {\n  const [searchValue, setSearchValue] = useState<string | null>(null);\n  const [checkboxGroupValue, setCheckboxGroupValue] = useState<Item[] | null>(\n    (filterValue as Item[]) || items,\n  );\n\n  const confirmHandler = () => {\n    setSearchValue(null);\n    onConfirm(checkboxGroupValue === null ? [] : checkboxGroupValue);\n  };\n\n  const resetHandler = () => {\n    setCheckboxGroupValue(null);\n  };\n\n  const filteredItems = useMemo(() => {\n    if (!searchValue) {\n      return items;\n    }\n\n    return items.filter(({ name }) => {\n      return name.match(new RegExp(sanitizeRegex(searchValue), 'i'));\n    });\n  }, [searchValue, items]);\n\n  const setAll = () => {\n    setCheckboxGroupValue(filteredItems);\n  };\n\n  const isAllSelected = useMemo(\n    () => filteredItems.length === checkboxGroupValue?.length,\n    [filteredItems, checkboxGroupValue],\n  );\n\n  const isSelected = useMemo(\n    () => checkboxGroupValue?.length,\n    [checkboxGroupValue],\n  );\n\n  return (\n    <TableFilterContainer\n      title={title}\n      onCancel={onCancel}\n      onConfirm={confirmHandler}\n    >\n      {withSearch && (\n        <TextField\n          value={searchValue}\n          onChange={setSearchValue}\n          leftSide={IconSearchStroked}\n          size=\"s\"\n          placeholder=\"Найти в списке\"\n          className={cnTextFilter('Searchbar')}\n        />\n      )}\n      <div className={cnTextFilter('Controls')}>\n        <Button\n          size=\"m\"\n          type=\"button\"\n          form=\"brick\"\n          label=\"Выбрать все\"\n          view=\"clear\"\n          onClick={setAll}\n          disabled={!filteredItems.length || isAllSelected}\n        />\n        <Button\n          size=\"m\"\n          form=\"brick\"\n          type=\"button\"\n          label=\"Сбросить\"\n          view=\"clear\"\n          onClick={resetHandler}\n          disabled={!filteredItems.length || !isSelected}\n        />\n      </div>\n      <div className={cnTextFilter('Checkboxes', [cnMixScrollBar()])}>\n        {filteredItems.length ? (\n          <CheckboxGroup\n            items={filteredItems}\n            value={checkboxGroupValue}\n            getItemLabel={(item) => item.name}\n            onChange={setCheckboxGroupValue}\n            name=\"checkboxGroup\"\n          />\n        ) : (\n          <Text lineHeight=\"2xs\" view=\"primary\" size=\"m\">\n            {emptySearchText}\n          </Text>\n        )}\n      </div>\n    </TableFilterContainer>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}