{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerList.tsx\";\nimport React from 'react';\nimport { Button } from '@consta/uikit/Button';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { Table } from '@consta/uikit/Table';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst CustomerList = ({\n  customers,\n  handleDeleteCustomer\n}) => {\n  const columns = [{\n    title: 'Код',\n    accessor: 'customerCode'\n  }, {\n    title: 'Наименование',\n    accessor: 'customerName'\n  }, {\n    title: 'ИНН',\n    accessor: 'customerInn'\n  }, {\n    title: 'КПП',\n    accessor: 'customerKpp'\n  }, {\n    title: 'Юр. адрес',\n    accessor: 'customerLegalAddress'\n  }, {\n    title: 'Почтовый адрес',\n    accessor: 'customerPostalAddress'\n  }, {\n    title: 'Электронная почта',\n    accessor: 'customerEmail'\n  }, {\n    title: 'Тип',\n    renderCell: customer => /*#__PURE__*/_jsxDEV(\"span\", {\n      children: customer.isOrganization ? 'Юр. лицо' : 'Физ. лицо'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this)\n  }, {\n    title: 'Действия',\n    renderCell: customer => /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        iconLeft: IconEdit,\n        size: \"s\",\n        view: \"ghost\",\n        onClick: () => console.log(`Изменить ${customer.id}`),\n        style: {\n          marginRight: '8px'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        iconLeft: IconTrash,\n        size: \"s\",\n        view: \"ghost\",\n        onClick: () => handleDeleteCustomer(Number(customer.id))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }];\n  const rows = customers.map(customer => ({\n    ...customer,\n    id: customer.id.toString()\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rows: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","Button","IconEdit","IconTrash","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","CustomerList","customers","handleDeleteCustomer","columns","title","accessor","renderCell","customer","children","isOrganization","fileName","_jsxFileName","lineNumber","columnNumber","iconLeft","size","view","onClick","console","log","id","style","marginRight","Number","rows","map","toString","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerList.tsx"],"sourcesContent":["import React from 'react';\nimport { Button } from '@consta/uikit/Button';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { Table, TableColumn, TableRow } from '@consta/uikit/Table';\n\ninterface Customer {\n  id: number;\n  customerCode: string;\n  customerName: string;\n  customerInn: string;\n  customerKpp: string;\n  customerLegalAddress: string;\n  customerPostalAddress: string;\n  customerEmail: string;\n  customerCodeMain: string | null;\n  isOrganization: boolean;\n  isPerson: boolean;\n}\n\ninterface CustomerRow extends Omit<Customer, 'id'>, TableRow {\n  id: string;\n}\n\ninterface Props {\n  customers: Customer[];\n  handleDeleteCustomer: (id: number) => void;\n}\n\nconst CustomerList: React.FC<Props> = ({ customers, handleDeleteCustomer }) => {\n  const columns: TableColumn<CustomerRow>[] = [\n    {\n      title: 'Код',\n      accessor: 'customerCode',\n    },\n    {\n      title: 'Наименование',\n      accessor: 'customerName',\n    },\n    {\n      title: 'ИНН',\n      accessor: 'customerInn',\n    },\n    {\n      title: 'КПП',\n      accessor: 'customerKpp',\n    },\n    {\n      title: 'Юр. адрес',\n      accessor: 'customerLegalAddress',\n    },\n    {\n      title: 'Почтовый адрес',\n      accessor: 'customerPostalAddress',\n    },\n    {\n      title: 'Электронная почта',\n      accessor: 'customerEmail',\n    },\n    {\n      title: 'Тип',\n      renderCell: (customer: CustomerRow) => (\n        <span>{customer.isOrganization ? 'Юр. лицо' : 'Физ. лицо'}</span>\n      ),\n    },\n    {\n      title: 'Действия',\n      renderCell: (customer: CustomerRow) => (\n        <>\n          <Button\n            iconLeft={IconEdit}\n            size=\"s\"\n            view=\"ghost\"\n            onClick={() => console.log(`Изменить ${customer.id}`)}\n            style={{ marginRight: '8px' }}\n          />\n          <Button\n            iconLeft={IconTrash}\n            size=\"s\"\n            view=\"ghost\"\n            onClick={() => handleDeleteCustomer(Number(customer.id))}\n          />\n        </>\n      ),\n    } as any,\n  ];\n\n  const rows: CustomerRow[] = customers.map((customer) => ({\n    ...customer,\n    id: customer.id.toString(),\n  }));\n\n  return (\n    <div>\n      <Table columns={columns} rows={rows} />\n    </div>\n  );\n};\n\nexport default CustomerList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,KAAK,QAA+B,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAyBnE,MAAMC,YAA6B,GAAGA,CAAC;EAAEC,SAAS;EAAEC;AAAqB,CAAC,KAAK;EAC7E,MAAMC,OAAmC,GAAG,CAC1C;IACEC,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,cAAc;IACrBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,WAAW;IAClBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZE,UAAU,EAAGC,QAAqB,iBAChCV,OAAA;MAAAW,QAAA,EAAOD,QAAQ,CAACE,cAAc,GAAG,UAAU,GAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAO;EAEpE,CAAC,EACD;IACET,KAAK,EAAE,UAAU;IACjBE,UAAU,EAAGC,QAAqB,iBAChCV,OAAA,CAAAE,SAAA;MAAAS,QAAA,gBACEX,OAAA,CAACL,MAAM;QACLsB,QAAQ,EAAErB,QAAS;QACnBsB,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC,OAAO;QACZC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,YAAYZ,QAAQ,CAACa,EAAE,EAAE,CAAE;QACtDC,KAAK,EAAE;UAAEC,WAAW,EAAE;QAAM;MAAE;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/B,CAAC,eACFhB,OAAA,CAACL,MAAM;QACLsB,QAAQ,EAAEpB,SAAU;QACpBqB,IAAI,EAAC,GAAG;QACRC,IAAI,EAAC,OAAO;QACZC,OAAO,EAAEA,CAAA,KAAMf,oBAAoB,CAACqB,MAAM,CAAChB,QAAQ,CAACa,EAAE,CAAC;MAAE;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC1D,CAAC;IAAA,eACF;EAEN,CAAC,CACF;EAED,MAAMW,IAAmB,GAAGvB,SAAS,CAACwB,GAAG,CAAElB,QAAQ,KAAM;IACvD,GAAGA,QAAQ;IACXa,EAAE,EAAEb,QAAQ,CAACa,EAAE,CAACM,QAAQ,CAAC;EAC3B,CAAC,CAAC,CAAC;EAEH,oBACE7B,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACF,KAAK;MAACQ,OAAO,EAAEA,OAAQ;MAACqB,IAAI,EAAEA;IAAK;MAAAd,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACc,EAAA,GApEI3B,YAA6B;AAsEnC,eAAeA,YAAY;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}