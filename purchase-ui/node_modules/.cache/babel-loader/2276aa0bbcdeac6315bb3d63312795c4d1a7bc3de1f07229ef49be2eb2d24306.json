{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerList.tsx\";\nimport React from 'react';\nimport { Table } from '@consta/uikit/Table';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { Button } from '@consta/uikit/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerList = ({\n  customers,\n  handleDeleteCustomer,\n  openEditModal\n}) => {\n  const columns = [{\n    title: 'Код контрагента',\n    accessor: 'customerCode'\n  }, {\n    title: 'Наименование',\n    accessor: 'customerName'\n  }, {\n    title: 'ИНН',\n    accessor: 'customerInn'\n  }, {\n    title: 'КПП',\n    accessor: 'customerKpp'\n  }, {\n    title: 'Юридический адрес',\n    accessor: 'customerLegalAddress'\n  }, {\n    title: 'Почтовый адрес',\n    accessor: 'customerPostalAddress'\n  }, {\n    title: 'Электронная почта',\n    accessor: 'customerEmail'\n  }, {\n    title: 'Действия',\n    accessor: 'actions'\n  }];\n  const rows = customers.map(customer => ({\n    id: customer.id.toString(),\n    customerCode: customer.customerCode,\n    customerName: customer.customerName,\n    customerInn: customer.customerInn,\n    customerKpp: customer.customerKpp,\n    customerLegalAddress: customer.customerLegalAddress,\n    customerPostalAddress: customer.customerPostalAddress,\n    customerEmail: customer.customerEmail,\n    actions: /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex',\n        gap: '8px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        iconLeft: IconEdit,\n        size: \"s\",\n        onClick: () => openEditModal(customer)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        iconLeft: IconTrash,\n        size: \"s\",\n        onClick: () => handleDeleteCustomer(customer.id)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }));\n  return /*#__PURE__*/_jsxDEV(Table, {\n    columns: columns,\n    rows: rows\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 10\n  }, this);\n};\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","Table","IconEdit","IconTrash","Button","jsxDEV","_jsxDEV","CustomerList","customers","handleDeleteCustomer","openEditModal","columns","title","accessor","rows","map","customer","id","toString","customerCode","customerName","customerInn","customerKpp","customerLegalAddress","customerPostalAddress","customerEmail","actions","style","display","gap","children","iconLeft","size","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerList.tsx"],"sourcesContent":["import React from 'react';\nimport {\n  Table,\n  TableColumn,\n  TableRow as ConstaTableRow,\n} from '@consta/uikit/Table';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { Button } from '@consta/uikit/Button';\n\ninterface Customer {\n  id: number;\n  customerCode: string;\n  customerName: string;\n  customerInn: string;\n  customerKpp: string;\n  customerLegalAddress: string;\n  customerPostalAddress: string;\n  customerEmail: string;\n  customerCodeMain: string | null;\n  isOrganization: boolean;\n  isPerson: boolean;\n}\n\ninterface CustomTableRow extends ConstaTableRow {\n  id: string;\n  customerCode: string;\n  customerName: string;\n  customerInn: string;\n  customerKpp: string;\n  customerLegalAddress: string;\n  customerPostalAddress: string;\n  customerEmail: string;\n  actions: JSX.Element;\n}\n\ninterface Props {\n  customers: Customer[];\n  handleDeleteCustomer: (id: number) => void;\n  openEditModal: (customer: Customer) => void;\n}\n\nconst CustomerList: React.FC<Props> = ({\n  customers,\n  handleDeleteCustomer,\n  openEditModal,\n}) => {\n  const columns: TableColumn<CustomTableRow>[] = [\n    {\n      title: 'Код контрагента',\n      accessor: 'customerCode',\n    },\n    {\n      title: 'Наименование',\n      accessor: 'customerName',\n    },\n    {\n      title: 'ИНН',\n      accessor: 'customerInn',\n    },\n    {\n      title: 'КПП',\n      accessor: 'customerKpp',\n    },\n    {\n      title: 'Юридический адрес',\n      accessor: 'customerLegalAddress',\n    },\n    {\n      title: 'Почтовый адрес',\n      accessor: 'customerPostalAddress',\n    },\n    {\n      title: 'Электронная почта',\n      accessor: 'customerEmail',\n    },\n    {\n      title: 'Действия',\n      accessor: 'actions',\n    },\n  ];\n\n  const rows: CustomTableRow[] = customers.map((customer) => ({\n    id: customer.id.toString(),\n    customerCode: customer.customerCode,\n    customerName: customer.customerName,\n    customerInn: customer.customerInn,\n    customerKpp: customer.customerKpp,\n    customerLegalAddress: customer.customerLegalAddress,\n    customerPostalAddress: customer.customerPostalAddress,\n    customerEmail: customer.customerEmail,\n    actions: (\n      <div style={{ display: 'flex', gap: '8px' }}>\n        <Button\n          iconLeft={IconEdit}\n          size=\"s\"\n          onClick={() => openEditModal(customer)}\n        />\n        <Button\n          iconLeft={IconTrash}\n          size=\"s\"\n          onClick={() => handleDeleteCustomer(customer.id)}\n        />\n      </div>\n    ),\n  }));\n\n  return <Table columns={columns} rows={rows} />;\n};\n\nexport default CustomerList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SACEC,KAAK,QAGA,qBAAqB;AAC5B,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,MAAM,QAAQ,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAkC9C,MAAMC,YAA6B,GAAGA,CAAC;EACrCC,SAAS;EACTC,oBAAoB;EACpBC;AACF,CAAC,KAAK;EACJ,MAAMC,OAAsC,GAAG,CAC7C;IACEC,KAAK,EAAE,iBAAiB;IACxBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,cAAc;IACrBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,KAAK;IACZC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,gBAAgB;IACvBC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,mBAAmB;IAC1BC,QAAQ,EAAE;EACZ,CAAC,EACD;IACED,KAAK,EAAE,UAAU;IACjBC,QAAQ,EAAE;EACZ,CAAC,CACF;EAED,MAAMC,IAAsB,GAAGN,SAAS,CAACO,GAAG,CAAEC,QAAQ,KAAM;IAC1DC,EAAE,EAAED,QAAQ,CAACC,EAAE,CAACC,QAAQ,CAAC,CAAC;IAC1BC,YAAY,EAAEH,QAAQ,CAACG,YAAY;IACnCC,YAAY,EAAEJ,QAAQ,CAACI,YAAY;IACnCC,WAAW,EAAEL,QAAQ,CAACK,WAAW;IACjCC,WAAW,EAAEN,QAAQ,CAACM,WAAW;IACjCC,oBAAoB,EAAEP,QAAQ,CAACO,oBAAoB;IACnDC,qBAAqB,EAAER,QAAQ,CAACQ,qBAAqB;IACrDC,aAAa,EAAET,QAAQ,CAACS,aAAa;IACrCC,OAAO,eACLpB,OAAA;MAAKqB,KAAK,EAAE;QAAEC,OAAO,EAAE,MAAM;QAAEC,GAAG,EAAE;MAAM,CAAE;MAAAC,QAAA,gBAC1CxB,OAAA,CAACF,MAAM;QACL2B,QAAQ,EAAE7B,QAAS;QACnB8B,IAAI,EAAC,GAAG;QACRC,OAAO,EAAEA,CAAA,KAAMvB,aAAa,CAACM,QAAQ;MAAE;QAAAkB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACxC,CAAC,eACF/B,OAAA,CAACF,MAAM;QACL2B,QAAQ,EAAE5B,SAAU;QACpB6B,IAAI,EAAC,GAAG;QACRC,OAAO,EAAEA,CAAA,KAAMxB,oBAAoB,CAACO,QAAQ,CAACC,EAAE;MAAE;QAAAiB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC;EAET,CAAC,CAAC,CAAC;EAEH,oBAAO/B,OAAA,CAACL,KAAK;IAACU,OAAO,EAAEA,OAAQ;IAACG,IAAI,EAAEA;EAAK;IAAAoB,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAE,CAAC;AAChD,CAAC;AAACC,EAAA,GAlEI/B,YAA6B;AAoEnC,eAAeA,YAAY;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}