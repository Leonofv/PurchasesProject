{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nfunction ownKeys(a, b) {\n  var c = Object.keys(a);\n  if (Object.getOwnPropertySymbols) {\n    var d = Object.getOwnPropertySymbols(a);\n    b && (d = d.filter(function (b) {\n      return Object.getOwnPropertyDescriptor(a, b).enumerable;\n    })), c.push.apply(c, d);\n  }\n  return c;\n}\nfunction _objectSpread(a) {\n  for (var b, c = 1; c < arguments.length; c++) b = null == arguments[c] ? {} : arguments[c], c % 2 ? ownKeys(Object(b), !0).forEach(function (c) {\n    _defineProperty(a, c, b[c]);\n  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(b)) : ownKeys(Object(b)).forEach(function (c) {\n    Object.defineProperty(a, c, Object.getOwnPropertyDescriptor(b, c));\n  });\n  return a;\n}\nimport \"./IconsProvider.css\";\nimport React, { createContext, useMemo, useState } from \"react\";\nimport { cn } from \"../../utils/bem\";\nimport { IconsProviderList } from \"./IconsProviderList/IconsProviderList\";\nconst defaultContextValue = {\n  addIcon: void 0,\n  removeIcon: void 0\n};\nexport const cnIcons = cn(\"Icons\");\nexport const IconsContext = createContext(defaultContextValue);\nexport const IconsProvider = ({\n  children: a,\n  container: b = window.document.body\n}) => {\n  const [c, d] = useState({}),\n    e = useMemo(() => {\n      return {\n        addIcon: (a, b = \"m\", c) => {\n          const e = `${a}_${b}`;\n          d(a => _objectSpread(_objectSpread({}, a), {}, {\n            [e]: {\n              count: \"object\" == typeof a[e] ? a[e].count + 1 : 1,\n              svg: c\n            }\n          }));\n        },\n        removeIcon: (a, b = \"m\") => {\n          const c = `${a}_${b}`;\n          d(a => {\n            const b = _objectSpread({}, a);\n            return 1 === b[c].count ? delete b[c] : b[c].count -= 1, b;\n          });\n        }\n      };\n    }, []);\n  return React.createElement(React.Fragment, null, React.createElement(IconsContext.Provider, {\n    value: e\n  }, a), React.createElement(IconsProviderList, {\n    icons: c,\n    container: b\n  }));\n};","map":{"version":3,"names":["React","createContext","useMemo","useState","cn","IconsProviderList","defaultContextValue","addIcon","removeIcon","cnIcons","IconsContext","IconsProvider","children","a","container","b","window","document","body","c","d","e","_objectSpread","count","svg","createElement","Fragment","Provider","value","icons"],"sources":["/Users/leonofv/Desktop/purchase-ui/node_modules/@consta/src/components/IconsProvider/IconsProvider.tsx"],"sourcesContent":["import './IconsProvider.css';\n\nimport React, { createContext, useMemo, useState } from 'react';\n\nimport { IconProps } from '##/icons/Icon';\nimport { cn } from '##/utils/bem';\n\nimport { IconsProviderList } from './IconsProviderList/IconsProviderList';\n\nexport type Icons = Record<\n  string,\n  { count: number; svg: React.ReactElement | null }\n>;\n\ntype IconsContextAddIcon = (\n  iconName: string,\n  size: IconProps['size'],\n  svg: React.ReactElement | null,\n) => void;\n\ntype IconsContextRemoveIcon = (\n  iconName: string,\n  size: IconProps['size'],\n) => void;\n\ntype IconsContextParams = {\n  addIcon: IconsContextAddIcon | undefined;\n  removeIcon: IconsContextRemoveIcon | undefined;\n};\n\nconst defaultContextValue: IconsContextParams = {\n  addIcon: undefined,\n  removeIcon: undefined,\n};\n\nexport const cnIcons = cn('Icons');\n\nexport const IconsContext =\n  createContext<IconsContextParams>(defaultContextValue);\n\nexport const IconsProvider: React.FC<{\n  children: React.ReactNode;\n  container?: Element;\n}> = ({ children, container = window.document.body }) => {\n  const [icons, setIcons] = useState<Icons>({});\n\n  const value = useMemo(() => {\n    const addIcon: IconsContextAddIcon = (name, size = 'm', svg) => {\n      const key = `${name}_${size}`;\n      setIcons((prev) => ({\n        ...prev,\n        [key]: {\n          count: typeof prev[key] === 'object' ? prev[key].count + 1 : 1,\n          svg,\n        },\n      }));\n    };\n\n    const removeIcon: IconsContextRemoveIcon = (name, size = 'm') => {\n      const key = `${name}_${size}`;\n      setIcons((prev) => {\n        const copyIcons = { ...prev };\n        if (copyIcons[key].count === 1) {\n          delete copyIcons[key];\n        } else {\n          copyIcons[key].count -= 1;\n        }\n        return copyIcons;\n      });\n    };\n\n    return { addIcon, removeIcon };\n  }, []);\n\n  return (\n    <>\n      <IconsContext.Provider value={value}>{children}</IconsContext.Provider>\n      <IconsProviderList icons={icons} container={container} />\n    </>\n  );\n};\n"],"mappings":";;;;;;;;;;;;;;;;;;;AAAA;AAEA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,OAA/B,EAAwCC,QAAxC,QAAwD,OAAxD;AAGA,SAASC,EAAT;AAEA,SAASC,iBAAT;AAuBA,MAAMC,mBAAuC,GAAG;EAC9CC,OAAO,QADuC;EAE9CC,UAAU;AAFoC,CAAhD;AAKA,OAAO,MAAMC,OAAO,GAAGL,EAAE,CAAC,OAAD,CAAlB;AAEP,OAAO,MAAMM,YAAY,GACvBT,aAAa,CAAqBK,mBAArB,CADR;AAGP,OAAO,MAAMK,aAGX,GAAGA,CAAC;EAAEC,QAAQ,EAARC,CAAF;EAAYC,SAAS,EAATC,CAAS,GAAGC,MAAM,CAACC,QAAP,CAAgBC;AAAxC,CAAD,KAAoD;EAAA,MACjD,CAACC,CAAD,EAAQC,CAAR,IAAoBjB,QAAQ,CAAQ,EAAR,CADqB;IAGjDkB,CAAK,GAAGnB,OAAO,CAAC,MAAM;MAyB1B,OAAO;QAAEK,OAAO,EAxBqBA,CAACM,CAAD,EAAOE,CAAI,GAAG,GAAd,EAAmBI,CAAnB,KAA2B;UAC9D,MAAME,CAAG,GAAI,GAAER,CAAK,IAAGE,CAAK,EAA5B;UACAK,CAAQ,CAAEP,CAAD,IAAAS,aAAA,CAAAA,aAAA,KACJT,CADI;YAEP,CAACQ,CAAD,GAAO;cACLE,KAAK,EAAuB,QAArB,WAAOV,CAAI,CAACQ,CAAD,CAAX,GAAgCR,CAAI,CAACQ,CAAD,CAAJ,CAAUE,KAAV,GAAkB,CAAlD,GAAsD,CADxD;cAELC,GAAG,EAAHL;YAFK;UAFA,EAAD,CAOT;QAAA,CAeM;QAAWX,UAAU,EAbeA,CAACK,CAAD,EAAOE,CAAI,GAAG,GAAd,KAAsB;UAC/D,MAAMI,CAAG,GAAI,GAAEN,CAAK,IAAGE,CAAK,EAA5B;UACAK,CAAQ,CAAEP,CAAD,IAAU;YACjB,MAAME,CAAS,GAAAO,aAAA,KAAQT,CAAR,CAAf;YAMA,OAL6B,CAAzB,KAAAE,CAAS,CAACI,CAAD,CAAT,CAAeI,KAKnB,GAJE,OAAOR,CAAS,CAACI,CAAD,CAIlB,GAFEJ,CAAS,CAACI,CAAD,CAAT,CAAeI,KAAf,IAAwB,CAE1B,EAAOR,CACR;UAAA,CARO,CAST;QAAA;MAEM,CACR;IAAA,CA1BoB,EA0BlB,EA1BkB,CAHkC;EA+BvD,OACEf,KAAA,CAAAyB,aAAA,CAAAzB,KAAA,CAAA0B,QAAA,QACE1B,KAAA,CAAAyB,aAAA,CAACf,YAAD,CAAciB,QAAd;IAAuBC,KAAK,EAAEP;EAA9B,GAAsCR,CAAtC,CADF,EAEEb,KAAA,CAAAyB,aAAA,CAACpB,iBAAD;IAAmBwB,KAAK,EAAEV,CAA1B;IAAiCL,SAAS,EAAEC;EAA5C,EAFF,CAKH;AAAA,CAxCM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}