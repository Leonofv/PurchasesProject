{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport AddCustomerModal from './AddCustomerModal';\nimport EditCustomerModal from './EditCustomerModal';\nimport CustomerPanel from './CustomerPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerPage = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [filteredCustomers, setFilteredCustomers] = useState([]);\n  const [currentCustomer, setCurrentCustomer] = useState(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [filter, setFilter] = useState('all');\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    try {\n      const response = await PurchaseApi.getCustomers();\n      setCustomers(response.data);\n    } catch (error) {\n      console.error('Error fetching customers', error);\n    }\n  };\n  const filterCustomers = useCallback(() => {\n    let filtered = customers;\n    if (filter === 'hasClient') {\n      filtered = customers.filter(customer => customer.customerCodeMain);\n    } else if (filter === 'noClient') {\n      filtered = customers.filter(customer => !customer.customerCodeMain);\n    }\n    setFilteredCustomers(filtered);\n  }, [filter, customers]);\n  useEffect(() => {\n    filterCustomers();\n  }, [filterCustomers]);\n  const handleDeleteCustomer = async id => {\n    try {\n      await PurchaseApi.deleteCustomer(id);\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error deleting customer', error);\n    }\n  };\n  const handleSaveCustomer = async customer => {\n    try {\n      if (customer.id) {\n        await PurchaseApi.updateCustomer(customer.id, customer);\n      } else {\n        await PurchaseApi.createCustomer(customer);\n      }\n      fetchCustomers();\n      setIsAddModalOpen(false);\n      setIsEditModalOpen(false);\n    } catch (error) {\n      console.error('Error saving customer', error);\n      throw error;\n    }\n  };\n  const openEditModal = customer => {\n    setCurrentCustomer(customer);\n    setIsEditModalOpen(true);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomerPanel, {\n      customers: filteredCustomers,\n      handleDeleteCustomer: handleDeleteCustomer,\n      openEditModal: openEditModal,\n      openAddModal: () => setIsAddModalOpen(true),\n      setFilter: setFilter,\n      filter: filter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddCustomerModal, {\n      isOpen: isAddModalOpen,\n      onClose: () => setIsAddModalOpen(false),\n      handleSaveCustomer: handleSaveCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(EditCustomerModal, {\n      isOpen: isEditModalOpen,\n      onClose: () => setIsEditModalOpen(false),\n      handleSaveCustomer: handleSaveCustomer,\n      currentCustomer: currentCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerPage, \"LUMQdpNDpLTnakGK1C57LLHf3y0=\");\n_c = CustomerPage;\nexport default CustomerPage;\nvar _c;\n$RefreshReg$(_c, \"CustomerPage\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","PurchaseApi","AddCustomerModal","EditCustomerModal","CustomerPanel","jsxDEV","_jsxDEV","CustomerPage","_s","customers","setCustomers","filteredCustomers","setFilteredCustomers","currentCustomer","setCurrentCustomer","isAddModalOpen","setIsAddModalOpen","isEditModalOpen","setIsEditModalOpen","filter","setFilter","fetchCustomers","response","getCustomers","data","error","console","filterCustomers","filtered","customer","customerCodeMain","handleDeleteCustomer","id","deleteCustomer","handleSaveCustomer","updateCustomer","createCustomer","openEditModal","children","openAddModal","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerPage.tsx"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport AddCustomerModal from './AddCustomerModal';\nimport EditCustomerModal from './EditCustomerModal';\nimport { Customer } from '../../intefaces/CustomerInteface';\nimport CustomerPanel from './CustomerPanel';\n\nconst CustomerPage: React.FC = () => {\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [filteredCustomers, setFilteredCustomers] = useState<Customer[]>([]);\n  const [currentCustomer, setCurrentCustomer] = useState<Customer | null>(null);\n  const [isAddModalOpen, setIsAddModalOpen] = useState(false);\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [filter, setFilter] = useState<'all' | 'hasClient' | 'noClient'>('all');\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  const fetchCustomers = async () => {\n    try {\n      const response = await PurchaseApi.getCustomers();\n      setCustomers(response.data);\n    } catch (error) {\n      console.error('Error fetching customers', error);\n    }\n  };\n\n  const filterCustomers = useCallback(() => {\n    let filtered = customers;\n    if (filter === 'hasClient') {\n      filtered = customers.filter((customer) => customer.customerCodeMain);\n    } else if (filter === 'noClient') {\n      filtered = customers.filter((customer) => !customer.customerCodeMain);\n    }\n    setFilteredCustomers(filtered);\n  }, [filter, customers]);\n\n  useEffect(() => {\n    filterCustomers();\n  }, [filterCustomers]);\n\n  const handleDeleteCustomer = async (id: number) => {\n    try {\n      await PurchaseApi.deleteCustomer(id);\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error deleting customer', error);\n    }\n  };\n\n  const handleSaveCustomer = async (customer: Customer) => {\n    try {\n      if (customer.id) {\n        await PurchaseApi.updateCustomer(customer.id, customer);\n      } else {\n        await PurchaseApi.createCustomer(customer);\n      }\n      fetchCustomers();\n      setIsAddModalOpen(false);\n      setIsEditModalOpen(false);\n    } catch (error) {\n      console.error('Error saving customer', error);\n      throw error;\n    }\n  };\n\n  const openEditModal = (customer: Customer) => {\n    setCurrentCustomer(customer);\n    setIsEditModalOpen(true);\n  };\n\n  return (\n    <div>\n      <CustomerPanel\n        customers={filteredCustomers}\n        handleDeleteCustomer={handleDeleteCustomer}\n        openEditModal={openEditModal}\n        openAddModal={() => setIsAddModalOpen(true)}\n        setFilter={setFilter}\n        filter={filter}\n      />\n      <AddCustomerModal\n        isOpen={isAddModalOpen}\n        onClose={() => setIsAddModalOpen(false)}\n        handleSaveCustomer={handleSaveCustomer}\n      />\n      <EditCustomerModal\n        isOpen={isEditModalOpen}\n        onClose={() => setIsEditModalOpen(false)}\n        handleSaveCustomer={handleSaveCustomer}\n        currentCustomer={currentCustomer}\n      />\n    </div>\n  );\n};\n\nexport default CustomerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}