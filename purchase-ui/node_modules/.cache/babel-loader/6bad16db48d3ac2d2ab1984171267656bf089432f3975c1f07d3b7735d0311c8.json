{"ast":null,"code":"export var sortObj = function (a) {\n  return Object.fromEntries(Object.entries(a).sort(function (c, a) {\n    return c[1] - a[1];\n  }));\n};\nexport var mapping = function (a, b) {\n  var c = {};\n  for (var d in sortObj(b)) Object.prototype.hasOwnProperty.call(b, d) && (c[d] = a >= b[d]);\n  return c;\n};","map":{"version":3,"names":["sortObj","a","Object","fromEntries","entries","sort","c","mapping","b","d","prototype","hasOwnProperty","call"],"sources":["/Users/leonofv/Desktop/purchase-ui/node_modules/@consta/src/hooks/useBreakpoints/mapping.ts"],"sourcesContent":["import { Map, Returned } from './types';\n\nexport const sortObj = <T extends {}>(obj: T) =>\n  Object.fromEntries(\n    (Object.entries(obj) as [string, number][]).sort((a, b) => a[1] - b[1]),\n  ) as T;\n\nexport const mapping = <POINTS extends string>(\n  width: number,\n  map: Map<POINTS>,\n): Returned<POINTS> => {\n  const points = {} as Returned<POINTS>;\n\n  for (const key in sortObj(map)) {\n    if (Object.prototype.hasOwnProperty.call(map, key)) {\n      points[key] = width >= map[key];\n    }\n  }\n\n  return points;\n};\n"],"mappings":"AAEA,OAAO,IAAMA,OAAO,GAAG,SAAAA,CAAeC,CAAf;EAAA,OACrBC,MAAM,CAACC,WAAP,CACGD,MAAM,CAACE,OAAP,CAAeH,CAAf,CAAD,CAA4CI,IAA5C,CAAiD,UAACC,CAAD,EAAIL,CAAJ;IAAA,OAAUK,CAAC,CAAC,CAAD,CAAD,GAAOL,CAAC,CAAC,CAAD,CAAlB;EAAA,CAAjD,CADF,CADqB;AAAA,CAAhB;AAKP,OAAO,IAAMM,OAAO,GAAG,SAAAA,CACrBN,CADqB,EAErBO,CAFqB,EAGA;EACrB,IAAMF,CAAM,GAAG,EAAf;EAEA,KAAK,IAAMG,CAAX,IAAkBT,OAAO,CAACQ,CAAD,CAAzB,EACMN,MAAM,CAACQ,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCJ,CAArC,EAA0CC,CAA1C,CADN,KAEIH,CAAM,CAACG,CAAD,CAAN,GAAcR,CAAK,IAAIO,CAAG,CAACC,CAAD,CAF9B;EAMA,OAAOH,CACR;AAAA,CAbM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}