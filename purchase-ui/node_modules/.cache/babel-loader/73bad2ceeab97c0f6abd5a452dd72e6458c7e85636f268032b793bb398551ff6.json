{"ast":null,"code":"import { useMemo } from \"react\";\nimport { useResizeObserved } from \"../useResizeObserved\";\nimport { getElementSize } from \"./getElementSize\";\nexport function useComponentSize(a) {\n  var b = useMemo(function () {\n    return [a];\n  }, [a.current]);\n  return useResizeObserved(b, getElementSize)[0];\n}","map":{"version":3,"names":["useMemo","useResizeObserved","getElementSize","useComponentSize","a","b","current"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/node_modules/@consta/src/hooks/useComponentSize/useComponentSize.tsx"],"sourcesContent":["import { useMemo } from 'react';\n\nimport { useResizeObserved } from '##/hooks/useResizeObserved';\n\nimport { getElementSize } from './getElementSize';\nimport { ComponentSize } from './types';\n\nexport function useComponentSize(\n  ref: React.RefObject<HTMLElement | SVGGraphicsElement>,\n): ComponentSize {\n  const refs = useMemo(\n    () => [ref],\n    // Если реф начал указывать на другой элемент, нужно обновить подписки\n    [ref.current],\n  );\n  return useResizeObserved(refs, getElementSize)[0];\n}\n"],"mappings":"AAAA,SAASA,OAAT,QAAwB,OAAxB;AAEA,SAASC,iBAAT;AAEA,SAASC,cAAT;AAGA,OAAO,SAASC,gBAATA,CACLC,CADK,EAEU;EACf,IAAMC,CAAI,GAAGL,OAAO,CAClB;IAAA,OAAM,CAACI,CAAD,CAAN;EAAA,CADkB,EAGlB,CAACA,CAAG,CAACE,OAAL,CAHkB,CAApB;EAKA,OAAOL,iBAAiB,CAACI,CAAD,EAAOH,cAAP,CAAjB,CAAwC,CAAxC,CACR;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}