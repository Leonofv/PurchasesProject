{"ast":null,"code":"import computeScrollIntoView from \"compute-scroll-into-view\";\nexport function scrollIntoView(a, b) {\n  var c = computeScrollIntoView(a, {\n    boundary: b,\n    block: \"nearest\",\n    scrollMode: \"if-needed\"\n  });\n  c.forEach(function (a) {\n    var b = a.el,\n      c = a.top,\n      d = a.left;\n    b.scrollTop = c, b.scrollLeft = d;\n  });\n}","map":{"version":3,"names":["computeScrollIntoView","scrollIntoView","a","b","c","boundary","block","scrollMode","forEach","el","top","d","left","scrollTop","scrollLeft"],"sources":["/Users/leonofv/Desktop/purchase-ui/node_modules/@consta/src/utils/scrollIntoView.ts"],"sourcesContent":["import computeScrollIntoView from 'compute-scroll-into-view';\n\nexport function scrollIntoView(\n  node: HTMLDivElement,\n  menuNode: HTMLDivElement,\n): void {\n  const actions = computeScrollIntoView(node, {\n    boundary: menuNode,\n    block: 'nearest',\n    scrollMode: 'if-needed',\n  });\n  actions.forEach((action) => {\n    const { el, top, left } = action;\n    el.scrollTop = top;\n    el.scrollLeft = left;\n  });\n}\n"],"mappings":"AAAA,OAAOA,qBAAP,MAAkC,0BAAlC;AAEA,OAAO,SAASC,cAATA,CACLC,CADK,EAELC,CAFK,EAGC;EACN,IAAMC,CAAO,GAAGJ,qBAAqB,CAACE,CAAD,EAAO;IAC1CG,QAAQ,EAAEF,CADgC;IAE1CG,KAAK,EAAE,SAFmC;IAG1CC,UAAU,EAAE;EAH8B,CAAP,CAArC;EAKAH,CAAO,CAACI,OAAR,CAAgB,UAACN,CAAD,EAAY;IAC1B,IAAQC,CAAR,GAA0BD,CAA1B,CAAQO,EAAR;MAAYL,CAAZ,GAA0BF,CAA1B,CAAYQ,GAAZ;MAAiBC,CAAjB,GAA0BT,CAA1B,CAAiBU,IAAjB;IACAT,CAAE,CAACU,SAAH,GAAeT,CAFW,EAG1BD,CAAE,CAACW,UAAH,GAAgBH,CACjB;EAAA,CAJD,CAKD;AAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}