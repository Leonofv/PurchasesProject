{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nvar _excluded = [\"columns\", \"rows\", \"size\", \"filters\", \"isResizable\", \"stickyHeader\", \"stickyColumns\", \"minColumnWidth\", \"activeRow\", \"verticalAlign\", \"headerVerticalAlign\", \"zebraStriped\", \"borderBetweenRows\", \"borderBetweenColumns\", \"emptyRowsPlaceholder\", \"defaultExpandAll\", \"className\", \"onRowHover\", \"onRowClick\", \"onRowCreate\", \"onCellClick\", \"getAdditionalClassName\", \"rowCreateText\", \"lazyLoad\", \"onSortBy\", \"onFiltersUpdated\", \"getTagLabel\", \"getCellWrap\", \"isExpandedRowsByDefault\"];\nfunction ownKeys(a, b) {\n  var c = Object.keys(a);\n  if (Object.getOwnPropertySymbols) {\n    var d = Object.getOwnPropertySymbols(a);\n    b && (d = d.filter(function (b) {\n      return Object.getOwnPropertyDescriptor(a, b).enumerable;\n    })), c.push.apply(c, d);\n  }\n  return c;\n}\nfunction _objectSpread(a) {\n  for (var b, c = 1; c < arguments.length; c++) b = null == arguments[c] ? {} : arguments[c], c % 2 ? ownKeys(Object(b), !0).forEach(function (c) {\n    _defineProperty(a, c, b[c]);\n  }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(a, Object.getOwnPropertyDescriptors(b)) : ownKeys(Object(b)).forEach(function (c) {\n    Object.defineProperty(a, c, Object.getOwnPropertyDescriptor(b, c));\n  });\n  return a;\n}\nimport \"./Table.css\";\nimport { IconSortDown } from \"@consta/icons/IconSortDown\";\nimport { IconSortUp } from \"@consta/icons/IconSortUp\";\nimport { IconUnsort } from \"@consta/icons/IconUnsort\";\nimport React, { useEffect, useMemo } from \"react\";\nimport { cnMixScrollBar } from \"../../mixs/MixScrollBar\";\nimport { useComponentSize } from \"../../hooks/useComponentSize/useComponentSize\";\nimport { useForkRef } from \"../../hooks/useForkRef/useForkRef\";\nimport { sortBy as sortByDefault, updateAt } from \"../../utils/array\";\nimport { cn } from \"../../utils/bem\";\nimport { setRef } from \"../../utils/setRef\";\nimport { isNotNil, isString } from \"../../utils/type-guards\";\nimport { Button } from \"../Button/Button\";\nimport { Text } from \"../Text/Text\";\nimport { TableCell } from \"./Cell/TableCell\";\nimport { fieldFiltersPresent, filterTableData, getSelectedFiltersList, isSelectedFiltersPresent, useSelectedFilters } from \"./filtering\";\nimport { TableHeader } from \"./Header/TableHeader\";\nimport { calulateColSpans, createSortingState, getColumnLeftOffset, getColumnsSize, getMergedArray, getNewSorting, Order, transformRows, useHeaderData, useLazyLoadData } from \"./helpers\";\nimport { TableResizer } from \"./Resizer/TableResizer\";\nimport { TableRowsCollapse } from \"./RowsCollapse/TableRowsCollapse\";\nimport { TableSelectedOptionsList } from \"./SelectedOptionsList/TableSelectedOptionsList\";\nexport { TableTextFilter } from \"./TextFilter/TableTextFilter\";\nexport { TableFilterContainer } from \"./FilterContainer/TableFilterContainer\";\nexport { TableNumberFilter } from \"./NumberFilter/TableNumberFilter\";\nexport { TableChoiceGroupFilter } from \"./ChoiceGroupFilter/TableChoiceGroupFilter\";\nvar cnTable = cn(\"Table\");\nexport var sizes = [\"s\", \"m\", \"l\"];\nexport var zebraStriped = [\"odd\", \"even\"];\nexport var headerVerticalAligns = [\"center\", \"bottom\"];\nvar createButtonSizeMap = {\n    s: \"xs\",\n    m: \"s\",\n    l: \"m\"\n  },\n  getColumnSortByField = function (a) {\n    return a.sortable && a.sortByField || a.accessor;\n  },\n  sortingData = function (a, b, c) {\n    if (c) return a;\n    if (!b) return a;\n    var d = sortByDefault(a, b.by, b.order, b.sortFn);\n    return d.some(function (a) {\n      var b;\n      return null === (b = a.rows) || void 0 === b ? void 0 : b.length;\n    }) ? d.map(function (a) {\n      return a.rows ? _objectSpread(_objectSpread({}, a), {}, {\n        rows: sortingData(a.rows, b, c)\n      }) : a;\n    }) : d;\n  },\n  defaultEmptyRowsPlaceholder = React.createElement(Text, {\n    as: \"span\",\n    view: \"primary\",\n    size: \"s\",\n    lineHeight: \"s\"\n  }, \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445\"),\n  InternalTable = function (a, b) {\n    var c,\n      d,\n      e,\n      f,\n      g = a.columns,\n      h = a.rows,\n      i = a.size,\n      j = void 0 === i ? \"l\" : i,\n      k = a.filters,\n      l = a.isResizable,\n      m = void 0 !== l && l,\n      n = a.stickyHeader,\n      o = a.stickyColumns,\n      p = void 0 === o ? 0 : o,\n      q = a.minColumnWidth,\n      r = void 0 === q ? 150 : q,\n      s = a.activeRow,\n      t = a.verticalAlign,\n      u = void 0 === t ? \"top\" : t,\n      v = a.headerVerticalAlign,\n      w = void 0 === v ? \"center\" : v,\n      x = a.zebraStriped,\n      y = a.borderBetweenRows,\n      z = a.borderBetweenColumns,\n      A = void 0 !== z && z,\n      B = a.emptyRowsPlaceholder,\n      C = void 0 === B ? defaultEmptyRowsPlaceholder : B,\n      D = a.defaultExpandAll,\n      E = a.className,\n      F = a.onRowHover,\n      G = a.onRowClick,\n      H = a.onRowCreate,\n      I = a.onCellClick,\n      J = a.getAdditionalClassName,\n      K = a.rowCreateText,\n      L = void 0 === K ? \"+ \\u0414\\u043E\\u0431\\u0430\\u0432\\u0438\\u0442\\u044C \\u0441\\u0442\\u0440\\u043E\\u043A\\u0443\" : K,\n      M = a.lazyLoad,\n      N = a.onSortBy,\n      O = a.onFiltersUpdated,\n      P = a.getTagLabel,\n      Q = a.getCellWrap,\n      R = a.isExpandedRowsByDefault,\n      S = void 0 !== R && R,\n      T = _objectWithoutProperties(a, _excluded),\n      U = useHeaderData(g),\n      V = U.headers,\n      W = U.flattenedHeaders,\n      X = U.lowHeaders,\n      Y = U.headerRowsRefs,\n      Z = U.headerRowsHeights,\n      $ = U.resizerTopOffsets,\n      _ = (null === (c = V[0][p - 1]) || void 0 === c ? void 0 : c.position.gridIndex) + ((null === (d = V[0][p - 1]) || void 0 === d ? void 0 : d.position.colSpan) || 1),\n      aa = function () {\n        return X.map(function (a) {\n          return a.width;\n        });\n      },\n      ba = React.useState(aa()),\n      ca = _slicedToArray(ba, 2),\n      da = ca[0],\n      ea = ca[1],\n      fa = React.useMemo(function () {\n        return k && k.filter(function (a) {\n          return a.id && a.field;\n        });\n      }, [k]);\n    React.useEffect(function () {\n      ea(aa());\n    }, [X.length]);\n    var ga = React.useState([]),\n      ha = _slicedToArray(ga, 2),\n      ia = ha[0],\n      ja = ha[1],\n      ka = React.useState(null),\n      la = _slicedToArray(ka, 2),\n      ma = la[0],\n      na = la[1],\n      oa = React.useState(null),\n      pa = _slicedToArray(oa, 2),\n      qa = pa[0],\n      ra = pa[1],\n      sa = React.useState({\n        top: 0,\n        left: 0\n      }),\n      ta = _slicedToArray(sa, 2),\n      ua = ta[0],\n      va = ta[1],\n      wa = React.useRef(null),\n      xa = React.useRef({}),\n      ya = React.useRef({}),\n      za = useSelectedFilters(fa, O),\n      Aa = za.selectedFilters,\n      Ba = za.updateSelectedFilters,\n      Ca = za.removeOneSelectedFilter,\n      Da = za.removeAllSelectedFilters,\n      Ea = React.useState([]),\n      Fa = _slicedToArray(Ea, 2),\n      Ga = Fa[0],\n      Ha = Fa[1];\n    React.useEffect(function () {\n      var a = g.find(function (a) {\n        return isString(a.order) && Object.prototype.hasOwnProperty.call(Order, a.order);\n      });\n      if (a) {\n        var b = createSortingState(getColumnSortByField(a), a.order, a.sortFn);\n        na(b);\n      }\n    }, [g]), useComponentSize(wa);\n    var Ia = (null === (e = wa.current) || void 0 === e ? void 0 : e.clientHeight) || 0,\n      Ja = (null === (f = wa.current) || void 0 === f ? void 0 : f.clientWidth) || 0,\n      Ka = 0 < ua.left,\n      La = 0 < ua.top,\n      Ma = s && s.onChange,\n      Na = function (a, b) {\n        ea(updateAt(da, a, b));\n      },\n      Oa = useMemo(function () {\n        var a = Object.values(xa.current).filter(isNotNil),\n          b = a.map(function (a) {\n            return a.getBoundingClientRect().width;\n          }),\n          c = getMergedArray(b, da);\n        return c.reduce(function (c, a) {\n          return (null !== c && void 0 !== c ? c : 0) + (null !== a && void 0 !== a ? a : 0);\n        });\n      }, [da, m]);\n    React.useLayoutEffect(function () {\n      var a = Object.values(xa.current).filter(isNotNil);\n      if (0 !== a.length) {\n        var b = a.map(function (a) {\n          return a.getBoundingClientRect().width;\n        });\n        if (ja(b), a[0].getBoundingClientRect().left !== a[a.length - 1].getBoundingClientRect().left) {\n          var h = getMergedArray(b, da);\n          if ((null !== Oa && void 0 !== Oa ? Oa : Ja) < Ja) {\n            for (var c, d = !1, e = g.length - 1; 0 < e; e--) if (c = g[e].width, !(c && 0 < c)) return h[e] = void 0, void (d = !0);\n            if (!d && Oa) {\n              var f;\n              h[h.length - 1] = (null !== (f = h[h.length - 1]) && void 0 !== f ? f : 0) + Ja - Oa;\n            }\n          }\n          return ea(h);\n        }\n        return 0 < Ja && !m ? ea(aa()) : void 0;\n      }\n    }, [Ja, Oa]);\n    var Pa = function (a) {\n        return getColumnSortByField(a) === (null === ma || void 0 === ma ? void 0 : ma.by);\n      },\n      Qa = function (a, b) {\n        return b >= p ? void 0 : getColumnLeftOffset({\n          columnIndex: a,\n          resizedColumnWidths: da,\n          initialColumnWidths: ia\n        });\n      },\n      Ra = function (a) {\n        var b = a.id,\n          c = a.e;\n        s && s.onChange && s.onChange({\n          id: s.id === b ? void 0 : b,\n          e: c\n        });\n      },\n      Sa = function (a) {\n        return function (b) {\n          return F && F({\n            id: a,\n            e: b\n          });\n        };\n      },\n      Ta = function (a, b) {\n        return function (c) {\n          return H && H({\n            e: c,\n            id: b,\n            index: a\n          });\n        };\n      },\n      Ua = function (a, b) {\n        var c = Math.min(r, ia[a]),\n          d = da[a] || ia[a],\n          e = Math.max(c, d + b);\n        Na(a, e);\n        var f = wa.current;\n        a === da.length - 1 && 0 < b && f && f.scrollBy(b, 0);\n      },\n      Va = getColumnLeftOffset({\n        columnIndex: p,\n        resizedColumnWidths: da,\n        initialColumnWidths: ia\n      }),\n      Wa = function (a) {\n        return a.map(function (a) {\n          var b,\n            c = a.position.gridIndex,\n            d = da[c],\n            e = ia[c],\n            f = d || e,\n            g = getColumnLeftOffset({\n              columnIndex: c,\n              resizedColumnWidths: da,\n              initialColumnWidths: ia\n            }),\n            h = p > a.position.topHeaderGridIndex,\n            i = p > c || Va + ua.left < g + f,\n            j = 0 < ((null === (b = Aa[a.accessor]) || void 0 === b ? void 0 : b.selected) || []).length;\n          return _objectSpread(_objectSpread({}, a), {}, {\n            filterable: !!(fa && fieldFiltersPresent(fa, a.accessor)),\n            isSortingActive: Pa(a),\n            isFilterActive: j,\n            isResized: !!f && f !== e,\n            isSticky: h,\n            showResizer: i,\n            columnWidth: f,\n            columnLeftOffset: g\n          });\n        });\n      },\n      Xa = Wa(W),\n      Ya = React.useMemo(function () {\n        return h.some(function (a) {\n          var b;\n          return !(!(null !== (b = a.rows) && void 0 !== b) || !b.length);\n        });\n      }, [h]),\n      Za = sortingData(h, ma, N),\n      $a = fa && isSelectedFiltersPresent(Aa) ? filterTableData({\n        data: Za,\n        filters: fa || [],\n        selectedFilters: Aa\n      }) : Za,\n      _a = M || {},\n      ab = _a.maxVisibleRows,\n      bb = void 0 === ab ? 210 : ab,\n      cb = _a.scrollableEl,\n      db = void 0 === cb ? wa.current : cb,\n      eb = useLazyLoadData(bb, db, !!M),\n      fb = eb.getSlicedRows,\n      gb = eb.setBoundaryRef,\n      hb = transformRows($a, Ga, S),\n      ib = fb(hb),\n      jb = {\n        \"--table-grid-template-columns\": getColumnsSize(da),\n        \"--table-width\": \"\".concat(Ja, \"px\")\n      },\n      kb = Wa(X).some(function (a) {\n        return a.mergeCells;\n      }),\n      lb = function (a) {\n        return function () {\n          return Ga.includes(a) ? void Ha(function (b) {\n            return b.filter(function (b) {\n              return b !== a;\n            });\n          }) : void Ha(function (b) {\n            return [].concat(_toConsumableArray(b), [a]);\n          });\n        };\n      },\n      mb = function (a, b) {\n        var c,\n          d = !(!(null !== (c = a.rows) && void 0 !== c) || !c.length) && 0 === b,\n          e = {\n            level: a.options.level,\n            isExpandedByDefault: S\n          };\n        if (!d || S) return e;\n        var f = Ga.includes(a.id),\n          g = lb(a.id);\n        return _objectSpread(_objectSpread({}, e), {}, {\n          withCollapseButton: d,\n          isExpanded: f,\n          toggleCollapse: g\n        });\n      },\n      nb = function (a, b, c) {\n        var d = [];\n        return a.forEach(function (a) {\n          var e, f;\n          if ((a.defaultExpand || 0 < (null !== (e = null === (f = a.rows) || void 0 === f ? void 0 : f.length) && void 0 !== e ? e : 0) && c) && d.push(a.id), a.rows) {\n            var g = nb(a.rows, b + 1, c);\n            d = [].concat(_toConsumableArray(d), _toConsumableArray(g)), 0 < g.length && -1 === d.indexOf(a.id) && d.push(a.id);\n          }\n        }), [].concat(_toConsumableArray(0 === b ? Ga : []), _toConsumableArray(d.filter(function (a) {\n          return -1 === Ga.indexOf(a);\n        })));\n      };\n    useEffect(function () {\n      h && Ha(nb(h, 0, D));\n    }, [h, D]);\n    var ob = function (a, b, c) {\n        var d = a.renderCell ? a.renderCell(b) : b[a.accessor];\n        if (!Ya || 0 !== c) return d;\n        var e = mb(b, c);\n        return React.createElement(TableRowsCollapse, e, d);\n      },\n      pb = useMemo(function () {\n        var a,\n          b = ib.length,\n          c = null !== (a = ib.slice(-1).pop()) && void 0 !== a ? a : {},\n          d = c.id;\n        return H ? React.createElement(\"div\", {\n          className: cnTable(b ? \"CreatRowCell\" : \"RowWithoutCells\")\n        }, React.createElement(Button, {\n          size: createButtonSizeMap[j],\n          form: \"brick\",\n          label: L,\n          view: \"clear\",\n          className: cnTable(\"CreateRowButton\"),\n          onClick: Ta(b, d),\n          width: \"full\"\n        })) : null;\n      }, [L, ib.length, H]),\n      qb = function (a, b, c, d) {\n        var e,\n          f = c.mergeCells,\n          g = c.accessor,\n          h = c.position,\n          j = c.getComparisonValue,\n          k = void 0 === j ? function (a) {\n            return a;\n          } : j,\n          l = ib[b - 1] && k(ib[b - 1][g]),\n          m = k(a[g]),\n          n = {\n            rowSpan: 1,\n            show: !1,\n            style: {\n              left: Qa(d, h.topHeaderGridIndex)\n            }\n          };\n        if (f && (ib[b - 1] && l !== m || 0 === b || l === m && null !== (e = ib[b - 1]) && void 0 !== e && e.rows)) {\n          if (!a.rows) for (var o, p = b; p < ib.length && ib[p + 1] && (o = k(ib[p + 1][g]), m === o && !ib[p].rows); p++) n.rowSpan++;\n          1 < n.rowSpan && (n.style[\"--row-span\"] = \"span \".concat(n.rowSpan)), n.show = !0;\n        }\n        return f || (n.show = !0), n;\n      },\n      rb = function (a) {\n        null === I || void 0 === I ? void 0 : I(a);\n      };\n    return React.createElement(\"div\", Object.assign({}, T, {\n      ref: useForkRef([wa, b]),\n      className: cnTable({\n        size: j,\n        isResizable: m,\n        zebraStriped: x,\n        withBorderBottom: !$a.length\n      }, [E, cnMixScrollBar()]),\n      style: jb,\n      onScroll: function handleScroll(a) {\n        a.target instanceof HTMLElement && a.target === wa.current && va({\n          top: a.target.scrollTop,\n          left: a.target.scrollLeft\n        });\n      }\n    }), Wa(X).map(function (a, b) {\n      return React.createElement(TableCell, {\n        type: \"resizer\",\n        key: b,\n        ref: function (a) {\n          xa.current[b] = a;\n        },\n        style: {\n          left: Qa(b, b)\n        },\n        onContextMenu: function onContextMenu(a) {\n          return rb({\n            e: a,\n            type: \"contextMenu\",\n            columnIdx: b,\n            ref: {\n              current: xa.current[b]\n            }\n          });\n        },\n        onClick: function onClick(a) {\n          return rb({\n            e: a,\n            type: \"click\",\n            columnIdx: b,\n            ref: {\n              current: xa.current[b]\n            }\n          });\n        },\n        column: a,\n        showVerticalShadow: Ka\n      }, m && React.createElement(TableResizer, {\n        height: Ia - $[b],\n        top: $[b],\n        isVisible: a.showResizer,\n        onResize: function onResize(a) {\n          return Ua(b, a);\n        },\n        onDoubleClick: function onDoubleClick() {\n          return Na(b, ia[b]);\n        }\n      }));\n    }), React.createElement(TableHeader, {\n      isStickyHeader: void 0 !== n && n,\n      headersWithMetaData: Xa,\n      headerRowsHeights: Z,\n      headerRowsRefs: Y,\n      getStickyLeftOffset: Qa,\n      stickyColumnsGrid: _,\n      showVerticalCellShadow: Ka,\n      headerVerticalAlign: w,\n      getSortIcon: function getSortIcon(a) {\n        return Pa(a) && (\"desc\" === (null === ma || void 0 === ma ? void 0 : ma.order) ? IconSortDown : IconSortUp) || IconUnsort;\n      },\n      handleSortClick: function handleSortClick(a) {\n        var b = getNewSorting(ma, getColumnSortByField(a), a.sortable && (null === a || void 0 === a ? void 0 : a.sortFn) || void 0),\n          c = b ? {\n            sortingBy: b.by,\n            sortOrder: b.order\n          } : null;\n        N && N(c), na(b);\n      },\n      handleFilterTogglerClick: function handleFilterTogglerClick(a) {\n        return function () {\n          ra(qa === a ? null : a);\n        };\n      },\n      handleCellClick: rb,\n      handleTooltipSave: function handleTooltipSave(a, b, c) {\n        Ba(a, b, c);\n      },\n      filters: fa,\n      visibleFilter: qa,\n      selectedFilters: Aa,\n      showHorizontalCellShadow: La,\n      borderBetweenColumns: A\n    }), fa && isSelectedFiltersPresent(Aa) && React.createElement(\"div\", {\n      className: cnTable(\"RowWithoutCells\")\n    }, React.createElement(TableSelectedOptionsList, {\n      values: getSelectedFiltersList({\n        filters: fa,\n        selectedFilters: Aa,\n        columns: X\n      }),\n      getTagLabel: P,\n      onRemove: function removeSelectedFilter(a) {\n        return function (b) {\n          Ca(a, b);\n        };\n      }(fa),\n      onReset: function resetSelectedFilters() {\n        fa && fa.length && Da(fa);\n      }\n    })), 0 < ib.length ? ib.map(function (a, b) {\n      var c = 0 == (b + 1) % 2 ? \"even\" : \"odd\",\n        d = Wa(X),\n        e = calulateColSpans(d, a);\n      return React.createElement(\"div\", {\n        key: a.id,\n        role: \"presentation\",\n        className: cnTable(\"CellsRow\", {\n          nth: c,\n          withMergedCells: kb\n        }),\n        onMouseEnter: Sa(a.id),\n        onMouseLeave: Sa(void 0),\n        onClick: function onClick(b) {\n          return G && G({\n            id: a.id,\n            e: b\n          });\n        }\n      }, d.map(function (c, d) {\n        var f = qb(a, b, c, d),\n          g = f.show,\n          h = f.style,\n          i = f.rowSpan,\n          j = e[d],\n          k = 0 < d ? e.slice(0, d).reduce(function (c, a) {\n            return c + a;\n          }) + 1 : 1;\n        if (g && 0 < j) {\n          var l;\n          return React.createElement(TableCell, {\n            type: \"content\",\n            key: c.accessor,\n            ref: function (c) {\n              ya.current[\"\".concat(d, \"-\").concat(a.id)] = c, setRef(gb(d, b), c);\n            },\n            style: _objectSpread(_objectSpread({}, h), {}, (l = {}, _defineProperty(l, \"--table-cell-col-start\", k), _defineProperty(l, \"--table-cell-col-end\", k + j), l)),\n            wrapperClassName: cnTable(\"ContentCell\", {\n              isActive: !!s && s.id === a.id,\n              isDarkned: !!s && s.id !== void 0 && s.id !== a.id,\n              isMerged: c.mergeCells && 1 < i\n            }),\n            className: null === J || void 0 === J ? void 0 : J({\n              column: c,\n              row: a,\n              isActive: !!s && s.id === a.id\n            }),\n            wrap: null === Q || void 0 === Q ? void 0 : Q(a),\n            onContextMenu: function onContextMenu(b) {\n              return rb({\n                e: b,\n                type: \"contextMenu\",\n                columnIdx: d,\n                rowId: a.id,\n                ref: {\n                  current: ya.current[\"\".concat(d, \"-\").concat(a.id)]\n                }\n              });\n            },\n            onClick: function onClick(b) {\n              Ra({\n                id: a.id,\n                e: b\n              }), rb({\n                e: b,\n                type: \"click\",\n                columnIdx: d,\n                rowId: a.id,\n                ref: {\n                  current: ya.current[\"\".concat(d, \"-\").concat(a.id)]\n                }\n              });\n            },\n            column: c,\n            verticalAlign: u,\n            isClickable: !!Ma,\n            showVerticalShadow: Ka && (null === c || void 0 === c ? void 0 : c.position.gridIndex) + ((null === c || void 0 === c ? void 0 : c.position.colSpan) || 1) === _,\n            isBorderTop: 0 < b && void 0 !== y && y,\n            isBorderLeft: 0 < d && A\n          }, ob(c, a, d));\n        }\n        return null;\n      }));\n    }) : React.createElement(\"div\", {\n      className: cnTable(\"RowWithoutCells\")\n    }, React.createElement(\"div\", {\n      className: cnTable(\"EmptyCell\")\n    }, function renderEmptyRowsPlaceholder(a) {\n      return \"string\" == typeof a ? React.createElement(Text, {\n        size: \"s\",\n        view: \"primary\",\n        lineHeight: \"m\"\n      }, a) : a;\n    }(C))), pb);\n  };\nexport var Table = React.forwardRef(InternalTable);","map":{"version":3,"names":["IconSortDown","IconSortUp","IconUnsort","React","useEffect","useMemo","cnMixScrollBar","useComponentSize","useForkRef","sortBy","sortByDefault","updateAt","cn","setRef","isNotNil","isString","Button","Text","TableCell","fieldFiltersPresent","filterTableData","getSelectedFiltersList","isSelectedFiltersPresent","useSelectedFilters","TableHeader","calulateColSpans","createSortingState","getColumnLeftOffset","getColumnsSize","getMergedArray","getNewSorting","Order","transformRows","useHeaderData","useLazyLoadData","TableResizer","TableRowsCollapse","TableSelectedOptionsList","TableTextFilter","TableFilterContainer","TableNumberFilter","TableChoiceGroupFilter","cnTable","sizes","zebraStriped","headerVerticalAligns","createButtonSizeMap","s","m","l","getColumnSortByField","a","sortable","sortByField","accessor","sortingData","b","c","d","by","order","sortFn","some","rows","length","map","_objectSpread","defaultEmptyRowsPlaceholder","createElement","as","view","size","lineHeight","InternalTable","e","f","g","columns","h","i","j","k","filters","isResizable","n","stickyHeader","o","stickyColumns","p","q","minColumnWidth","r","activeRow","t","verticalAlign","u","v","headerVerticalAlign","w","x","y","borderBetweenRows","z","borderBetweenColumns","A","B","emptyRowsPlaceholder","C","D","defaultExpandAll","E","className","F","onRowHover","G","onRowClick","H","onRowCreate","I","onCellClick","J","getAdditionalClassName","K","rowCreateText","L","M","lazyLoad","N","onSortBy","O","onFiltersUpdated","P","getTagLabel","Q","getCellWrap","R","isExpandedRowsByDefault","S","T","_objectWithoutProperties","_excluded","U","V","headers","W","flattenedHeaders","X","lowHeaders","Y","headerRowsRefs","Z","headerRowsHeights","$","resizerTopOffsets","_","position","gridIndex","colSpan","aa","getColumnsWidth","width","ba","useState","ca","_slicedToArray","da","ea","fa","filter","id","field","ga","ha","ia","ja","ka","la","ma","na","oa","pa","qa","ra","sa","top","left","ta","ua","va","wa","useRef","xa","ya","za","Aa","selectedFilters","Ba","updateSelectedFilters","Ca","removeOneSelectedFilter","Da","removeAllSelectedFilters","Ea","Fa","Ga","Ha","find","Object","prototype","hasOwnProperty","call","Ia","current","clientHeight","Ja","clientWidth","Ka","La","Ma","onChange","Na","updateColumnWidth","Oa","values","getBoundingClientRect","reduce","useLayoutEffect","Pa","isSortedByColumn","Qa","getStickyLeftOffset","columnIndex","resizedColumnWidths","initialColumnWidths","Ra","handleSelectRow","Sa","handleRowHover","Ta","handleRowCreate","index","Ua","handleColumnResize","Math","min","max","scrollBy","Va","Wa","columnsWithMetaData","topHeaderGridIndex","selected","filterable","isSortingActive","isFilterActive","isResized","isSticky","showResizer","columnWidth","columnLeftOffset","Xa","Ya","Za","$a","data","_a","ab","maxVisibleRows","bb","cb","scrollableEl","db","eb","fb","getSlicedRows","gb","setBoundaryRef","hb","ib","jb","concat","kb","mergeCells","lb","handleExpandRow","includes","_toConsumableArray","mb","getCollapseRollProps","level","options","isExpandedByDefault","withCollapseButton","isExpanded","toggleCollapse","nb","getExpandedRows","forEach","defaultExpand","push","indexOf","ob","renderCell","pb","slice","pop","form","label","onClick","qb","getTableCellProps","getComparisonValue","rowSpan","show","style","rb","handleCellClick","assign","ref","withBorderBottom","onScroll","handleScroll","target","HTMLElement","scrollTop","scrollLeft","type","key","onContextMenu","columnIdx","column","showVerticalShadow","height","isVisible","onResize","onDoubleClick","isStickyHeader","headersWithMetaData","stickyColumnsGrid","showVerticalCellShadow","getSortIcon","handleSortClick","sortingBy","sortOrder","handleFilterTogglerClick","handleTooltipSave","visibleFilter","showHorizontalCellShadow","onRemove","removeSelectedFilter","onReset","resetSelectedFilters","role","nth","withMergedCells","onMouseEnter","onMouseLeave","_defineProperty","wrapperClassName","isActive","isDarkned","isMerged","row","wrap","rowId","isClickable","isBorderTop","isBorderLeft","renderEmptyRowsPlaceholder","Table","forwardRef"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/node_modules/@consta/src/components/Table/Table.tsx"],"sourcesContent":["import './Table.css';\n\nimport { IconSortDown } from '@consta/icons/IconSortDown';\nimport { IconSortUp } from '@consta/icons/IconSortUp';\nimport { IconUnsort } from '@consta/icons/IconUnsort';\nimport React, { useEffect, useMemo } from 'react';\n\nimport { cnMixScrollBar } from '##/mixs/MixScrollBar';\n\nimport { useComponentSize } from '../../hooks/useComponentSize/useComponentSize';\nimport { useForkRef } from '../../hooks/useForkRef/useForkRef';\nimport { sortBy as sortByDefault, updateAt } from '../../utils/array';\nimport { cn } from '../../utils/bem';\nimport { setRef } from '../../utils/setRef';\nimport { isNotNil, isString } from '../../utils/type-guards';\nimport { Button, ButtonPropSize } from '../Button/Button';\nimport { Text } from '../Text/Text';\nimport { HorizontalAlign, TableCell, VerticalAlign } from './Cell/TableCell';\nimport {\n  fieldFiltersPresent,\n  FieldSelectedValues,\n  Filters,\n  filterTableData,\n  getSelectedFiltersList,\n  isSelectedFiltersPresent,\n  onSortBy,\n  SelectedFilters,\n  useSelectedFilters,\n} from './filtering';\nimport { TableHeader } from './Header/TableHeader';\nimport {\n  calulateColSpans,\n  createSortingState,\n  getColumnLeftOffset,\n  getColumnsSize,\n  getMergedArray,\n  getNewSorting,\n  Header,\n  Order,\n  OrderType,\n  Position,\n  transformRows,\n  useHeaderData,\n  useLazyLoadData,\n} from './helpers';\nimport { TableResizer } from './Resizer/TableResizer';\nimport {\n  Props as TableRowsCollapseProps,\n  TableRowsCollapse,\n} from './RowsCollapse/TableRowsCollapse';\nimport {\n  GetTagLabel,\n  TableSelectedOptionsList,\n} from './SelectedOptionsList/TableSelectedOptionsList';\n\nexport { TableTextFilter } from './TextFilter/TableTextFilter';\nexport { TableFilterContainer } from './FilterContainer/TableFilterContainer';\nexport { TableNumberFilter } from './NumberFilter/TableNumberFilter';\nexport { TableChoiceGroupFilter } from './ChoiceGroupFilter/TableChoiceGroupFilter';\n\nconst cnTable = cn('Table');\n\nexport const sizes = ['s', 'm', 'l'] as const;\ntype Size = typeof sizes[number];\n\nexport const zebraStriped = ['odd', 'even'] as const;\ntype ZebraStriped = typeof zebraStriped[number];\n\nexport const headerVerticalAligns = ['center', 'bottom'] as const;\nexport type HeaderVerticalAlign = typeof headerVerticalAligns[number];\n\nconst createButtonSizeMap: Record<Size, ButtonPropSize> = {\n  s: 'xs',\n  m: 's',\n  l: 'm',\n};\n\ntype TableCSSCustomProperty = {\n  '--table-width': string;\n  '--table-grid-template-columns': string;\n};\n\nexport type LazyLoad =\n  | {\n      maxVisibleRows?: number;\n      scrollableEl?: HTMLDivElement | Window;\n    }\n  | undefined;\n\ntype ActiveRow = {\n  id: string | undefined;\n  onChange: ({\n    id,\n    e,\n  }: {\n    id: string | undefined;\n    e?: React.SyntheticEvent;\n  }) => void;\n};\n\ntype onRowHover = ({\n  id,\n  e,\n}: {\n  id: string | undefined;\n  e: React.MouseEvent;\n}) => void;\n\ntype onRowClick = ({ id, e }: { id: string; e: React.MouseEvent }) => void;\n\ntype onRowCreate = ({\n  id,\n  index,\n  e,\n}: {\n  id?: string;\n  index: number;\n  e: React.MouseEvent;\n}) => void;\n\nexport type CellClickType = 'click' | 'contextMenu';\n\nexport type onCellClick = ({\n  e,\n  type,\n  rowId,\n  columnIdx,\n  ref,\n}: {\n  e: React.SyntheticEvent;\n  type: CellClickType;\n  columnIdx: number;\n  ref: React.RefObject<HTMLDivElement>;\n  rowId?: string;\n}) => void;\n\nexport type TableRow = {\n  id: string;\n  defaultExpand?: boolean;\n  rows?: TableRow[];\n};\n\nexport type TableTreeRow<T extends TableRow> = {\n  options: {\n    level: number;\n  };\n} & T;\n\nexport type TableFilters<T extends TableRow> = Filters<T>;\n\nexport type RowField<T extends TableRow> = Exclude<keyof T, symbol | number>;\n\nexport type ColumnWidth = number | undefined;\n\nexport type ValueOf<T> = T[keyof T];\n\ntype ColumnBase<T extends TableRow> = ValueOf<{\n  [K in keyof T]: {\n    accessor: K extends string ? K : never;\n    sortable?: boolean;\n    colSpan?: number | ((row: T) => number);\n    sortByField?: keyof T;\n    order?: OrderType;\n    sortFn?(a: T[K], b: T[K]): number;\n    renderCell?: (row: T) => React.ReactNode;\n    getComparisonValue?: (cell: T[K]) => number | string;\n  };\n}>;\ntype SingleColumnAddition<T extends TableRow> = ColumnBase<T> & {\n  columns?: never;\n};\ntype GroupColumnAddition<T extends TableRow> = {\n  columns: TableColumn<T>[];\n} & {\n  // eslint-disable-next-line no-unused-vars\n  [K in keyof ColumnBase<T>]?: never;\n};\nexport interface TableControl<T extends TableRow> {\n  column: Header<T> & ColumnMetaData;\n}\n\nexport type SortByProps<T extends TableRow> = {\n  sortingBy: keyof T;\n  sortOrder: 'asc' | 'desc';\n};\n\nexport type TableColumn<T extends TableRow> = {\n  title: React.ReactNode;\n  align?: HorizontalAlign;\n  withoutPadding?: boolean;\n  width?: ColumnWidth;\n  mergeCells?: boolean;\n  position?: Position;\n  hidden?: boolean;\n  control?: ({ column }: TableControl<T>) => React.ReactNode;\n} & (GroupColumnAddition<T> | SingleColumnAddition<T>);\n\nexport type TableProps<T extends TableRow> = {\n  columns: TableColumn<T>[];\n  rows: T[];\n  isResizable?: boolean;\n  filters?: Filters<T>;\n  onSortBy?: onSortBy<T>;\n  size?: Size;\n  stickyHeader?: boolean;\n  stickyColumns?: number;\n  minColumnWidth?: number;\n  activeRow?: ActiveRow;\n  verticalAlign?: VerticalAlign;\n  headerVerticalAlign?: HeaderVerticalAlign;\n  zebraStriped?: ZebraStriped;\n  borderBetweenRows?: boolean;\n  defaultExpandAll?: boolean;\n  borderBetweenColumns?: boolean;\n  emptyRowsPlaceholder?: React.ReactNode;\n  className?: string;\n  onRowHover?: onRowHover;\n  onRowClick?: onRowClick;\n  onRowCreate?: onRowCreate;\n  onCellClick?: onCellClick;\n  getAdditionalClassName?: (props: {\n    column: TableColumn<T>;\n    row: T;\n    isActive: boolean;\n  }) => string;\n  rowCreateText?: string;\n  lazyLoad?: LazyLoad;\n  onFiltersUpdated?: (filters: SelectedFilters) => void;\n  getTagLabel?: GetTagLabel;\n  isExpandedRowsByDefault?: boolean;\n  getCellWrap?: (row: T) => 'truncate' | 'break';\n};\n\ntype Table = <T extends TableRow>(\n  props: TableProps<T> & { ref?: React.Ref<HTMLDivElement> },\n) => React.ReactElement | null;\n\nexport type ColumnMetaData = {\n  filterable: boolean;\n  isSortingActive: boolean;\n  isFilterActive: boolean;\n  isResized: boolean;\n  isSticky: boolean;\n  showResizer: boolean;\n  columnWidth: number;\n  columnLeftOffset: number;\n};\n\nexport type SortingState<T extends TableRow> = {\n  by: keyof T;\n  order: 'asc' | 'desc';\n  sortFn?: (a: T[keyof T], b: T[keyof T]) => number;\n} | null;\n\ntype GetTableCellProps = {\n  show: boolean;\n  rowSpan: number;\n  style: {\n    'left'?: number;\n    '--row-span'?: string;\n  };\n};\n\nconst getColumnSortByField = <T extends TableRow>(\n  column: TableColumn<T>,\n): keyof T => (column.sortable && column.sortByField) || column.accessor!;\n\nconst sortingData = <T extends TableRow>(\n  rows: T[],\n  sorting: SortingState<T>,\n  onSortBy?: onSortBy<T>,\n): T[] => {\n  if (onSortBy) {\n    return rows;\n  }\n\n  if (!sorting) {\n    return rows;\n  }\n  const sortedRows = sortByDefault(\n    rows,\n    sorting.by,\n    sorting.order,\n    sorting.sortFn,\n  );\n\n  if (sortedRows.some((row) => row.rows?.length)) {\n    return sortedRows.map((row) => {\n      return row.rows\n        ? { ...row, rows: sortingData(row.rows as T[], sorting, onSortBy) }\n        : row;\n    });\n  }\n\n  return sortedRows;\n};\n\nconst defaultEmptyRowsPlaceholder = (\n  <Text as=\"span\" view=\"primary\" size=\"s\" lineHeight=\"s\">\n    Нет данных\n  </Text>\n);\n\nconst InternalTable = <T extends TableRow>(\n  props: TableProps<T>,\n  ref?: React.Ref<HTMLDivElement>,\n) => {\n  const {\n    columns,\n    rows,\n    size = 'l',\n    filters: rawFilters,\n    isResizable = false,\n    stickyHeader = false,\n    stickyColumns = 0,\n    minColumnWidth = 150,\n    activeRow,\n    verticalAlign = 'top',\n    headerVerticalAlign = 'center',\n    zebraStriped,\n    borderBetweenRows = false,\n    borderBetweenColumns = false,\n    emptyRowsPlaceholder = defaultEmptyRowsPlaceholder,\n    defaultExpandAll,\n    className,\n    onRowHover,\n    onRowClick,\n    onRowCreate,\n    onCellClick,\n    getAdditionalClassName,\n    rowCreateText = '+ Добавить строку',\n    lazyLoad,\n    onSortBy,\n    onFiltersUpdated,\n    getTagLabel,\n    getCellWrap,\n    isExpandedRowsByDefault = false,\n    ...otherProps\n  } = props;\n  const {\n    headers,\n    flattenedHeaders,\n    lowHeaders,\n    headerRowsRefs,\n    headerRowsHeights,\n    resizerTopOffsets,\n  } = useHeaderData(columns);\n  const stickyColumnsGrid =\n    // eslint-disable-next-line no-unsafe-optional-chaining\n    headers[0][stickyColumns - 1]?.position.gridIndex! +\n    (headers[0][stickyColumns - 1]?.position.colSpan || 1);\n\n  const getColumnsWidth = () =>\n    lowHeaders.map((column: TableColumn<T>) => column.width);\n  const [resizedColumnWidths, setResizedColumnWidths] = React.useState<\n    ColumnWidth[]\n  >(getColumnsWidth());\n\n  const filters = React.useMemo(() => {\n    return (\n      rawFilters && rawFilters.filter((filter) => filter.id && filter.field)\n    );\n  }, [rawFilters]);\n\n  React.useEffect(() => {\n    setResizedColumnWidths(getColumnsWidth());\n  }, [lowHeaders.length]);\n\n  const [initialColumnWidths, setInitialColumnWidths] = React.useState<\n    number[]\n  >([]);\n  const [sorting, setSorting] = React.useState<SortingState<T>>(null);\n  const [visibleFilter, setVisibleFilter] = React.useState<string | null>(null);\n  const [tableScroll, setTableScroll] = React.useState({ top: 0, left: 0 });\n\n  const tableRef = React.useRef<HTMLDivElement>(null);\n  const columnsRefs = React.useRef<Record<number, HTMLDivElement | null>>({});\n  const cellsRefs = React.useRef<Record<string, HTMLDivElement | null>>({});\n  const {\n    selectedFilters,\n    updateSelectedFilters,\n    removeOneSelectedFilter,\n    removeAllSelectedFilters,\n  } = useSelectedFilters(filters, onFiltersUpdated);\n  const [expandedRowIds, setExpandedRowIds] = React.useState<string[]>([]);\n\n  // установка сортировки по умолчанию\n\n  React.useEffect(() => {\n    const sortingColumn = columns.find(\n      (col) =>\n        isString(col.order) &&\n        Object.prototype.hasOwnProperty.call(Order, col.order),\n    );\n    if (sortingColumn) {\n      const sortingState = createSortingState(\n        getColumnSortByField(sortingColumn),\n        sortingColumn.order,\n        sortingColumn.sortFn,\n      );\n      setSorting(sortingState);\n    }\n  }, [columns]);\n\n  /*\n    Подписываемся на изменения размеров таблицы, но не используем значения из\n    хука так как нам нужна ширина и высота таблицы без размера скролла. Этот хук\n    использует значения `offsetWidth` и `offsetHeight` которые включают размер\n    скролл бара.\n  */\n  useComponentSize(tableRef);\n  const tableHeight = tableRef.current?.clientHeight || 0;\n  const tableWidth = tableRef.current?.clientWidth || 0;\n\n  const showVerticalCellShadow = tableScroll.left > 0;\n  const showHorizontalCellShadow = tableScroll.top > 0;\n  const isRowsClickable = activeRow && activeRow.onChange;\n\n  const updateColumnWidth = (idx: number, newWidth: number): void => {\n    setResizedColumnWidths(updateAt(resizedColumnWidths, idx, newWidth));\n  };\n\n  const overallColumnsWidth = useMemo(() => {\n    const columnsElements = Object.values(columnsRefs.current).filter(isNotNil);\n    const columnsElementsWidths = columnsElements.map(\n      (el) => el.getBoundingClientRect().width,\n    );\n    const resultArr = getMergedArray(\n      columnsElementsWidths,\n      resizedColumnWidths,\n    );\n    return resultArr.reduce((a, b) => (a ?? 0) + (b ?? 0));\n  }, [resizedColumnWidths, isResizable]);\n\n  React.useLayoutEffect(() => {\n    const columnsElements = Object.values(columnsRefs.current).filter(isNotNil);\n    if (columnsElements.length === 0) return;\n\n    const columnsElementsWidths = columnsElements.map(\n      (el) => el.getBoundingClientRect().width,\n    );\n    setInitialColumnWidths(columnsElementsWidths);\n\n    // Проверяем, что таблица отрисовалась корректно, и устанавливаем значения ширин колонок после 1го и последующих рендера\n    if (\n      columnsElements[0].getBoundingClientRect().left !==\n      columnsElements[columnsElements.length - 1].getBoundingClientRect().left\n    ) {\n      const resultArr = getMergedArray(\n        columnsElementsWidths,\n        resizedColumnWidths,\n      );\n      // Выставляю в undefined для того, чтобы колонка, для кторой не определена ширина выставлялась в auto\n      // Если ее нет то заполняю недостающее пространство в последней колонке\n      if ((overallColumnsWidth ?? tableWidth) < tableWidth) {\n        let autoSetted = false;\n        for (let i = columns.length - 1; i > 0; i--) {\n          const { width } = columns[i];\n          if (!(width && width > 0)) {\n            resultArr[i] = undefined;\n            autoSetted = true;\n            return;\n          }\n        }\n        if (!autoSetted && overallColumnsWidth) {\n          resultArr[resultArr.length - 1] =\n            (resultArr[resultArr.length - 1] ?? 0) +\n            tableWidth -\n            overallColumnsWidth;\n        }\n      }\n      return setResizedColumnWidths(resultArr);\n    }\n\n    // условие изменения ширины колонок при изменении ширины экрана (контейнера таблицы)\n    if (tableWidth > 0 && !isResizable) {\n      return setResizedColumnWidths(getColumnsWidth());\n    }\n  }, [tableWidth, overallColumnsWidth]);\n\n  const isSortedByColumn = (column: TableColumn<T>): boolean =>\n    getColumnSortByField(column) === sorting?.by;\n\n  const getSortIcon = (column: TableColumn<T>) => {\n    return (\n      (isSortedByColumn(column) &&\n        (sorting?.order === 'desc' ? IconSortDown : IconSortUp)) ||\n      IconUnsort\n    );\n  };\n\n  const handleSortClick = (column: TableColumn<T>): void => {\n    const newSorting = getNewSorting(\n      sorting,\n      getColumnSortByField(column),\n      (column.sortable && column?.sortFn) || undefined,\n    );\n\n    const sortProps = newSorting\n      ? {\n          sortingBy: newSorting.by,\n          sortOrder: newSorting.order,\n        }\n      : null;\n    onSortBy && onSortBy(sortProps);\n    setSorting(newSorting);\n  };\n\n  const handleFilterTogglerClick = (id: string) => (): void => {\n    setVisibleFilter(visibleFilter === id ? null : id);\n  };\n\n  const handleTooltipSave = (\n    field: string,\n    tooltipSelectedFilters: FieldSelectedValues,\n    value?: unknown,\n  ): void => {\n    updateSelectedFilters(field, tooltipSelectedFilters, value);\n  };\n\n  const removeSelectedFilter =\n    (tableFilters: Filters<T>) =>\n    (filter: string): void => {\n      removeOneSelectedFilter(tableFilters, filter);\n    };\n\n  const resetSelectedFilters = (): void => {\n    if (filters && filters.length) {\n      removeAllSelectedFilters(filters);\n    }\n  };\n\n  const getStickyLeftOffset = (\n    columnIndex: number,\n    topHeaderGridIndex: number,\n  ): number | undefined => {\n    if (topHeaderGridIndex >= stickyColumns) {\n      return;\n    }\n\n    return getColumnLeftOffset({\n      columnIndex,\n      resizedColumnWidths,\n      initialColumnWidths,\n    });\n  };\n\n  const handleScroll: React.UIEventHandler = (e) => {\n    if (!(e.target instanceof HTMLElement) || e.target !== tableRef.current) {\n      return;\n    }\n\n    setTableScroll({\n      top: e.target.scrollTop,\n      left: e.target.scrollLeft,\n    });\n  };\n\n  const handleSelectRow = ({\n    id,\n    e,\n  }: {\n    id: string;\n    e: React.SyntheticEvent;\n  }): void | undefined => {\n    if (!activeRow || !activeRow.onChange) {\n      return;\n    }\n\n    activeRow.onChange({ id: activeRow.id === id ? undefined : id, e });\n  };\n\n  const handleRowHover = (id?: string) => (e: React.MouseEvent) =>\n    onRowHover && onRowHover({ id, e });\n\n  const handleRowCreate =\n    (index: number, id?: string) => (e: React.MouseEvent) =>\n      onRowCreate && onRowCreate({ e, id, index });\n\n  const handleColumnResize = (idx: number, delta: number): void => {\n    const columnMinWidth = Math.min(minColumnWidth, initialColumnWidths[idx]);\n    const prevColumnWidth =\n      resizedColumnWidths[idx] || initialColumnWidths[idx];\n    const newColumnWidth = Math.max(columnMinWidth, prevColumnWidth + delta);\n\n    updateColumnWidth(idx, newColumnWidth);\n\n    // При расширении последней колонки скроллим таблицу вправо\n    const containerEl = tableRef.current;\n    if (idx === resizedColumnWidths.length - 1 && delta > 0 && containerEl) {\n      containerEl.scrollBy(delta, 0);\n    }\n  };\n\n  const stickyColumnsWidth = getColumnLeftOffset({\n    columnIndex: stickyColumns,\n    resizedColumnWidths,\n    initialColumnWidths,\n  });\n\n  const columnsWithMetaData = (columns: Array<Header<T>>) => {\n    return columns.map((column: Header<T>) => {\n      const columnIndex = column.position.gridIndex;\n      const resizedColumnWidth = resizedColumnWidths[columnIndex];\n      const initialColumnWidth = initialColumnWidths[columnIndex];\n      const columnWidth = resizedColumnWidth || initialColumnWidth;\n      const columnLeftOffset = getColumnLeftOffset({\n        columnIndex,\n        resizedColumnWidths,\n        initialColumnWidths,\n      });\n      const isResized = !!columnWidth && columnWidth !== initialColumnWidth;\n      const isSticky = stickyColumns > column.position!.topHeaderGridIndex;\n      const showResizer =\n        stickyColumns > columnIndex ||\n        stickyColumnsWidth + tableScroll.left < columnLeftOffset + columnWidth;\n      const isFilterActive =\n        (selectedFilters[column.accessor!]?.selected || []).length > 0;\n\n      return {\n        ...column,\n        filterable: Boolean(\n          filters && fieldFiltersPresent(filters, column.accessor!),\n        ),\n        isSortingActive: isSortedByColumn(column),\n        isFilterActive,\n        isResized,\n        isSticky,\n        showResizer,\n        columnWidth,\n        columnLeftOffset,\n      };\n    });\n  };\n\n  const headersWithMetaData: Array<Header<T> & ColumnMetaData> =\n    columnsWithMetaData(flattenedHeaders);\n\n  const hasNestedRows = React.useMemo(\n    () => rows.some((row) => Boolean(row.rows?.length)),\n    [rows],\n  );\n\n  const sortedTableData = sortingData(rows, sorting, onSortBy);\n\n  const filteredData =\n    filters && isSelectedFiltersPresent(selectedFilters)\n      ? filterTableData({\n          data: sortedTableData,\n          filters: filters || [],\n          selectedFilters,\n        })\n      : sortedTableData;\n\n  const { maxVisibleRows = 210, scrollableEl = tableRef.current } =\n    lazyLoad || {};\n\n  const { getSlicedRows, setBoundaryRef } = useLazyLoadData(\n    maxVisibleRows,\n    scrollableEl,\n    !!lazyLoad,\n  );\n\n  const flatRowsData = transformRows(\n    filteredData,\n    expandedRowIds,\n    isExpandedRowsByDefault,\n  );\n  const rowsData = getSlicedRows(flatRowsData);\n\n  const tableStyle: React.CSSProperties & TableCSSCustomProperty = {\n    '--table-grid-template-columns': getColumnsSize(resizedColumnWidths),\n    '--table-width': `${tableWidth}px`,\n  };\n\n  const hasMergedCells: boolean = columnsWithMetaData(lowHeaders).some(\n    (header) => header.mergeCells,\n  );\n\n  const handleExpandRow = (id: string): (() => void) => {\n    return (): void => {\n      if (expandedRowIds.includes(id)) {\n        setExpandedRowIds((prevState) =>\n          prevState.filter((rowId) => rowId !== id),\n        );\n        return;\n      }\n      setExpandedRowIds((prevState) => [...prevState, id]);\n    };\n  };\n\n  const getCollapseRollProps = (\n    row: TableTreeRow<T>,\n    columnIdx: number,\n  ): TableRowsCollapseProps => {\n    const withCollapseButton = Boolean(row.rows?.length) && columnIdx === 0;\n\n    const baseProps = {\n      level: row.options.level,\n      isExpandedByDefault: isExpandedRowsByDefault,\n    };\n\n    if (!withCollapseButton || isExpandedRowsByDefault) {\n      return baseProps;\n    }\n\n    const isExpanded = expandedRowIds.includes(row.id);\n    const toggleCollapse = handleExpandRow(row.id);\n\n    return {\n      ...baseProps,\n      withCollapseButton,\n      isExpanded,\n      toggleCollapse,\n    };\n  };\n\n  const getExpandedRows = (\n    rows: T[],\n    depth: number,\n    defaultExpandAll?: boolean,\n  ): string[] => {\n    let expandedIds: string[] = [];\n    rows.forEach((row) => {\n      if (\n        row.defaultExpand ||\n        ((row.rows?.length ?? 0) > 0 && defaultExpandAll)\n      ) {\n        expandedIds.push(row.id);\n      }\n      if (row.rows) {\n        const ids = getExpandedRows(\n          row.rows as T[],\n          depth + 1,\n          defaultExpandAll,\n        );\n        expandedIds = [...expandedIds, ...ids];\n        if (ids.length > 0 && expandedIds.indexOf(row.id) === -1) {\n          expandedIds.push(row.id);\n        }\n      }\n    });\n    return [\n      ...(depth === 0 ? expandedRowIds : []),\n      ...expandedIds.filter((id) => expandedRowIds.indexOf(id) === -1),\n    ];\n  };\n\n  useEffect(() => {\n    if (rows) {\n      setExpandedRowIds(getExpandedRows(rows, 0, defaultExpandAll));\n    }\n  }, [rows, defaultExpandAll]);\n\n  const renderCell = (\n    column: TableColumn<T>,\n    row: T,\n    columnIdx: number,\n  ): React.ReactNode => {\n    const cellContent = column.renderCell\n      ? column.renderCell(row)\n      : row[column.accessor!];\n\n    if (!hasNestedRows || columnIdx !== 0) {\n      return cellContent as React.ReactNode;\n    }\n\n    const collapseRollProps = getCollapseRollProps(\n      row as TableTreeRow<T>,\n      columnIdx,\n    );\n\n    return (\n      <TableRowsCollapse {...collapseRollProps}>\n        {cellContent as React.ReactNode}\n      </TableRowsCollapse>\n    );\n  };\n\n  const renderEmptyRowsPlaceholder = (\n    placeholder: React.ReactNode,\n  ): React.ReactNode => {\n    return typeof placeholder === 'string' ? (\n      <Text size=\"s\" view=\"primary\" lineHeight=\"m\">\n        {placeholder}\n      </Text>\n    ) : (\n      placeholder\n    );\n  };\n\n  const bottomCreateRowButton = useMemo(() => {\n    const rowsLength = rowsData.length;\n    /* Можно и rowsData[rowsLength - 1], но в таком случае TS не подскажет,\n    что мы будем искать id в undefined это может привести к ошибке */\n    const { id: lastRowId } = rowsData.slice(-1).pop() ?? {};\n\n    if (!onRowCreate) {\n      return null;\n    }\n\n    return (\n      <div className={cnTable(rowsLength ? 'CreatRowCell' : 'RowWithoutCells')}>\n        <Button\n          size={createButtonSizeMap[size]}\n          form=\"brick\"\n          label={rowCreateText}\n          view=\"clear\"\n          className={cnTable('CreateRowButton')}\n          onClick={handleRowCreate(rowsLength, lastRowId)}\n          width=\"full\"\n        />\n      </div>\n    );\n  }, [rowCreateText, rowsData.length, onRowCreate]);\n\n  const getTableCellProps = (\n    row: TableTreeRow<T>,\n    rowIdx: number,\n    column: TableColumn<T>,\n    columnIdx: number,\n  ): GetTableCellProps => {\n    const {\n      mergeCells,\n      accessor,\n      position,\n      getComparisonValue = (e) => e,\n    } = column;\n\n    const previousCell =\n      rowsData[rowIdx - 1] &&\n      getComparisonValue(rowsData[rowIdx - 1][accessor!]);\n    const currentCell = getComparisonValue(row[accessor!]);\n\n    const result: GetTableCellProps = {\n      rowSpan: 1,\n      show: false,\n      style: {\n        left: getStickyLeftOffset(columnIdx, position!.topHeaderGridIndex),\n      },\n    };\n\n    if (\n      mergeCells &&\n      ((rowsData[rowIdx - 1] && previousCell !== currentCell) ||\n        rowIdx === 0 ||\n        (previousCell === currentCell && rowsData[rowIdx - 1]?.rows))\n    ) {\n      if (!row.rows) {\n        for (let i = rowIdx; i < rowsData.length; i++) {\n          if (rowsData[i + 1]) {\n            const nextCell = getComparisonValue(rowsData[i + 1][accessor!]);\n            if (currentCell === nextCell && !rowsData[i].rows) {\n              result.rowSpan++;\n            } else {\n              break;\n            }\n          } else {\n            break;\n          }\n        }\n      }\n      if (result.rowSpan > 1) {\n        result.style['--row-span'] = `span ${result.rowSpan}`;\n      }\n      result.show = true;\n    }\n    if (!mergeCells) {\n      result.show = true;\n    }\n\n    return result;\n  };\n\n  const handleCellClick: onCellClick = (params) => {\n    onCellClick?.(params);\n  };\n\n  return (\n    <div\n      {...otherProps}\n      ref={useForkRef([tableRef, ref])}\n      className={cnTable(\n        {\n          size,\n          isResizable,\n          zebraStriped,\n          withBorderBottom: !filteredData.length,\n        },\n        [className, cnMixScrollBar()],\n      )}\n      style={tableStyle}\n      onScroll={handleScroll}\n    >\n      {/*\n        Элементы Resizer рендерятся в отдельных ячейках нулевой высоты с шириной\n        равной ширине колонки сетки, при этом у ячейки самый большой z-index в\n        таблице чтобы элементы Resizer могли перекрывать ячейки заголовка и\n        контента. Кроме того это позволяет зафиксировать вертикальное и\n        горизонтальное положение Resizer, а также его высоту.\n\n        Получение высоты Resizer элементов через свойство элемента таблицы\n        scrollHeight не подходило, так как в таком случае Resizer растягивал\n        таблицу по высоте, поэтому от этого способа отказались.\n      */}\n      {columnsWithMetaData(lowHeaders).map(\n        (\n          column: TableColumn<T> & { showResizer: boolean },\n          columnIdx: number,\n        ) => (\n          <TableCell\n            type=\"resizer\"\n            key={columnIdx}\n            ref={(ref: HTMLDivElement | null): void => {\n              columnsRefs.current[columnIdx] = ref;\n            }}\n            style={{\n              left: getStickyLeftOffset(columnIdx, columnIdx),\n            }}\n            onContextMenu={(e: React.SyntheticEvent) =>\n              handleCellClick({\n                e,\n                type: 'contextMenu',\n                columnIdx,\n                ref: { current: columnsRefs.current[columnIdx] },\n              })\n            }\n            onClick={(e: React.SyntheticEvent) =>\n              handleCellClick({\n                e,\n                type: 'click',\n                columnIdx,\n                ref: { current: columnsRefs.current[columnIdx] },\n              })\n            }\n            column={column}\n            showVerticalShadow={showVerticalCellShadow}\n          >\n            {isResizable && (\n              <TableResizer\n                height={tableHeight - resizerTopOffsets[columnIdx]}\n                top={resizerTopOffsets[columnIdx]}\n                isVisible={column.showResizer}\n                onResize={(delta): void => handleColumnResize(columnIdx, delta)}\n                onDoubleClick={(): void =>\n                  updateColumnWidth(columnIdx, initialColumnWidths[columnIdx])\n                }\n              />\n            )}\n          </TableCell>\n        ),\n      )}\n      <TableHeader\n        isStickyHeader={stickyHeader}\n        headersWithMetaData={headersWithMetaData}\n        headerRowsHeights={headerRowsHeights}\n        headerRowsRefs={headerRowsRefs}\n        getStickyLeftOffset={getStickyLeftOffset}\n        stickyColumnsGrid={stickyColumnsGrid}\n        showVerticalCellShadow={showVerticalCellShadow}\n        headerVerticalAlign={headerVerticalAlign}\n        getSortIcon={getSortIcon}\n        handleSortClick={handleSortClick}\n        handleFilterTogglerClick={handleFilterTogglerClick}\n        handleCellClick={handleCellClick}\n        handleTooltipSave={handleTooltipSave}\n        filters={filters}\n        visibleFilter={visibleFilter}\n        selectedFilters={selectedFilters}\n        showHorizontalCellShadow={showHorizontalCellShadow}\n        borderBetweenColumns={borderBetweenColumns}\n      />\n      {filters && isSelectedFiltersPresent(selectedFilters) && (\n        <div className={cnTable('RowWithoutCells')}>\n          <TableSelectedOptionsList\n            values={getSelectedFiltersList({\n              filters,\n              selectedFilters,\n              columns: lowHeaders,\n            })}\n            getTagLabel={getTagLabel}\n            onRemove={removeSelectedFilter(filters)}\n            onReset={resetSelectedFilters}\n          />\n        </div>\n      )}\n      {rowsData.length > 0 ? (\n        rowsData.map((row, rowIdx) => {\n          const nth = (rowIdx + 1) % 2 === 0 ? 'even' : 'odd';\n          const columns = columnsWithMetaData(lowHeaders);\n          const spans = calulateColSpans(columns, row);\n          return (\n            <div\n              key={row.id}\n              role=\"presentation\"\n              className={cnTable('CellsRow', {\n                nth,\n                withMergedCells: hasMergedCells,\n              })}\n              onMouseEnter={handleRowHover(row.id)}\n              onMouseLeave={handleRowHover(undefined)}\n              onClick={(e) => onRowClick && onRowClick({ id: row.id, e })}\n            >\n              {columns.map((column: TableColumn<T>, columnIdx: number) => {\n                const { show, style, rowSpan } = getTableCellProps(\n                  row,\n                  rowIdx,\n                  column,\n                  columnIdx,\n                );\n                const colSpan = spans[columnIdx];\n                const start =\n                  columnIdx > 0\n                    ? spans.slice(0, columnIdx).reduce((a, b) => a + b) + 1\n                    : 1;\n                if (show && colSpan > 0) {\n                  return (\n                    <TableCell\n                      type=\"content\"\n                      key={column.accessor}\n                      ref={(ref: HTMLDivElement | null) => {\n                        cellsRefs.current[`${columnIdx}-${row.id}`] = ref;\n                        setRef(setBoundaryRef(columnIdx, rowIdx), ref);\n                      }}\n                      style={{\n                        ...style,\n                        ['--table-cell-col-start' as string]: start,\n                        ['--table-cell-col-end' as string]: start + colSpan,\n                      }}\n                      wrapperClassName={cnTable('ContentCell', {\n                        isActive: activeRow ? activeRow.id === row.id : false,\n                        isDarkned: activeRow\n                          ? activeRow.id !== undefined &&\n                            activeRow.id !== row.id\n                          : false,\n                        isMerged: column.mergeCells && rowSpan > 1,\n                      })}\n                      className={getAdditionalClassName?.({\n                        column,\n                        row,\n                        isActive: activeRow ? activeRow.id === row.id : false,\n                      })}\n                      wrap={getCellWrap?.(row)}\n                      onContextMenu={(e: React.SyntheticEvent) =>\n                        handleCellClick({\n                          e,\n                          type: 'contextMenu',\n                          columnIdx,\n                          rowId: row.id,\n                          ref: {\n                            current:\n                              cellsRefs.current[`${columnIdx}-${row.id}`],\n                          },\n                        })\n                      }\n                      onClick={(e: React.SyntheticEvent): void => {\n                        handleSelectRow({ id: row.id, e });\n\n                        handleCellClick({\n                          e,\n                          type: 'click',\n                          columnIdx,\n                          rowId: row.id,\n                          ref: {\n                            current:\n                              cellsRefs.current[`${columnIdx}-${row.id}`],\n                          },\n                        });\n                      }}\n                      column={column}\n                      verticalAlign={verticalAlign}\n                      isClickable={!!isRowsClickable}\n                      showVerticalShadow={\n                        showVerticalCellShadow &&\n                        // eslint-disable-next-line no-unsafe-optional-chaining\n                        column?.position!.gridIndex! +\n                          (column?.position!.colSpan || 1) ===\n                          stickyColumnsGrid\n                      }\n                      isBorderTop={rowIdx > 0 && borderBetweenRows}\n                      isBorderLeft={columnIdx > 0 && borderBetweenColumns}\n                    >\n                      {renderCell(column, row, columnIdx)}\n                    </TableCell>\n                  );\n                }\n                return null;\n              })}\n            </div>\n          );\n        })\n      ) : (\n        <div className={cnTable('RowWithoutCells')}>\n          <div className={cnTable('EmptyCell')}>\n            {renderEmptyRowsPlaceholder(emptyRowsPlaceholder)}\n          </div>\n        </div>\n      )}\n      {bottomCreateRowButton}\n    </div>\n  );\n};\n\nexport const Table = React.forwardRef(InternalTable) as Table;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}