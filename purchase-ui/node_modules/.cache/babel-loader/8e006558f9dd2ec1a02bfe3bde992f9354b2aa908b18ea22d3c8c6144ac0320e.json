{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport CustomerForm from './CustomerForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerPage = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [currentCustomer, setCurrentCustomer] = useState(null);\n  const [isEditing, setIsEditing] = useState(false);\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    try {\n      const response = await PurchaseApi.getCustomers();\n      setCustomers(response.data);\n      console.log(response);\n    } catch (error) {\n      console.error('Error fetching customers', error);\n    }\n  };\n  const handleInputChange = e => {\n    const {\n      name,\n      value\n    } = e.target;\n    if (currentCustomer) {\n      setCurrentCustomer({\n        ...currentCustomer,\n        [name]: value\n      });\n    }\n  };\n  const handleCreateCustomer = async () => {\n    if (currentCustomer) {\n      try {\n        await PurchaseApi.createCustomer(currentCustomer);\n        fetchCustomers();\n      } catch (error) {\n        console.error('Error creating customer', error);\n      }\n    }\n  };\n  const handleUpdateCustomer = async () => {\n    if (currentCustomer && currentCustomer.id) {\n      try {\n        await PurchaseApi.updateCustomer(currentCustomer.id, currentCustomer);\n        fetchCustomers();\n      } catch (error) {\n        console.error('Error updating customer', error);\n      }\n    }\n  };\n  const handleDeleteCustomer = async id => {\n    try {\n      await PurchaseApi.deleteCustomer(id);\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error deleting customer', error);\n    }\n  };\n  const handleEditCustomer = customer => {\n    setCurrentCustomer(customer);\n    setIsEditing(true);\n  };\n  const clearForm = () => {\n    setCurrentCustomer(null);\n    setIsEditing(false);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(CustomerForm, {\n      customers: customers\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerPage, \"Y9tV6onwU7zgI4yEi6///igInbo=\");\n_c = CustomerPage;\nexport default CustomerPage;\nvar _c;\n$RefreshReg$(_c, \"CustomerPage\");","map":{"version":3,"names":["React","useState","useEffect","PurchaseApi","CustomerForm","jsxDEV","_jsxDEV","CustomerPage","_s","customers","setCustomers","currentCustomer","setCurrentCustomer","isEditing","setIsEditing","fetchCustomers","response","getCustomers","data","console","log","error","handleInputChange","e","name","value","target","handleCreateCustomer","createCustomer","handleUpdateCustomer","id","updateCustomer","handleDeleteCustomer","deleteCustomer","handleEditCustomer","customer","clearForm","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport CustomerForm from './CustomerForm';\n\ninterface Customer {\n  id: number;\n  customerCode: string;\n  customerName: string;\n  customerInn: string;\n  customerKpp: string;\n  customerLegalAddress: string;\n  customerPostalAddress: string;\n  customerEmail: string;\n  customerCodeMain: string;\n  isOrganization: boolean;\n  isPerson: boolean;\n}\n\nconst CustomerPage: React.FC = () => {\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [currentCustomer, setCurrentCustomer] = useState<Customer | null>(null);\n  const [isEditing, setIsEditing] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  const fetchCustomers = async () => {\n    try {\n      const response = await PurchaseApi.getCustomers();\n      setCustomers(response.data);\n      console.log(response);\n    } catch (error) {\n      console.error('Error fetching customers', error);\n    }\n  };\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = e.target;\n    if (currentCustomer) {\n      setCurrentCustomer({ ...currentCustomer, [name]: value });\n    }\n  };\n\n  const handleCreateCustomer = async () => {\n    if (currentCustomer) {\n      try {\n        await PurchaseApi.createCustomer(currentCustomer);\n        fetchCustomers();\n      } catch (error) {\n        console.error('Error creating customer', error);\n      }\n    }\n  };\n\n  const handleUpdateCustomer = async () => {\n    if (currentCustomer && currentCustomer.id) {\n      try {\n        await PurchaseApi.updateCustomer(currentCustomer.id, currentCustomer);\n        fetchCustomers();\n      } catch (error) {\n        console.error('Error updating customer', error);\n      }\n    }\n  };\n\n  const handleDeleteCustomer = async (id: number) => {\n    try {\n      await PurchaseApi.deleteCustomer(id);\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error deleting customer', error);\n    }\n  };\n\n  const handleEditCustomer = (customer: Customer) => {\n    setCurrentCustomer(customer);\n    setIsEditing(true);\n  };\n\n  const clearForm = () => {\n    setCurrentCustomer(null);\n    setIsEditing(false);\n  };\n\n  return (\n    <div>\n      <CustomerForm customers={customers} />\n    </div>\n  );\n};\n\nexport default CustomerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}