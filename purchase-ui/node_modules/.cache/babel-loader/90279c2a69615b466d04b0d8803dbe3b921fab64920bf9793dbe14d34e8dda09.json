{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\n/**\r\n * BEM className configure function.\r\n *\r\n * @example\r\n * ``` ts\r\n *\r\n * import { withNaming } from '@bem-react/classname';\r\n *\r\n * const cn = withNaming({ n: 'ns-', e: '__', m: '_' });\r\n *\r\n * cn('block', 'elem'); // 'ns-block__elem'\r\n * ```\r\n *\r\n * @param preset settings for the naming convention\r\n */\nfunction withNaming(preset) {\n  var nameSpace = preset.n || '';\n  var modValueDelimiter = preset.v || preset.m;\n  function stringify(b, e, m, mix) {\n    var entityName = e ? nameSpace + b + preset.e + e : nameSpace + b;\n    var className = entityName;\n    if (m) {\n      var modPrefix = ' ' + className + preset.m;\n      for (var k in m) {\n        if (m.hasOwnProperty(k)) {\n          var modVal = m[k];\n          if (modVal === true) {\n            className += modPrefix + k;\n          } else if (modVal) {\n            className += modPrefix + k + modValueDelimiter + modVal;\n          }\n        }\n      }\n    }\n    if (mix !== undefined) {\n      mix = Array.isArray(mix) ? mix : [mix];\n      for (var i = 0, len = mix.length; i < len; i++) {\n        var value = mix[i];\n        // Skipping non-string values and empty strings\n        if (!value || typeof value.valueOf() !== 'string') continue;\n        var mixes = value.valueOf().split(' ');\n        for (var j = 0; j < mixes.length; j++) {\n          var val = mixes[j];\n          if (val !== entityName) {\n            className += ' ' + val;\n          }\n        }\n      }\n    }\n    return className;\n  }\n  return function cnGenerator(b, e) {\n    return function (elemOrMods, elemModsOrBlockMix, elemMix) {\n      if (typeof elemOrMods === 'string') {\n        if (typeof elemModsOrBlockMix === 'string' || Array.isArray(elemModsOrBlockMix)) {\n          return stringify(b, elemOrMods, undefined, elemModsOrBlockMix);\n        }\n        return stringify(b, elemOrMods, elemModsOrBlockMix, elemMix);\n      }\n      return stringify(b, e, elemOrMods, elemModsOrBlockMix);\n    };\n  };\n}\n/**\r\n * BEM Entity className initializer with React naming preset.\r\n *\r\n * @example\r\n * ``` ts\r\n *\r\n * import { cn } from '@bem-react/classname';\r\n *\r\n * const cat = cn('Cat');\r\n *\r\n * cat(); // Cat\r\n * cat({ size: 'm' }); // Cat_size_m\r\n * cat('Tail'); // Cat-Tail\r\n * cat('Tail', { length: 'small' }); // Cat-Tail_length_small\r\n *\r\n * const dogPaw = cn('Dog', 'Paw');\r\n *\r\n * dogPaw(); // Dog-Paw\r\n * dogPaw({ color: 'black', exists: true }); // Dog-Paw_color_black Dog-Paw_exists\r\n * ```\r\n *\r\n * @see https://en.bem.info/methodology/naming-convention/#react-style\r\n */\nvar cn = withNaming({\n  e: '-',\n  m: '_'\n});\nexports.cn = cn;\nexports.withNaming = withNaming;","map":{"version":3,"names":["Object","defineProperty","exports","value","withNaming","preset","nameSpace","n","modValueDelimiter","v","m","stringify","b","e","mix","entityName","className","modPrefix","k","hasOwnProperty","modVal","undefined","Array","isArray","i","len","length","valueOf","mixes","split","j","val","cnGenerator","elemOrMods","elemModsOrBlockMix","elemMix","cn"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/node_modules/@bem-react/classname/build/classname.development.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\n/**\r\n * BEM className configure function.\r\n *\r\n * @example\r\n * ``` ts\r\n *\r\n * import { withNaming } from '@bem-react/classname';\r\n *\r\n * const cn = withNaming({ n: 'ns-', e: '__', m: '_' });\r\n *\r\n * cn('block', 'elem'); // 'ns-block__elem'\r\n * ```\r\n *\r\n * @param preset settings for the naming convention\r\n */\r\nfunction withNaming(preset) {\r\n    var nameSpace = preset.n || '';\r\n    var modValueDelimiter = preset.v || preset.m;\r\n    function stringify(b, e, m, mix) {\r\n        var entityName = e ? nameSpace + b + preset.e + e : nameSpace + b;\r\n        var className = entityName;\r\n        if (m) {\r\n            var modPrefix = ' ' + className + preset.m;\r\n            for (var k in m) {\r\n                if (m.hasOwnProperty(k)) {\r\n                    var modVal = m[k];\r\n                    if (modVal === true) {\r\n                        className += modPrefix + k;\r\n                    }\r\n                    else if (modVal) {\r\n                        className += modPrefix + k + modValueDelimiter + modVal;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        if (mix !== undefined) {\r\n            mix = Array.isArray(mix) ? mix : [mix];\r\n            for (var i = 0, len = mix.length; i < len; i++) {\r\n                var value = mix[i];\r\n                // Skipping non-string values and empty strings\r\n                if (!value || typeof value.valueOf() !== 'string')\r\n                    continue;\r\n                var mixes = value.valueOf().split(' ');\r\n                for (var j = 0; j < mixes.length; j++) {\r\n                    var val = mixes[j];\r\n                    if (val !== entityName) {\r\n                        className += ' ' + val;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return className;\r\n    }\r\n    return function cnGenerator(b, e) {\r\n        return function (elemOrMods, elemModsOrBlockMix, elemMix) {\r\n            if (typeof elemOrMods === 'string') {\r\n                if (typeof elemModsOrBlockMix === 'string' || Array.isArray(elemModsOrBlockMix)) {\r\n                    return stringify(b, elemOrMods, undefined, elemModsOrBlockMix);\r\n                }\r\n                return stringify(b, elemOrMods, elemModsOrBlockMix, elemMix);\r\n            }\r\n            return stringify(b, e, elemOrMods, elemModsOrBlockMix);\r\n        };\r\n    };\r\n}\r\n/**\r\n * BEM Entity className initializer with React naming preset.\r\n *\r\n * @example\r\n * ``` ts\r\n *\r\n * import { cn } from '@bem-react/classname';\r\n *\r\n * const cat = cn('Cat');\r\n *\r\n * cat(); // Cat\r\n * cat({ size: 'm' }); // Cat_size_m\r\n * cat('Tail'); // Cat-Tail\r\n * cat('Tail', { length: 'small' }); // Cat-Tail_length_small\r\n *\r\n * const dogPaw = cn('Dog', 'Paw');\r\n *\r\n * dogPaw(); // Dog-Paw\r\n * dogPaw({ color: 'black', exists: true }); // Dog-Paw_color_black Dog-Paw_exists\r\n * ```\r\n *\r\n * @see https://en.bem.info/methodology/naming-convention/#react-style\r\n */\r\nvar cn = withNaming({\r\n    e: '-',\r\n    m: '_',\r\n});\n\nexports.cn = cn;\nexports.withNaming = withNaming;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"script","externalDependencies":[]}