{"ast":null,"code":"var firstLetterUppercase = function (a) {\n  return a.charAt(0).toUpperCase() + a.slice(1).toLowerCase();\n};\nexport var addPrefix = function (a) {\n  for (var b, c = 1 < arguments.length && arguments[1] !== void 0 ? arguments[1] : \"breakpoint\", d = Object.keys(a), e = {}, f = 0; f < d.length; f++) b = d[f], e[\"\".concat(c).concat(firstLetterUppercase(b))] = a[b];\n  return e;\n};","map":{"version":3,"names":["firstLetterUppercase","a","charAt","toUpperCase","slice","toLowerCase","addPrefix","b","c","arguments","length","d","Object","keys","e","f","concat"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/node_modules/@consta/src/hooks/useBreakpoints/addPrefix.ts"],"sourcesContent":["const firstLetterUppercase = (string: string) =>\n  string.charAt(0).toUpperCase() + string.slice(1).toLowerCase();\n\nexport const addPrefix = (\n  breakpoints: Record<string, boolean>,\n  prefix = 'breakpoint',\n) => {\n  const keys = Object.keys(breakpoints);\n  const mods: Record<string, boolean> = {};\n  for (let index = 0; index < keys.length; index++) {\n    const key = keys[index];\n    mods[`${prefix}${firstLetterUppercase(key)}`] = breakpoints[key];\n  }\n  return mods;\n};\n"],"mappings":"AAAA,IAAMA,oBAAoB,GAAG,SAAAA,CAACC,CAAD;EAAA,OAC3BA,CAAM,CAACC,MAAP,CAAc,CAAd,EAAiBC,WAAjB,KAAiCF,CAAM,CAACG,KAAP,CAAa,CAAb,EAAgBC,WAAhB,EADN;AAAA,CAA7B;AAGA,OAAO,IAAMC,SAAS,GAAG,SAAAA,CACvBL,CADuB,EAGpB;EAGH,SACQM,CADR,EAJAC,CAIA,OAAAC,SAAA,CAAAC,MAAA,IAAAD,SAAA,iBAAAA,SAAA,MAJS,YAIT,EAFME,CAAI,GAAGC,MAAM,CAACC,IAAP,CAAYZ,CAAZ,CAEb,EADMa,CAA6B,GAAG,EACtC,EAASC,CAAK,GAAG,CAAjB,EAAoBA,CAAK,GAAGJ,CAAI,CAACD,MAAjC,EAAyCK,CAAK,EAA9C,EACQR,CADR,GACcI,CAAI,CAACI,CAAD,CADlB,EAEED,CAAI,IAAAE,MAAA,CAAIR,CAAJ,EAAAQ,MAAA,CAAahB,oBAAoB,CAACO,CAAD,CAAjC,EAAJ,GAAgDN,CAAW,CAACM,CAAD,CAF7D;EAIA,OAAOO,CACR;AAAA,CAXM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}