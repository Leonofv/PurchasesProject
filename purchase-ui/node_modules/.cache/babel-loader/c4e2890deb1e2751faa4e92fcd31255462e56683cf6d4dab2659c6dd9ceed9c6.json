{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport CustomerForm from './CustomerForm';\nimport UpdateCustomerModal from './UpdateCustomerModal';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomerPage = () => {\n  _s();\n  const [customers, setCustomers] = useState([]);\n  const [currentCustomer, setCurrentCustomer] = useState(null);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n  const fetchCustomers = async () => {\n    try {\n      const response = await PurchaseApi.getCustomers();\n      setCustomers(response.data);\n    } catch (error) {\n      console.error('Error fetching customers', error);\n    }\n  };\n  const handleDeleteCustomer = async id => {\n    try {\n      await PurchaseApi.deleteCustomer(id);\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error deleting customer', error);\n    }\n  };\n  const handleSaveCustomer = async customer => {\n    try {\n      if (customer.id) {\n        await PurchaseApi.updateCustomer(customer.id, customer);\n      } else {\n        await PurchaseApi.createCustomer(customer);\n      }\n      fetchCustomers();\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error('Error saving customer', error);\n      throw error;\n    }\n  };\n  const openUpdateModal = customer => {\n    setCurrentCustomer(customer);\n    setIsModalOpen(true);\n  };\n  const closeUpdateModal = () => {\n    setIsModalOpen(false);\n    setCurrentCustomer(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(CustomerForm, {\n      customers: customers,\n      handleDeleteCustomer: handleDeleteCustomer,\n      handleSaveCustomer: handleSaveCustomer,\n      openUpdateModal: openUpdateModal // Передаем функцию для открытия модального окна\n      ,\n      currentCustomer: null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(UpdateCustomerModal, {\n      isOpen: isModalOpen,\n      onClose: closeUpdateModal,\n      handleUpdateCustomer: handleSaveCustomer,\n      currentCustomer: currentCustomer\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(CustomerPage, \"fKC9gZB/nnACCuMy8tlxDAQqnmk=\");\n_c = CustomerPage;\nexport default CustomerPage;\nvar _c;\n$RefreshReg$(_c, \"CustomerPage\");","map":{"version":3,"names":["React","useState","useEffect","PurchaseApi","CustomerForm","UpdateCustomerModal","jsxDEV","_jsxDEV","CustomerPage","_s","customers","setCustomers","currentCustomer","setCurrentCustomer","isModalOpen","setIsModalOpen","fetchCustomers","response","getCustomers","data","error","console","handleDeleteCustomer","id","deleteCustomer","handleSaveCustomer","customer","updateCustomer","createCustomer","openUpdateModal","closeUpdateModal","children","fileName","_jsxFileName","lineNumber","columnNumber","isOpen","onClose","handleUpdateCustomer","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport CustomerForm from './CustomerForm';\nimport UpdateCustomerModal from './UpdateCustomerModal';\n\ninterface Customer {\n  id: number;\n  customerCode: string;\n  customerName: string;\n  customerInn: string;\n  customerKpp: string;\n  customerLegalAddress: string;\n  customerPostalAddress: string;\n  customerEmail: string;\n  customerCodeMain: string | null;\n  isOrganization: boolean;\n  isPerson: boolean;\n}\n\nconst CustomerPage: React.FC = () => {\n  const [customers, setCustomers] = useState<Customer[]>([]);\n  const [currentCustomer, setCurrentCustomer] = useState<Customer | null>(null);\n  const [isModalOpen, setIsModalOpen] = useState<boolean>(false);\n\n  useEffect(() => {\n    fetchCustomers();\n  }, []);\n\n  const fetchCustomers = async () => {\n    try {\n      const response = await PurchaseApi.getCustomers();\n      setCustomers(response.data);\n    } catch (error) {\n      console.error('Error fetching customers', error);\n    }\n  };\n\n  const handleDeleteCustomer = async (id: number) => {\n    try {\n      await PurchaseApi.deleteCustomer(id);\n      fetchCustomers();\n    } catch (error) {\n      console.error('Error deleting customer', error);\n    }\n  };\n\n  const handleSaveCustomer = async (customer: Customer) => {\n    try {\n      if (customer.id) {\n        await PurchaseApi.updateCustomer(customer.id, customer);\n      } else {\n        await PurchaseApi.createCustomer(customer);\n      }\n      fetchCustomers();\n      setIsModalOpen(false);\n    } catch (error) {\n      console.error('Error saving customer', error);\n      throw error;\n    }\n  };\n\n  const openUpdateModal = (customer: Customer) => {\n    setCurrentCustomer(customer);\n    setIsModalOpen(true);\n  };\n\n  const closeUpdateModal = () => {\n    setIsModalOpen(false);\n    setCurrentCustomer(null);\n  };\n\n  return (\n    <div>\n      <CustomerForm\n        customers={customers}\n        handleDeleteCustomer={handleDeleteCustomer}\n        handleSaveCustomer={handleSaveCustomer}\n        openUpdateModal={openUpdateModal} // Передаем функцию для открытия модального окна\n        currentCustomer={null}\n      />\n      <UpdateCustomerModal\n        isOpen={isModalOpen}\n        onClose={closeUpdateModal}\n        handleUpdateCustomer={handleSaveCustomer}\n        currentCustomer={currentCustomer}\n      />\n    </div>\n  );\n};\n\nexport default CustomerPage;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}