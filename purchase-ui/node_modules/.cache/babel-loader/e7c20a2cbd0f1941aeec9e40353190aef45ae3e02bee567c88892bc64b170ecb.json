{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/lot/LotPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport LotPanel from './LotPanel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst LotPage = () => {\n  _s();\n  const [lots, setLots] = useState([]);\n  const [currentLot, setCurrentLot] = useState(null);\n  useEffect(() => {\n    fetchLots();\n  }, []);\n  const fetchLots = async () => {\n    try {\n      const response = await PurchaseApi.getLots();\n      setLots(response.data);\n    } catch (error) {\n      console.error('Error fetching lots', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(LotPanel, {\n      lots: lots\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n};\n_s(LotPage, \"2LTA7lC7ixCE1gB3bIj0LeWht9Y=\");\n_c = LotPage;\nexport default LotPage;\nvar _c;\n$RefreshReg$(_c, \"LotPage\");","map":{"version":3,"names":["React","useState","useEffect","PurchaseApi","LotPanel","jsxDEV","_jsxDEV","LotPage","_s","lots","setLots","currentLot","setCurrentLot","fetchLots","response","getLots","data","error","console","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/lot/LotPage.tsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { PurchaseApi } from '../../http/PurchaseApi';\nimport { Lot } from '../../intefaces/LotInterface';\nimport LotPanel from './LotPanel';\n\nconst LotPage: React.FC = () => {\n  const [lots, setLots] = useState<Lot[]>([]);\n  const [currentLot, setCurrentLot] = useState<Lot | null>(null);\n\n  useEffect(() => {\n    fetchLots();\n  }, []);\n\n  const fetchLots = async () => {\n    try {\n      const response = await PurchaseApi.getLots();\n      setLots(response.data);\n    } catch (error) {\n      console.error('Error fetching lots', error);\n    }\n  };\n\n  return (\n    <div>\n      <LotPanel lots={lots} />\n    </div>\n  );\n};\n\nexport default LotPage;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,wBAAwB;AAEpD,OAAOC,QAAQ,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,OAAiB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC9B,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGT,QAAQ,CAAQ,EAAE,CAAC;EAC3C,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGX,QAAQ,CAAa,IAAI,CAAC;EAE9DC,SAAS,CAAC,MAAM;IACdW,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMA,SAAS,GAAG,MAAAA,CAAA,KAAY;IAC5B,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMX,WAAW,CAACY,OAAO,CAAC,CAAC;MAC5CL,OAAO,CAACI,QAAQ,CAACE,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,qBAAqB,EAAEA,KAAK,CAAC;IAC7C;EACF,CAAC;EAED,oBACEX,OAAA;IAAAa,QAAA,eACEb,OAAA,CAACF,QAAQ;MAACK,IAAI,EAAEA;IAAK;MAAAW,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACrB,CAAC;AAEV,CAAC;AAACf,EAAA,CAtBID,OAAiB;AAAAiB,EAAA,GAAjBjB,OAAiB;AAwBvB,eAAeA,OAAO;AAAC,IAAAiB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}