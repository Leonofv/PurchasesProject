{"ast":null,"code":"import axios from 'axios';\nimport { config } from './Constants';\nexport const PurchaseApi = {\n  getCustomers,\n  getCustomerById,\n  GetCustomersByCustomerCode,\n  createCustomer,\n  updateCustomer,\n  deleteCustomer,\n  getLots,\n  GetLotById,\n  GetLotsByName,\n  deleteLot,\n  updateLot,\n  createLot\n};\nfunction getCustomers() {\n  return instance.get(`/api/customers/all`);\n}\nfunction getCustomerById(customerId) {\n  return instance.get(`/api/customers/id/${customerId}`);\n}\nfunction GetCustomersByCustomerCode(customerCode) {\n  return instance.get(`/api/customers//customersCode/${customerCode}`);\n}\n_c = GetCustomersByCustomerCode;\nfunction createCustomer(createdCustomer) {\n  return instance.post(`/api/customers/create`, createdCustomer, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\nfunction updateCustomer(customerId, updatedCustomer) {\n  return instance.put(`/api/customer/update${customerId}`, updatedCustomer, {\n    headers: {\n      'Content-type': 'application/json'\n    }\n  });\n}\nfunction deleteCustomer(customerId) {\n  return instance.delete(`/api/customers/delete/${customerId}`);\n}\nfunction getLots() {\n  return instance.get('/api/lots/all');\n}\nfunction GetLotById() {}\n_c2 = GetLotById;\nfunction GetLotsByName() {}\n_c3 = GetLotsByName;\nfunction deleteLot() {}\nfunction updateLot() {}\nfunction createLot() {}\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL\n});\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"GetCustomersByCustomerCode\");\n$RefreshReg$(_c2, \"GetLotById\");\n$RefreshReg$(_c3, \"GetLotsByName\");","map":{"version":3,"names":["axios","config","PurchaseApi","getCustomers","getCustomerById","GetCustomersByCustomerCode","createCustomer","updateCustomer","deleteCustomer","getLots","GetLotById","GetLotsByName","deleteLot","updateLot","createLot","instance","get","customerId","customerCode","_c","createdCustomer","post","headers","updatedCustomer","put","delete","_c2","_c3","create","baseURL","url","API_BASE_URL","$RefreshReg$"],"sources":["/Users/leonofv/Desktop/purchase-ui/src/components/http/PurchaseApi.tsx"],"sourcesContent":["import axios from 'axios';\nimport { config } from './Constants';\n\ninterface Customer {\n  customer_id: number;\n  customer_code: string;\n  customer_name: string;\n  customer_inn: string;\n  customer_kpp: string;\n  customer_legal_address: string;\n  customer_postal_address: string;\n  customer_email: string;\n  customer_code_main: string;\n  is_organization: boolean;\n  is_person: boolean;\n}\n\nexport const PurchaseApi = {\n  getCustomers,\n  getCustomerById,\n  GetCustomersByCustomerCode,\n  createCustomer,\n  updateCustomer,\n  deleteCustomer,\n\n  getLots,\n  GetLotById,\n  GetLotsByName,\n  deleteLot,\n  updateLot,\n  createLot,\n};\n\nfunction getCustomers() {\n  return instance.get(`/api/customers/all`);\n}\n\nfunction getCustomerById(customerId: number) {\n  return instance.get(`/api/customers/id/${customerId}`);\n}\n\nfunction GetCustomersByCustomerCode(customerCode: string) {\n  return instance.get(`/api/customers//customersCode/${customerCode}`);\n}\n\nfunction createCustomer(createdCustomer: Customer) {\n  return instance.post(`/api/customers/create`, createdCustomer, {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  });\n}\n\nfunction updateCustomer(customerId: number, updatedCustomer: Customer) {\n  return instance.put(`/api/customer/update${customerId}`, updatedCustomer, {\n    headers: {\n      'Content-type': 'application/json',\n    },\n  });\n}\n\nfunction deleteCustomer(customerId: number) {\n  return instance.delete(`/api/customers/delete/${customerId}`);\n}\n\nfunction getLots() {\n  return instance.get('/api/lots/all');\n}\n\nfunction GetLotById() {}\nfunction GetLotsByName() {}\nfunction deleteLot() {}\nfunction updateLot() {}\nfunction createLot() {}\n\nconst instance = axios.create({\n  baseURL: config.url.API_BASE_URL,\n});\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,aAAa;AAgBpC,OAAO,MAAMC,WAAW,GAAG;EACzBC,YAAY;EACZC,eAAe;EACfC,0BAA0B;EAC1BC,cAAc;EACdC,cAAc;EACdC,cAAc;EAEdC,OAAO;EACPC,UAAU;EACVC,aAAa;EACbC,SAAS;EACTC,SAAS;EACTC;AACF,CAAC;AAED,SAASX,YAAYA,CAAA,EAAG;EACtB,OAAOY,QAAQ,CAACC,GAAG,CAAC,oBAAoB,CAAC;AAC3C;AAEA,SAASZ,eAAeA,CAACa,UAAkB,EAAE;EAC3C,OAAOF,QAAQ,CAACC,GAAG,CAAC,qBAAqBC,UAAU,EAAE,CAAC;AACxD;AAEA,SAASZ,0BAA0BA,CAACa,YAAoB,EAAE;EACxD,OAAOH,QAAQ,CAACC,GAAG,CAAC,iCAAiCE,YAAY,EAAE,CAAC;AACtE;AAACC,EAAA,GAFQd,0BAA0B;AAInC,SAASC,cAAcA,CAACc,eAAyB,EAAE;EACjD,OAAOL,QAAQ,CAACM,IAAI,CAAC,uBAAuB,EAAED,eAAe,EAAE;IAC7DE,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ;AAEA,SAASf,cAAcA,CAACU,UAAkB,EAAEM,eAAyB,EAAE;EACrE,OAAOR,QAAQ,CAACS,GAAG,CAAC,uBAAuBP,UAAU,EAAE,EAAEM,eAAe,EAAE;IACxED,OAAO,EAAE;MACP,cAAc,EAAE;IAClB;EACF,CAAC,CAAC;AACJ;AAEA,SAASd,cAAcA,CAACS,UAAkB,EAAE;EAC1C,OAAOF,QAAQ,CAACU,MAAM,CAAC,yBAAyBR,UAAU,EAAE,CAAC;AAC/D;AAEA,SAASR,OAAOA,CAAA,EAAG;EACjB,OAAOM,QAAQ,CAACC,GAAG,CAAC,eAAe,CAAC;AACtC;AAEA,SAASN,UAAUA,CAAA,EAAG,CAAC;AAACgB,GAAA,GAAfhB,UAAU;AACnB,SAASC,aAAaA,CAAA,EAAG,CAAC;AAACgB,GAAA,GAAlBhB,aAAa;AACtB,SAASC,SAASA,CAAA,EAAG,CAAC;AACtB,SAASC,SAASA,CAAA,EAAG,CAAC;AACtB,SAASC,SAASA,CAAA,EAAG,CAAC;AAEtB,MAAMC,QAAQ,GAAGf,KAAK,CAAC4B,MAAM,CAAC;EAC5BC,OAAO,EAAE5B,MAAM,CAAC6B,GAAG,CAACC;AACtB,CAAC,CAAC;AAAC,IAAAZ,EAAA,EAAAO,GAAA,EAAAC,GAAA;AAAAK,YAAA,CAAAb,EAAA;AAAAa,YAAA,CAAAN,GAAA;AAAAM,YAAA,CAAAL,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}