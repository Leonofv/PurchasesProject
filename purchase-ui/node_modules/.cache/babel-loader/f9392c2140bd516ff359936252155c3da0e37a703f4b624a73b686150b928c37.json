{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from \"react\";\nimport { scrollIntoView } from \"../../../utils/scrollIntoView\";\nexport function useHoistedState(a) {\n  var b = React.useRef(function (a, b) {\n      return b;\n    }),\n    c = React.useState(a),\n    d = _slicedToArray(c, 2),\n    e = d[0],\n    f = d[1],\n    g = React.useCallback(function (a, c) {\n      if (!c) throw new Error(\"An action type is required to update the state\");\n      return f(function (d) {\n        return b.current(d, a(d), c);\n      });\n    }, [f]);\n  return [e, g];\n}\nexport var scrollToIndex = function (a, b, c, d) {\n  if (b.current) {\n    var e = c[a].current;\n    e ? scrollIntoView(e, b.current) : d();\n  }\n};","map":{"version":3,"names":["React","scrollIntoView","useHoistedState","a","b","useRef","c","useState","d","_slicedToArray","e","f","g","useCallback","Error","current","scrollToIndex"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/node_modules/@consta/src/components/SelectComponents/useSelect/helpers.ts"],"sourcesContent":["import React from 'react';\n\nimport { scrollIntoView } from '##/utils/scrollIntoView';\n\ntype State = {\n  searchValue: string;\n  resolvedSearchValue: string;\n  isOpen: boolean;\n  highlightedIndex: number;\n  scrollToHighlighted: boolean;\n};\ntype Action = string;\ntype Reducer = (state: State, newState: State, action: Action) => State;\ntype Updater = (state: State) => State;\n\nexport function useHoistedState(\n  initialState: State,\n): [State, (updater: Updater, action: Action) => void] {\n  const reducerRef = React.useRef<Reducer>((old, newState) => newState);\n  const [state, _setState] = React.useState<State>(initialState);\n  const setState = React.useCallback(\n    (updater: Updater, action: Action) => {\n      if (!action) {\n        throw new Error('An action type is required to update the state');\n      }\n      return _setState((old) => reducerRef.current(old, updater(old), action));\n    },\n    [_setState],\n  );\n  return [state, setState];\n}\n\ntype ScrollToIndexFunctionType = (\n  optionIndex: number,\n  dropdownRef: React.MutableRefObject<HTMLDivElement | null>,\n  optionsRefs: React.RefObject<HTMLDivElement>[],\n  onFailure: () => void,\n) => void;\n\nexport const scrollToIndex: ScrollToIndexFunctionType = (\n  index,\n  dropdownRef,\n  optionsRefs,\n  onFailure,\n): void => {\n  if (!dropdownRef.current) {\n    return;\n  }\n\n  const element = optionsRefs[index].current;\n\n  if (element) {\n    scrollIntoView(element, dropdownRef.current);\n  } else {\n    onFailure();\n  }\n};\n"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,SAASC,cAAT;AAaA,OAAO,SAASC,eAATA,CACLC,CADK,EAEgD;EAAA,IAC/CC,CAAU,GAAGJ,KAAK,CAACK,MAAN,CAAsB,UAACF,CAAD,EAAMC,CAAN;MAAA,OAAmBA,CAAnB;IAAA,CAAtB,CADkC;IAAAE,CAAA,GAE1BN,KAAK,CAACO,QAAN,CAAsBJ,CAAtB,CAF0B;IAAAK,CAAA,GAAAC,cAAA,CAAAH,CAAA;IAE9CI,CAF8C,GAAAF,CAAA;IAEvCG,CAFuC,GAAAH,CAAA;IAG/CI,CAAQ,GAAGZ,KAAK,CAACa,WAAN,CACf,UAACV,CAAD,EAAmBG,CAAnB,EAAsC;MACpC,IAAI,CAACA,CAAL,EACE,MAAM,IAAIQ,KAAJ,CAAU,gDAAV,CAAN;MAEF,OAAOH,CAAS,CAAC,UAACH,CAAD;QAAA,OAASJ,CAAU,CAACW,OAAX,CAAmBP,CAAnB,EAAwBL,CAAO,CAACK,CAAD,CAA/B,EAAsCF,CAAtC,CAAT;MAAA,CAAD,CACjB;IAAA,CANc,EAOf,CAACK,CAAD,CAPe,CAHoC;EAYrD,OAAO,CAACD,CAAD,EAAQE,CAAR,CACR;AAAA;AASD,OAAO,IAAMI,aAAwC,GAAG,SAAAA,CACtDb,CADsD,EAEtDC,CAFsD,EAGtDE,CAHsD,EAItDE,CAJsD,EAK7C;EACT,IAAKJ,CAAW,CAACW,OAAjB;IAIA,IAAML,CAAO,GAAGJ,CAAW,CAACH,CAAD,CAAX,CAAmBY,OAAnC;IAEIL,CANJ,GAOET,cAAc,CAACS,CAAD,EAAUN,CAAW,CAACW,OAAtB,CAPhB,GASEP,CAAS,EATX;EAAA;AAWD,CAjBM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}