{"ast":null,"code":"var _jsxFileName = \"/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerList.tsx\";\nimport React from 'react';\nimport { Button } from '@consta/uikit/Button';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { Table } from '@consta/uikit/Table';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst columns = [{\n  title: 'Код',\n  accessor: 'customerCode'\n}, {\n  title: 'Наименование',\n  accessor: 'customerName'\n}, {\n  title: 'ИНН',\n  accessor: 'customerInn'\n}, {\n  title: 'КПП',\n  accessor: 'customerKpp'\n}, {\n  title: 'Юр. адрес',\n  accessor: 'customerLegalAddress'\n}, {\n  title: 'Почтовый адрес',\n  accessor: 'customerPostalAddress'\n}, {\n  title: 'Электронная почта',\n  accessor: 'customerEmail'\n}, {\n  title: 'Тип',\n  renderCell: customer => /*#__PURE__*/_jsxDEV(\"span\", {\n    children: customer.isOrganization ? 'Юр. лицо' : 'Физ. лицо'\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 7\n  }, this)\n}, {\n  title: 'Действия',\n  renderCell: customer => /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      iconLeft: IconEdit,\n      size: \"s\",\n      view: \"ghost\",\n      onClick: () => console.log(`Изменить ${customer.id}`),\n      style: {\n        marginRight: '8px'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      iconLeft: IconTrash,\n      size: \"s\",\n      view: \"ghost\",\n      onClick: () => console.log(`Удалить ${customer.id}`)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true)\n}];\nconst CustomerList = ({\n  customers\n}) => {\n  const rows = customers.map(customer => ({\n    ...customer,\n    id: customer.id.toString()\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      columns: columns,\n      rows: rows\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n};\n_c = CustomerList;\nexport default CustomerList;\nvar _c;\n$RefreshReg$(_c, \"CustomerList\");","map":{"version":3,"names":["React","Button","IconEdit","IconTrash","Table","jsxDEV","_jsxDEV","Fragment","_Fragment","columns","title","accessor","renderCell","customer","children","isOrganization","fileName","_jsxFileName","lineNumber","columnNumber","iconLeft","size","view","onClick","console","log","id","style","marginRight","CustomerList","customers","rows","map","toString","_c","$RefreshReg$"],"sources":["/Users/leonofv/Documents/GitHub/PurchasesProject/purchase-ui/src/components/pages/customer/CustomerList.tsx"],"sourcesContent":["import React from 'react';\nimport { Button } from '@consta/uikit/Button';\nimport { IconEdit } from '@consta/icons/IconEdit';\nimport { IconTrash } from '@consta/icons/IconTrash';\nimport { Table, TableColumn, TableRow } from '@consta/uikit/Table';\n\ninterface Customer {\n  id: number;\n  customerCode: string;\n  customerName: string;\n  customerInn: string;\n  customerKpp: string;\n  customerLegalAddress: string;\n  customerPostalAddress: string;\n  customerEmail: string;\n  customerCodeMain: string | null;\n  isOrganization: boolean;\n  isPerson: boolean;\n}\n\ninterface CustomerRow extends Omit<Customer, 'id'>, TableRow {\n  id: string;\n}\n\ninterface Props {\n  customers: Customer[];\n}\n\nconst columns: TableColumn<CustomerRow>[] = [\n  {\n    title: 'Код',\n    accessor: 'customerCode',\n  },\n  {\n    title: 'Наименование',\n    accessor: 'customerName',\n  },\n  {\n    title: 'ИНН',\n    accessor: 'customerInn',\n  },\n  {\n    title: 'КПП',\n    accessor: 'customerKpp',\n  },\n  {\n    title: 'Юр. адрес',\n    accessor: 'customerLegalAddress',\n  },\n  {\n    title: 'Почтовый адрес',\n    accessor: 'customerPostalAddress',\n  },\n  {\n    title: 'Электронная почта',\n    accessor: 'customerEmail',\n  },\n  {\n    title: 'Тип',\n    renderCell: (customer: CustomerRow) => (\n      <span>{customer.isOrganization ? 'Юр. лицо' : 'Физ. лицо'}</span>\n    ),\n  },\n  {\n    title: 'Действия',\n    renderCell: (customer: CustomerRow) => (\n      <>\n        <Button\n          iconLeft={IconEdit}\n          size=\"s\"\n          view=\"ghost\"\n          onClick={() => console.log(`Изменить ${customer.id}`)}\n          style={{ marginRight: '8px' }}\n        />\n        <Button\n          iconLeft={IconTrash}\n          size=\"s\"\n          view=\"ghost\"\n          onClick={() => console.log(`Удалить ${customer.id}`)}\n        />\n      </>\n    ),\n  } as any,\n];\n\nconst CustomerList: React.FC<Props> = ({ customers }) => {\n  const rows: CustomerRow[] = customers.map((customer) => ({\n    ...customer,\n    id: customer.id.toString(),\n  }));\n\n  return (\n    <div>\n      <Table columns={columns} rows={rows} />\n    </div>\n  );\n};\n\nexport default CustomerList;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,MAAM,QAAQ,sBAAsB;AAC7C,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,SAAS,QAAQ,yBAAyB;AACnD,SAASC,KAAK,QAA+B,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAwBnE,MAAMC,OAAmC,GAAG,CAC1C;EACEC,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,KAAK,EAAE,cAAc;EACrBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,KAAK,EAAE,KAAK;EACZC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,KAAK,EAAE,WAAW;EAClBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,KAAK,EAAE,gBAAgB;EACvBC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,KAAK,EAAE,mBAAmB;EAC1BC,QAAQ,EAAE;AACZ,CAAC,EACD;EACED,KAAK,EAAE,KAAK;EACZE,UAAU,EAAGC,QAAqB,iBAChCP,OAAA;IAAAQ,QAAA,EAAOD,QAAQ,CAACE,cAAc,GAAG,UAAU,GAAG;EAAW;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAO;AAEpE,CAAC,EACD;EACET,KAAK,EAAE,UAAU;EACjBE,UAAU,EAAGC,QAAqB,iBAChCP,OAAA,CAAAE,SAAA;IAAAM,QAAA,gBACER,OAAA,CAACL,MAAM;MACLmB,QAAQ,EAAElB,QAAS;MACnBmB,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,YAAYZ,QAAQ,CAACa,EAAE,EAAE,CAAE;MACtDC,KAAK,EAAE;QAAEC,WAAW,EAAE;MAAM;IAAE;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CAAC,eACFb,OAAA,CAACL,MAAM;MACLmB,QAAQ,EAAEjB,SAAU;MACpBkB,IAAI,EAAC,GAAG;MACRC,IAAI,EAAC,OAAO;MACZC,OAAO,EAAEA,CAAA,KAAMC,OAAO,CAACC,GAAG,CAAC,WAAWZ,QAAQ,CAACa,EAAE,EAAE;IAAE;MAAAV,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA,eACF;AAEN,CAAC,CACF;AAED,MAAMU,YAA6B,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EACvD,MAAMC,IAAmB,GAAGD,SAAS,CAACE,GAAG,CAAEnB,QAAQ,KAAM;IACvD,GAAGA,QAAQ;IACXa,EAAE,EAAEb,QAAQ,CAACa,EAAE,CAACO,QAAQ,CAAC;EAC3B,CAAC,CAAC,CAAC;EAEH,oBACE3B,OAAA;IAAAQ,QAAA,eACER,OAAA,CAACF,KAAK;MAACK,OAAO,EAAEA,OAAQ;MAACsB,IAAI,EAAEA;IAAK;MAAAf,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAACe,EAAA,GAXIL,YAA6B;AAanC,eAAeA,YAAY;AAAC,IAAAK,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}