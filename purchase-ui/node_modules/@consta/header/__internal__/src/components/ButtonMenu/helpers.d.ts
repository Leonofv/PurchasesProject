/// <reference types="react" />
import { ButtonMenuDefaultItem, ButtonMenuPropGetItemHref, ButtonMenuPropGetItemIcon, ButtonMenuPropGetItemLabel, ButtonMenuPropGetItemOnClick, ButtonMenuPropGetItemTarget, ButtonMenuProps } from './types';
export declare const defaultGetItemLabel: ButtonMenuPropGetItemLabel<ButtonMenuDefaultItem>;
export declare const defaultGetItemHref: ButtonMenuPropGetItemHref<ButtonMenuDefaultItem>;
export declare const defaultGetItemOnClick: ButtonMenuPropGetItemOnClick<ButtonMenuDefaultItem>;
export declare const defaultGetItemTarget: ButtonMenuPropGetItemTarget<ButtonMenuDefaultItem>;
export declare const defaultGetItemIcon: ButtonMenuPropGetItemIcon<ButtonMenuDefaultItem>;
export declare const getGetters: <ITEM>(props: {
    getItemLabel?: ButtonMenuPropGetItemLabel<ITEM> | undefined;
    getItemHref?: ButtonMenuPropGetItemHref<ITEM> | undefined;
    getItemOnClick?: ButtonMenuPropGetItemOnClick<ITEM> | undefined;
    getItemTarget?: ButtonMenuPropGetItemTarget<ITEM> | undefined;
    getItemIcon?: ButtonMenuPropGetItemIcon<ITEM> | undefined;
}) => {
    getItemLabel: ButtonMenuPropGetItemLabel<ButtonMenuDefaultItem> | ButtonMenuPropGetItemLabel<ITEM>;
    getItemHref: ButtonMenuPropGetItemHref<ButtonMenuDefaultItem> | ButtonMenuPropGetItemHref<ITEM>;
    getItemOnClick: ButtonMenuPropGetItemOnClick<ButtonMenuDefaultItem> | ButtonMenuPropGetItemOnClick<ITEM>;
    getItemTarget: ButtonMenuPropGetItemTarget<ButtonMenuDefaultItem> | ButtonMenuPropGetItemTarget<ITEM>;
    getItemIcon: ButtonMenuPropGetItemIcon<ButtonMenuDefaultItem> | ButtonMenuPropGetItemIcon<ITEM>;
};
export declare function withDefaultGetters<ITEM>(props: ButtonMenuProps<ITEM>): {
    items: ITEM[];
    onItemClick?: import("./types").ButtonMenuPropOnItemClick<ITEM> | undefined;
    getItemHref?: ButtonMenuPropGetItemHref<ITEM> | undefined;
    getItemLabel?: ButtonMenuPropGetItemLabel<ITEM> | undefined;
    getItemTarget?: ButtonMenuPropGetItemTarget<ITEM> | undefined;
    getItemOnClick?: ButtonMenuPropGetItemOnClick<ITEM> | undefined;
    getItemIcon?: ButtonMenuPropGetItemIcon<ITEM> | undefined;
    form?: "default" | "brick" | "round" | "brickRound" | "roundBrick" | "brickDefault" | "defaultBrick" | undefined;
    size?: "m" | "xs" | "s" | "l" | undefined;
    view?: "primary" | "clear" | "ghost" | "secondary" | undefined;
    onlyIcon?: boolean | undefined;
} & Omit<import("react").HTMLAttributes<HTMLDivElement>, "css" | "items" | "onItemClick" | "getItemHref" | "getItemLabel" | "getItemTarget" | "getItemOnClick" | "getItemIcon" | "form" | "size" | "view" | "onlyIcon"> & import("react").RefAttributes<HTMLDivElement> & (ITEM extends {
    label: string;
} ? {} : {
    getItemLabel: ButtonMenuPropGetItemLabel<ITEM>;
}) & {
    getItemLabel: ButtonMenuPropGetItemLabel<ButtonMenuDefaultItem> | ButtonMenuPropGetItemLabel<ITEM>;
    getItemHref: ButtonMenuPropGetItemHref<ButtonMenuDefaultItem> | ButtonMenuPropGetItemHref<ITEM>;
    getItemOnClick: ButtonMenuPropGetItemOnClick<ButtonMenuDefaultItem> | ButtonMenuPropGetItemOnClick<ITEM>;
    getItemTarget: ButtonMenuPropGetItemTarget<ButtonMenuDefaultItem> | ButtonMenuPropGetItemTarget<ITEM>;
    getItemIcon: ButtonMenuPropGetItemIcon<ButtonMenuDefaultItem> | ButtonMenuPropGetItemIcon<ITEM>;
};
