{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/components/ButtonMenu/types.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\nimport {\n  ButtonPropForm,\n  ButtonPropSize,\n  ButtonPropView,\n} from '@consta/uikit/Button';\n\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport type ButtonMenuDefaultItem = {\n  label: string;\n  href?: string;\n  target?: string;\n  icon?: IconComponent;\n  onClick?: React.EventHandler<React.MouseEvent>;\n};\n\nexport type ButtonMenuPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type ButtonMenuPropGetItemHref<ITEM> = (\n  item: ITEM,\n) => string | undefined;\nexport type ButtonMenuPropGetItemTarget<ITEM> = (\n  item: ITEM,\n) => string | undefined;\nexport type ButtonMenuPropGetItemIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type ButtonMenuPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.EventHandler<React.MouseEvent> | undefined;\nexport type ButtonMenuPropOnItemClick<ITEM> = (\n  item: ITEM,\n  props: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type ButtonMenuProps<ITEM = ButtonMenuDefaultItem> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      items: ITEM[];\n      onItemClick?: ButtonMenuPropOnItemClick<ITEM>;\n      getItemHref?: ButtonMenuPropGetItemHref<ITEM>;\n      getItemLabel?: ButtonMenuPropGetItemLabel<ITEM>;\n      getItemTarget?: ButtonMenuPropGetItemTarget<ITEM>;\n      getItemOnClick?: ButtonMenuPropGetItemOnClick<ITEM>;\n      getItemIcon?: ButtonMenuPropGetItemIcon<ITEM>;\n      form?: ButtonPropForm;\n      size?: ButtonPropSize;\n      view?: ButtonPropView;\n      onlyIcon?: boolean;\n    },\n    HTMLDivElement\n  > &\n    (ITEM extends { label: ButtonMenuDefaultItem['label'] }\n      ? {}\n      : { getItemLabel: ButtonMenuPropGetItemLabel<ITEM> });\n\nexport type ButtonMenuComponent = <ITEM = ButtonMenuDefaultItem>(\n  props: ButtonMenuProps<ITEM>,\n) => React.ReactElement | null;\n"],"mappings":""}