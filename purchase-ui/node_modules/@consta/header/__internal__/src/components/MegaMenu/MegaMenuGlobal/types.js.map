{"version":3,"file":"types.js","names":[],"sources":["../../../../../../src/components/MegaMenu/MegaMenuGlobal/types.ts"],"sourcesContent":["import {\n  AsAttributes,\n  AsTags,\n} from '@consta/uikit/__internal__/src/utils/types/AsTags';\nimport { PropsWithAsAttributes } from '@consta/uikit/__internal__/src/utils/types/PropsWithAsAttributes';\nimport React from 'react';\n\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport type MegaMenuGlobalDefaultItem = {\n  as?: AsTags;\n  attributes?: AsAttributes;\n  onClick?: React.MouseEventHandler;\n  label: string;\n  groupId?: string | number;\n};\n\nexport type MegaMenuGlobalDefaultGroup = {\n  label: string;\n  id?: string | number;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type MegaMenuGlobalPropGetItemAs<ITEM> = (\n  item: ITEM,\n) => AsTags | undefined;\nexport type MegaMenuGlobalPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => AsAttributes | undefined;\nexport type MegaMenuGlobalPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.MouseEventHandler | undefined;\nexport type MegaMenuGlobalPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type MegaMenuGlobalPropGetItemGroupId<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\n\nexport type MegaMenuGlobalPropGetGroupId<ITEM> = (\n  item: ITEM,\n) => number | string | undefined;\nexport type MegaMenuGlobalPropGetGroupLabel<ITEM> = (item: ITEM) => string;\nexport type MegaMenuGlobalPropGetGroupOnClick<ITEM> = (\n  item: ITEM,\n) => React.MouseEventHandler | undefined;\n\nexport type MegaMenuGlobalPropOnItemClick<ITEM> = (\n  item: ITEM,\n  props: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type MegaMenuGlobalPropOnGroupClick<GROUP> = (\n  group: GROUP,\n  params: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type MappersItem<ITEM = MegaMenuGlobalDefaultItem> = {\n  getItemLabel?: MegaMenuGlobalPropGetItemLabel<ITEM>;\n  getItemAs?: MegaMenuGlobalPropGetItemAs<ITEM>;\n  getItemGroupId?: MegaMenuGlobalPropGetItemGroupId<ITEM>;\n  getItemAttributes?: MegaMenuGlobalPropGetItemAttributes<ITEM>;\n  getItemOnClick?: MegaMenuGlobalPropGetItemOnClick<ITEM>;\n};\n\nexport type MegaMenuGlobalProps<\n  ITEM = MegaMenuGlobalDefaultItem,\n  GROUP = MegaMenuGlobalDefaultGroup,\n> = PropsWithHTMLAttributesAndRef<\n  {\n    items: ITEM[];\n    groups?: GROUP[];\n    getGroupKey?: MegaMenuGlobalPropGetGroupId<GROUP>;\n    getGroupLabel?: MegaMenuGlobalPropGetGroupLabel<GROUP>;\n    getGroupOnClick?: MegaMenuGlobalPropGetGroupOnClick<GROUP>;\n    maxElements?: number;\n    onGroupClick?: MegaMenuGlobalPropOnGroupClick<GROUP>;\n    onItemClick?: MegaMenuGlobalPropOnItemClick<ITEM>;\n    columns?: number;\n    title?: string;\n    showButtonText?: string;\n    hideButtonText?: string;\n  } & MappersItem<ITEM> &\n    (ITEM extends { label: string }\n      ? {}\n      : {\n          getItemLabel: MegaMenuGlobalPropGetItemLabel<ITEM>;\n        }) &\n    (GROUP extends { label: string | unknown }\n      ? {}\n      : {\n          getGroupLabel: MegaMenuGlobalPropGetGroupLabel<GROUP>;\n        }),\n  HTMLDivElement\n>;\n\nexport type MegaMenuGlobalComponent = <\n  ITEM = MegaMenuGlobalDefaultItem,\n  GROUP = MegaMenuGlobalDefaultGroup,\n>(\n  props: MegaMenuGlobalProps<ITEM, GROUP>,\n  ref: React.Ref<HTMLDivElement>,\n) => React.ReactElement | null;\n\nexport type MegaMenuGlobalGroupProps<ITEM = MegaMenuGlobalDefaultItem> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      items: ITEM[];\n      title?: string;\n      maxElements?: number;\n      onItemClick?: MegaMenuGlobalPropOnItemClick<ITEM>;\n      showButtonText?: string;\n      hideButtonText?: string;\n    } & Required<MappersItem<ITEM>>,\n    HTMLDivElement\n  >;\n\nexport type MegaMenuGlobalGroupComponent = <ITEM = MegaMenuGlobalDefaultItem>(\n  props: MegaMenuGlobalGroupProps<ITEM>,\n  ref: React.Ref<HTMLDivElement>,\n) => React.ReactElement | null;\n\nexport type MegaMenuGlobalItemProps<AS extends AsTags = 'div'> =\n  PropsWithAsAttributes<\n    {\n      label: string;\n      onClick?: React.MouseEventHandler;\n    },\n    AS\n  >;\n\nexport type MegaMenuGlobalItemComponent = <AS extends AsTags = 'div'>(\n  props: MegaMenuGlobalItemProps<AS>,\n  ref: React.Ref<HTMLElement>,\n) => React.ReactElement | null;\n"],"mappings":""}