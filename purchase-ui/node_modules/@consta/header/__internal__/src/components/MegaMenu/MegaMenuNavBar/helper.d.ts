/// <reference types="react" />
import { MegaMenuNavBarDefaultItem, MegaMenuNavBarPropGetItemActive, MegaMenuNavBarPropGetItemAs, MegaMenuNavBarPropGetItemAttributes, MegaMenuNavBarPropGetItemIconLeft, MegaMenuNavBarPropGetItemIconRight, MegaMenuNavBarPropGetItemLabel, MegaMenuNavBarPropGetItemOnClick, MegaMenuNavBarProps } from './types';
export declare const withDefaultGetters: <ITEM>(props: MegaMenuNavBarProps<ITEM>) => {
    items: ITEM[];
    getItemLabel?: MegaMenuNavBarPropGetItemLabel<ITEM> | undefined;
    getItemActive?: MegaMenuNavBarPropGetItemActive<ITEM> | undefined;
    getItemOnClick?: MegaMenuNavBarPropGetItemOnClick<ITEM> | undefined;
    getItemIconLeft?: MegaMenuNavBarPropGetItemIconLeft<ITEM> | undefined;
    getItemIconRight?: MegaMenuNavBarPropGetItemIconRight<ITEM> | undefined;
    getItemAs?: MegaMenuNavBarPropGetItemAs<ITEM> | undefined;
    getItemAttributes?: MegaMenuNavBarPropGetItemAttributes<ITEM> | undefined;
    onItemClick?: import("./types").MegaMenuNavBarPropOnItemClick<ITEM> | undefined;
} & (ITEM extends {
    label: string;
} ? {} : {
    getItemLabel: MegaMenuNavBarPropGetItemLabel<ITEM>;
}) & Omit<import("react").HTMLAttributes<HTMLDivElement>, "css" | "items" | "onItemClick" | "getItemLabel" | "getItemOnClick" | "getItemAs" | "getItemAttributes" | "getItemIconLeft" | "getItemActive" | "getItemIconRight" | keyof (ITEM extends {
    label: string;
} ? {} : {
    getItemLabel: MegaMenuNavBarPropGetItemLabel<ITEM>;
})> & {
    getItemLabel: MegaMenuNavBarPropGetItemLabel<MegaMenuNavBarDefaultItem> | MegaMenuNavBarPropGetItemLabel<ITEM>;
    getItemActive: MegaMenuNavBarPropGetItemActive<MegaMenuNavBarDefaultItem> | MegaMenuNavBarPropGetItemActive<ITEM>;
    getItemOnClick: MegaMenuNavBarPropGetItemOnClick<MegaMenuNavBarDefaultItem> | MegaMenuNavBarPropGetItemOnClick<ITEM>;
    getItemIconLeft: MegaMenuNavBarPropGetItemIconLeft<MegaMenuNavBarDefaultItem> | MegaMenuNavBarPropGetItemIconLeft<ITEM>;
    getItemIconRight: MegaMenuNavBarPropGetItemIconRight<MegaMenuNavBarDefaultItem> | MegaMenuNavBarPropGetItemIconRight<ITEM>;
    getItemAs: MegaMenuNavBarPropGetItemAs<MegaMenuNavBarDefaultItem> | MegaMenuNavBarPropGetItemAs<ITEM>;
    getItemAttributes: MegaMenuNavBarPropGetItemAttributes<MegaMenuNavBarDefaultItem> | MegaMenuNavBarPropGetItemAttributes<ITEM>;
    ref?: import("react").Ref<HTMLDivElement> | undefined;
    key?: import("react").Key | null | undefined;
};
