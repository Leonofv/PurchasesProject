{"version":3,"file":"types.js","names":[],"sources":["../../../../../../src/components/MegaMenu/MegaMenuNavBar/types.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\nimport {\n  AsAttributes,\n  AsTags,\n} from '@consta/uikit/__internal__/src/utils/types/AsTags';\nimport { PropsWithAsAttributes } from '@consta/uikit/__internal__/src/utils/types/PropsWithAsAttributes';\nimport React from 'react';\n\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport type MegaMenuNavBarDefaultItem = {\n  label: string;\n  iconLeft?: IconComponent;\n  iconRight?: IconComponent;\n  active?: boolean;\n  as?: AsTags;\n  attributes?: AsAttributes;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type MegaMenuNavBarPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type MegaMenuNavBarPropGetItemIconLeft<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type MegaMenuNavBarPropGetItemIconRight<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type MegaMenuNavBarPropGetItemActive<ITEM> = (\n  item: ITEM,\n) => boolean | undefined;\nexport type MegaMenuNavBarPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.MouseEventHandler | undefined;\nexport type MegaMenuNavBarPropGetItemAs<ITEM> = (\n  item: ITEM,\n) => AsTags | undefined;\nexport type MegaMenuNavBarPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => AsAttributes | undefined;\n\nexport type MegaMenuNavBarPropOnItemClick<ITEM> = (\n  item: ITEM,\n  props: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type MegaMenuNavBarProps<ITEM = MegaMenuNavBarDefaultItem> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      items: ITEM[];\n      getItemLabel?: MegaMenuNavBarPropGetItemLabel<ITEM>;\n      getItemActive?: MegaMenuNavBarPropGetItemActive<ITEM>;\n      getItemOnClick?: MegaMenuNavBarPropGetItemOnClick<ITEM>;\n      getItemIconLeft?: MegaMenuNavBarPropGetItemIconLeft<ITEM>;\n      getItemIconRight?: MegaMenuNavBarPropGetItemIconRight<ITEM>;\n      getItemAs?: MegaMenuNavBarPropGetItemAs<ITEM>;\n      getItemAttributes?: MegaMenuNavBarPropGetItemAttributes<ITEM>;\n      onItemClick?: MegaMenuNavBarPropOnItemClick<ITEM>;\n    } & (ITEM extends { label: string }\n      ? {}\n      : {\n          getItemLabel: MegaMenuNavBarPropGetItemLabel<ITEM>;\n        }),\n    HTMLDivElement\n  >;\n\nexport type MegaMenuNavBarComponent = <ITEM = MegaMenuNavBarDefaultItem>(\n  props: MegaMenuNavBarProps<ITEM>,\n  ref: React.Ref<HTMLDivElement>,\n) => React.ReactElement | null;\n\nexport type MegaMenuNavBarItemProps<AS extends AsTags = 'div'> =\n  PropsWithAsAttributes<\n    {\n      label: string;\n      active?: boolean;\n      onClick?: React.MouseEventHandler;\n      iconLeft?: IconComponent;\n      iconRight?: IconComponent;\n    },\n    AS\n  >;\n\nexport type MegaMenuNavBarItemComponent = <AS extends AsTags = 'div'>(\n  props: MegaMenuNavBarItemProps<AS>,\n  ref: React.Ref<HTMLElement>,\n) => React.ReactElement | null;\n"],"mappings":""}