/// <reference types="react" />
import { MenuDefaultItem, MenuPropGetItemActive, MenuPropGetItemHref, MenuPropGetItemLabel, MenuPropGetItemOnClick, MenuPropGetItemSubMenu, MenuPropGetItemTarget, MenuProps } from './types';
export declare const defaultGetItemLabel: MenuPropGetItemLabel<MenuDefaultItem>;
export declare const defaultGetItemActive: MenuPropGetItemActive<MenuDefaultItem>;
export declare const defaultGetItemHref: MenuPropGetItemHref<MenuDefaultItem>;
export declare const defaultGetItemOnClick: MenuPropGetItemOnClick<MenuDefaultItem>;
export declare const defaultGetItemTarget: MenuPropGetItemTarget<MenuDefaultItem>;
export declare const defaultGetItemSubMenu: MenuPropGetItemSubMenu<MenuDefaultItem>;
export declare const getGetters: <ITEM>(props: {
    getItemLabel?: MenuPropGetItemLabel<ITEM> | undefined;
    getItemActive?: MenuPropGetItemActive<ITEM> | undefined;
    getItemHref?: MenuPropGetItemHref<ITEM> | undefined;
    getItemOnClick?: MenuPropGetItemOnClick<ITEM> | undefined;
    getItemTarget?: MenuPropGetItemTarget<ITEM> | undefined;
    getItemSubMenu?: MenuPropGetItemSubMenu<ITEM> | undefined;
}) => {
    getItemLabel: MenuPropGetItemLabel<MenuDefaultItem> | MenuPropGetItemLabel<ITEM>;
    getItemActive: MenuPropGetItemActive<MenuDefaultItem> | MenuPropGetItemActive<ITEM>;
    getItemHref: MenuPropGetItemHref<MenuDefaultItem> | MenuPropGetItemHref<ITEM>;
    getItemOnClick: MenuPropGetItemOnClick<MenuDefaultItem> | MenuPropGetItemOnClick<ITEM>;
    getItemTarget: MenuPropGetItemTarget<MenuDefaultItem> | MenuPropGetItemTarget<ITEM>;
    getItemSubMenu: MenuPropGetItemSubMenu<MenuDefaultItem> | MenuPropGetItemSubMenu<ITEM>;
};
export declare function withDefaultGetters<ITEM>(props: MenuProps<ITEM>): {
    items: ITEM[];
    width?: "full" | undefined;
    onItemClick?: import("./types").MenuPropOnItemClick<ITEM> | undefined;
    getItemHref?: MenuPropGetItemHref<ITEM> | undefined;
    getItemLabel?: MenuPropGetItemLabel<ITEM> | undefined;
    getItemTarget?: MenuPropGetItemTarget<ITEM> | undefined;
    getItemActive?: MenuPropGetItemActive<ITEM> | undefined;
    getItemOnClick?: MenuPropGetItemOnClick<ITEM> | undefined;
    getItemSubMenu?: MenuPropGetItemSubMenu<ITEM> | undefined;
} & Omit<import("react").HTMLAttributes<HTMLDivElement>, "css" | "items" | "onItemClick" | "getItemHref" | "getItemLabel" | "getItemTarget" | "getItemOnClick" | "width" | "getItemSubMenu" | "getItemActive"> & import("react").RefAttributes<HTMLDivElement> & (ITEM extends {
    label: string;
} ? {} : {
    getItemLabel: MenuPropGetItemLabel<ITEM>;
}) & {
    getItemLabel: MenuPropGetItemLabel<MenuDefaultItem> | MenuPropGetItemLabel<ITEM>;
    getItemActive: MenuPropGetItemActive<MenuDefaultItem> | MenuPropGetItemActive<ITEM>;
    getItemHref: MenuPropGetItemHref<MenuDefaultItem> | MenuPropGetItemHref<ITEM>;
    getItemOnClick: MenuPropGetItemOnClick<MenuDefaultItem> | MenuPropGetItemOnClick<ITEM>;
    getItemTarget: MenuPropGetItemTarget<MenuDefaultItem> | MenuPropGetItemTarget<ITEM>;
    getItemSubMenu: MenuPropGetItemSubMenu<MenuDefaultItem> | MenuPropGetItemSubMenu<ITEM>;
};
