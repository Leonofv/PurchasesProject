{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/components/Menu/types.ts"],"sourcesContent":["import { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport type MenuDefaultItem = {\n  label: string;\n  href?: string;\n  target?: string;\n  active?: boolean;\n  onClick?: React.EventHandler<React.MouseEvent>;\n  subMenu?: MenuDefaultItem[];\n};\n\nexport type MenuPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type MenuPropGetItemHref<ITEM> = (item: ITEM) => string | undefined;\nexport type MenuPropGetItemTarget<ITEM> = (item: ITEM) => string | undefined;\nexport type MenuPropGetItemActive<ITEM> = (item: ITEM) => boolean | undefined;\nexport type MenuPropGetItemSubMenu<ITEM> = (item: ITEM) => ITEM[] | undefined;\nexport type MenuPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.EventHandler<React.MouseEvent> | undefined;\nexport type MenuPropOnItemClick<ITEM> = (\n  item: ITEM,\n  props: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type MenuProps<ITEM = MenuDefaultItem> = PropsWithHTMLAttributesAndRef<\n  {\n    items: ITEM[];\n    width?: 'full';\n    onItemClick?: MenuPropOnItemClick<ITEM>;\n    getItemHref?: MenuPropGetItemHref<ITEM>;\n    getItemLabel?: MenuPropGetItemLabel<ITEM>;\n    getItemTarget?: MenuPropGetItemTarget<ITEM>;\n    getItemActive?: MenuPropGetItemActive<ITEM>;\n    getItemOnClick?: MenuPropGetItemOnClick<ITEM>;\n    getItemSubMenu?: MenuPropGetItemSubMenu<ITEM>;\n  },\n  HTMLDivElement\n> &\n  (ITEM extends { label: MenuDefaultItem['label'] }\n    ? {}\n    : { getItemLabel: MenuPropGetItemLabel<ITEM> });\n\nexport type MenuComponent = <ITEM = MenuDefaultItem>(\n  props: MenuProps<ITEM>,\n) => React.ReactElement | null;\n"],"mappings":""}