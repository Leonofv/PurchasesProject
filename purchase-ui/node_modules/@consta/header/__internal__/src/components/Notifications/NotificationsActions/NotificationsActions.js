import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";const _excluded=["items","className","children","mainButtonOnlyIcon","opened","onOpen","getItemIcon","getItemLabel","getItemOnClick","onItemClick"];import{IconMeatball}from"@consta/icons/IconMeatball";import{Button}from"@consta/uikit/Button";import{ContextMenu}from"@consta/uikit/ContextMenu";import{useFlag}from"@consta/uikit/useFlag";import{useForkRef}from"@consta/uikit/useForkRef";import{useMutableRef}from"@consta/uikit/useMutableRef";import{withTooltip}from"@consta/uikit/withTooltip";import React,{forwardRef,useEffect,useRef}from"react";import{getItemClick}from"../../../helpers/getItemClick";import{withDefaultGetters}from"./helpers";const ButtonWithTooltip=withTooltip()(Button),NotificationsActionsRender=(a,b)=>{var c;const d=withDefaultGetters(a),{items:m=[],className:e,children:f,mainButtonOnlyIcon:g,opened:n=!1,onOpen:h,getItemIcon:i,getItemLabel:j,getItemOnClick:k,onItemClick:l}=d,o=_objectWithoutProperties(d,_excluded),p=useRef(null),[q,r]=useFlag(n),s=useMutableRef(h),t=useForkRef([p,b]),u="number"==typeof(null===(c=a.style)||void 0===c?void 0:c.zIndex)?a.style.zIndex+1:void 0;return useEffect(()=>{r[n?"on":"off"]()},[n]),useEffect(()=>{var a;null===(a=s.current)||void 0===a?void 0:a.call(s,q)},[q,s]),1!==m.length||g?1===m.length&&i(m[0])&&g?React.createElement(ButtonWithTooltip,Object.assign({},o,{className:e,size:"xs",view:"clear",iconLeft:i(m[0]),onClick:getItemClick(m[0],k,l),tooltipProps:{content:j(m[0])},ref:b})):React.createElement(React.Fragment,null,React.createElement(Button,Object.assign({},o,{className:e,size:"xs",view:"clear",iconLeft:IconMeatball,ref:t,onClick:r.toggle})),React.createElement(ContextMenu,{isOpen:q,items:m,getItemLabel:j,onItemClick:(a,{e:b})=>getItemClick(a,k,l)(b),getItemKey:j,getItemLeftIcon:i,anchorRef:p,onClickOutside:r.off,possibleDirections:["downStartRight","upStartRight"],direction:"downStartRight",style:{width:280,zIndex:u}})):React.createElement(Button,Object.assign({},o,{className:e,size:"xs",view:"clear",iconLeft:i(m[0]),onClick:getItemClick(m[0],k,l),label:j(m[0]),ref:b}))};export const NotificationsActions=forwardRef(NotificationsActionsRender);
//# sourceMappingURL=NotificationsActions.js.map