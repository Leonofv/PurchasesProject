{"version":3,"file":"types.js","names":[],"sources":["../../../../../../src/components/Notifications/NotificationsActions/types.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\n\nimport { PropsWithHTMLAttributes } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport type ButtonMenuDefaultItem = {\n  label: string;\n  onClick?: React.EventHandler<React.MouseEvent>;\n  icon?: IconComponent;\n};\n\nexport type NotificationsActionsPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type NotificationsActionsPropGetItemIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type NotificationsActionsPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.EventHandler<React.MouseEvent> | undefined;\n\nexport type NotificationsActionsOnItemClick<ITEM> = (\n  item: ITEM,\n  props: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type NotificationsActionsProps<ITEM = ButtonMenuDefaultItem> =\n  PropsWithHTMLAttributes<\n    {\n      items?: ITEM[];\n      mainButtonOnlyIcon?: boolean;\n      opened?: boolean;\n      onOpen?: (value: boolean) => void;\n      onItemClick?: NotificationsActionsOnItemClick<ITEM>;\n    },\n    HTMLButtonElement\n  > & {\n    getItemLabel?: NotificationsActionsPropGetItemLabel<ITEM>;\n    getItemOnClick?: NotificationsActionsPropGetItemOnClick<ITEM>;\n    getItemIcon?: NotificationsActionsPropGetItemIcon<ITEM>;\n  } & (ITEM extends { label: ButtonMenuDefaultItem['label'] }\n      ? {}\n      : { getItemLabel: NotificationsActionsPropGetItemLabel<ITEM> });\n\nexport type NotificationsActionsComponent = <ITEM = ButtonMenuDefaultItem>(\n  props: NotificationsActionsProps<ITEM>,\n) => React.ReactElement | null;\n"],"mappings":""}