import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";const _excluded=["className","items","groupByDay","groups","groupLabelFormat","itemDateFormat","title","actions","getItemLabel","getActionIcon","getActionLabel","getActionOnClick","getGroupId","getGroupLabel","getItemActions","getItemBadges","getItemDate","getItemDescription","getItemGroup","getItemImage","getItemRead","getItemView","onClose"];import"./NotificationsList.css";import{IconClose}from"@consta/icons/IconClose";import{Button}from"@consta/uikit/Button";import{cnMixSpace}from"@consta/uikit/MixSpace";import{Text}from"@consta/uikit/Text";import React,{forwardRef,Fragment}from"react";import{cn}from"../../../utils/bem";import{NotificationsActions}from"../NotificationsActions";import{NotificationsItem}from"../NotificationsItem";import{defaultGroupLabelFormat,getGroups,withDefaultGetters}from"./helpers";export const cnNotificationsList=cn("NotificationsList");function NotificationsListRender(a,b){var c;const d=withDefaultGetters(a),{className:e,items:f,groupByDay:z=!1,groups:g,groupLabelFormat:A=defaultGroupLabelFormat,itemDateFormat:h,title:i,actions:j,getItemLabel:k,getActionIcon:l,getActionLabel:m,getActionOnClick:n,getGroupId:o,getGroupLabel:p,getItemActions:q,getItemBadges:r,getItemDate:s,getItemDescription:t,getItemGroup:u,getItemImage:v,getItemRead:w,getItemView:x,onClose:y}=d,B=_objectWithoutProperties(d,_excluded),C=getGroups(f,g,z,u,s,o),D="number"==typeof(null===(c=a.style)||void 0===c?void 0:c.zIndex)?a.style.zIndex+1:void 0;return React.createElement("div",Object.assign({},B,{ref:b,className:cnNotificationsList(null,[e])}),(i||j)&&React.createElement("div",{className:cnNotificationsList("Header",[cnMixSpace({pV:"l",pH:"xl"})])},React.createElement(Text,{className:cnNotificationsList("HeaderItem"),size:"xl",truncate:!0,view:"primary",lineHeight:"m"},i),(null===j||void 0===j?void 0:j.length)&&React.createElement(NotificationsActions,{className:cnNotificationsList("HeaderItem"),items:j,getItemIcon:l,getItemOnClick:n,getItemLabel:m,style:{zIndex:D}}),y&&React.createElement(Button,{className:cnNotificationsList("HeaderItem"),size:"s",view:"clear",iconLeft:IconClose,onClick:y})),React.createElement("div",{className:cnNotificationsList("List")},C.map((a,b)=>{const c=z?A(+a.key):a.group&&p(a.group);return React.createElement(Fragment,{key:cnNotificationsList("Group",{groupIndex:b})},c&&React.createElement(Text,{className:cnNotificationsList("GroupLabel",[cnMixSpace({pV:"2xs",pH:"xl"})]),key:cnNotificationsList("GroupLabel",{groupIndex:b}),view:"secondary",transform:"uppercase",weight:"bold",size:"2xs",lineHeight:"m"},c),a.items.map((a,c)=>React.createElement(NotificationsItem,{className:cnNotificationsList("Item",[cnMixSpace({pV:"l",pH:"xl"})]),key:cnNotificationsList("Item",{groupIndex:b,itemIndex:c}),title:k(a),description:t(a),imageUrl:v(a),read:w(a),date:s(a),dateFormat:h,badges:r(a),actions:q(a),view:x(a),style:{zIndex:D}})))})))}export const NotificationsList=forwardRef(NotificationsListRender);export*from"./types";
//# sourceMappingURL=NotificationsList.js.map