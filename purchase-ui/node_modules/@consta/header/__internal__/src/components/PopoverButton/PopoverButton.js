import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";const _excluded=["size","view","children","className","onClick","withCloseButton","popoverClassName","isMobile","title"];import"./PopoverButton.css";import{Button}from"@consta/uikit/Button";import{animateTimeout,cnMixPopoverAnimate}from"@consta/uikit/MixPopoverAnimate";import{cnMixPopoverArrow}from"@consta/uikit/MixPopoverArrow";import{Popover}from"@consta/uikit/Popover";import{useFlag}from"@consta/uikit/useFlag";import{useForkRef}from"@consta/uikit/useForkRef";import React,{forwardRef,useRef,useState}from"react";import{Transition}from"react-transition-group";import{Sidebar}from"../Sidebar";import{cn}from"../../utils/bem";const cnPopoverButton=cn("PopoverButton"),DEFAULT_POPOVER_ARROW_SIZE=6,DEFAULT_POPOVER_ARROW_OFFSET=10;export const PopoverButton=forwardRef((a,b)=>{var c;const{size:j="s",view:k="clear",children:d,className:e,onClick:f,withCloseButton:l=!0,popoverClassName:g,isMobile:h,title:i}=a,m=_objectWithoutProperties(a,_excluded),[n,o]=useFlag(),[p,q]=useState(void 0),r=useRef(null),s="number"==typeof(null===(c=a.style)||void 0===c?void 0:c.zIndex)?a.style.zIndex+1:void 0;return React.createElement(React.Fragment,null,React.createElement(Button,Object.assign({ref:useForkRef([b,r]),size:j,view:k,onClick:a=>{null===f||void 0===f?void 0:f(a),o.toggle()},className:cnPopoverButton(null,[e])},m)),h?React.createElement(Sidebar,{isOpen:n,onClickOutside:o.off,className:cnPopoverButton("Sidebar",[g]),onClose:l?o.off:void 0,title:i,style:{zIndex:s}},"function"==typeof d?null===d||void 0===d?void 0:d(o.off):d):React.createElement(Transition,{timeout:animateTimeout,unmountOnExit:!0,in:n},a=>React.createElement(Popover,{className:cnPopoverButton("Popover",[g,cnMixPopoverAnimate({animate:a,direction:p})]),anchorRef:r,arrowOffset:DEFAULT_POPOVER_ARROW_SIZE+DEFAULT_POPOVER_ARROW_OFFSET,offset:DEFAULT_POPOVER_ARROW_SIZE+4,onSetDirection:q,style:{"--popover-arrow-size":`${DEFAULT_POPOVER_ARROW_SIZE}px`,"--popover-arrow-offset":`${DEFAULT_POPOVER_ARROW_OFFSET}px`,zIndex:s},onClickOutside:o.off},React.createElement("div",{className:cnPopoverButton("Arrow",[cnMixPopoverArrow({direction:p})])}),"function"==typeof d?null===d||void 0===d?void 0:d(o.off):d)))});
//# sourceMappingURL=PopoverButton.js.map