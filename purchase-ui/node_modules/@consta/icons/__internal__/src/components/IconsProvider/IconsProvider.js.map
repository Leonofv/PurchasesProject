{"version":3,"file":"IconsProvider.js","names":["React","createContext","useMemo","useState","cn","IconsProviderList","defaultContextValue","addIcon","removeIcon","cnIcons","IconsContext","IconsProvider","children","container","window","document","body","icons","setIcons","value","name","size","svg","key","prev","count","copyIcons"],"sources":["../../../../../src/components/IconsProvider/IconsProvider.tsx"],"sourcesContent":["import './IconsProvider.css';\n\nimport React, { createContext, useMemo, useState } from 'react';\n\nimport { IconProps } from '##/icons/Icon';\nimport { cn } from '##/utils/bem';\n\nimport { IconsProviderList } from './IconsProviderList/IconsProviderList';\n\nexport type Icons = Record<\n  string,\n  { count: number; svg: React.ReactElement | null }\n>;\n\ntype IconsContextAddIcon = (\n  iconName: string,\n  size: IconProps['size'],\n  svg: React.ReactElement | null,\n) => void;\n\ntype IconsContextRemoveIcon = (\n  iconName: string,\n  size: IconProps['size'],\n) => void;\n\ntype IconsContextParams = {\n  addIcon: IconsContextAddIcon | undefined;\n  removeIcon: IconsContextRemoveIcon | undefined;\n};\n\nconst defaultContextValue: IconsContextParams = {\n  addIcon: undefined,\n  removeIcon: undefined,\n};\n\nexport const cnIcons = cn('Icons');\n\nexport const IconsContext =\n  createContext<IconsContextParams>(defaultContextValue);\n\nexport const IconsProvider: React.FC<{\n  children: React.ReactNode;\n  container?: Element;\n}> = ({ children, container = window.document.body }) => {\n  const [icons, setIcons] = useState<Icons>({});\n\n  const value = useMemo(() => {\n    const addIcon: IconsContextAddIcon = (name, size = 'm', svg) => {\n      const key = `${name}_${size}`;\n      setIcons((prev) => ({\n        ...prev,\n        [key]: {\n          count: typeof prev[key] === 'object' ? prev[key].count + 1 : 1,\n          svg,\n        },\n      }));\n    };\n\n    const removeIcon: IconsContextRemoveIcon = (name, size = 'm') => {\n      const key = `${name}_${size}`;\n      setIcons((prev) => {\n        const copyIcons = { ...prev };\n        if (copyIcons[key].count === 1) {\n          delete copyIcons[key];\n        } else {\n          copyIcons[key].count -= 1;\n        }\n        return copyIcons;\n      });\n    };\n\n    return { addIcon, removeIcon };\n  }, []);\n\n  return (\n    <>\n      <IconsContext.Provider value={value}>{children}</IconsContext.Provider>\n      <IconsProviderList icons={icons} container={container} />\n    </>\n  );\n};\n"],"mappings":"qqBAAA,4BAEA,MAAOA,MAAP,EAAgBC,aAAhB,CAA+BC,OAA/B,CAAwCC,QAAxC,KAAwD,OAAxD,CAGA,OAASC,EAAT,uBAEA,OAASC,iBAAT,6CAuBA,KAAMC,oBAAuC,CAAG,CAC9CC,OAAO,OADuC,CAE9CC,UAAU,OAFoC,CAAhD,CAKA,MAAO,MAAMC,QAAO,CAAGL,EAAE,CAAC,OAAD,CAAlB,CAEP,MAAO,MAAMM,aAAY,CACvBT,aAAa,CAAqBK,mBAArB,CADR,CAGP,MAAO,MAAMK,cAGX,CAAG,CAAC,CAAEC,QAAQ,CAARA,CAAF,CAAYC,SAAS,CAATA,CAAS,CAAGC,MAAM,CAACC,QAAP,CAAgBC,IAAxC,CAAD,GAAoD,MACjD,CAACC,CAAD,CAAQC,CAAR,EAAoBf,QAAQ,CAAQ,EAAR,CADqB,CAGjDgB,CAAK,CAAGjB,OAAO,CAAC,IAAM,CAyB1B,MAAO,CAAEK,OAAO,CAxBqB,CAACa,CAAD,CAAOC,CAAI,CAAG,GAAd,CAAmBC,CAAnB,GAA2B,CAC9D,KAAMC,EAAG,CAAI,GAAEH,CAAK,IAAGC,CAAK,EAA5B,CACAH,CAAQ,CAAEM,CAAD,iCACJA,CADI,MAEP,CAACD,CAAD,EAAO,CACLE,KAAK,CAAuB,QAArB,QAAOD,EAAI,CAACD,CAAD,CAAX,CAAgCC,CAAI,CAACD,CAAD,CAAJ,CAAUE,KAAV,CAAkB,CAAlD,CAAsD,CADxD,CAELH,GAAG,CAAHA,CAFK,CAFA,EAAD,CAOT,CAeM,CAAWd,UAAU,CAbe,CAACY,CAAD,CAAOC,CAAI,CAAG,GAAd,GAAsB,CAC/D,KAAME,EAAG,CAAI,GAAEH,CAAK,IAAGC,CAAK,EAA5B,CACAH,CAAQ,CAAEM,CAAD,EAAU,CACjB,KAAME,EAAS,kBAAQF,CAAR,CAAf,CAMA,MAL6B,EAAzB,GAAAE,CAAS,CAACH,CAAD,CAAT,CAAeE,KAKnB,CAJE,MAAOC,EAAS,CAACH,CAAD,CAIlB,CAFEG,CAAS,CAACH,CAAD,CAAT,CAAeE,KAAf,EAAwB,CAE1B,CAAOC,CACR,CARO,CAST,CAEM,CACR,CA1BoB,CA0BlB,EA1BkB,CAHkC,CA+BvD,MACE,yCACE,oBAAC,YAAD,CAAc,QAAd,EAAuB,KAAK,CAAEP,CAA9B,EAAsCP,CAAtC,CADF,CAEE,oBAAC,iBAAD,EAAmB,KAAK,CAAEK,CAA1B,CAAiC,SAAS,CAAEJ,CAA5C,EAFF,CAKH,CAxCM"}