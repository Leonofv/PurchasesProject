import { IconComponent } from '@consta/icons/Icon';
import React from 'react';
import { AsAttributes, AsTags } from "../../utils/types/AsTags";
import { PropsWithHTMLAttributesAndRef } from "../../utils/types/PropsWithHTMLAttributes";
import { BadgePropForm, BadgePropSize, BadgePropStatus, BadgePropView } from '../Badge/Badge';
export declare type BadgeGroupDefaultItem = {
    key: string | number;
    status?: BadgePropStatus;
    view?: BadgePropView;
    label?: string;
    iconLeft?: IconComponent;
    iconRight?: IconComponent;
    as?: AsTags;
    ref?: React.RefObject<HTMLElement>;
    attributes?: Omit<AsAttributes, 'children' | 'ref'>;
};
export declare type BadgeGroupPropGetItemKey<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['key'];
export declare type BadgeGroupPropGetItemStatus<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['status'];
export declare type BadgeGroupPropGetItemView<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['view'];
export declare type BadgeGroupPropGetItemLabel<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['label'];
export declare type BadgeGroupPropGetItemIconLeft<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['iconLeft'];
export declare type BadgeGroupPropGetItemIconRight<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['iconRight'];
export declare type BadgeGroupPropGetItemRef<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['ref'];
export declare type BadgeGroupPropGetItemAs<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['as'];
export declare type BadgeGroupPropGetItemAttributes<ITEM> = (item: ITEM) => BadgeGroupDefaultItem['attributes'];
export declare type BadgeGroupProps<ITEM = BadgeGroupDefaultItem> = PropsWithHTMLAttributesAndRef<{
    items: ITEM[];
    fitMode?: 'reduction' | 'wrap';
    getItemKey?: BadgeGroupPropGetItemKey<ITEM>;
    getItemLabel?: BadgeGroupPropGetItemLabel<ITEM>;
    getItemStatus?: BadgeGroupPropGetItemStatus<ITEM>;
    getItemView?: BadgeGroupPropGetItemView<ITEM>;
    getItemIconLeft?: BadgeGroupPropGetItemIconLeft<ITEM>;
    getItemIconRight?: BadgeGroupPropGetItemIconRight<ITEM>;
    getItemRef?: BadgeGroupPropGetItemRef<ITEM>;
    getItemAs?: BadgeGroupPropGetItemAs<ITEM>;
    getItemAttributes?: BadgeGroupPropGetItemAttributes<ITEM>;
    form?: BadgePropForm;
    size?: BadgePropSize;
    minified?: boolean;
    moreRef?: React.RefObject<HTMLDivElement>;
    moreAttributes?: Omit<React.HTMLAttributes<HTMLDivElement>, 'children'>;
}, HTMLDivElement> & (ITEM extends {
    key: string | number;
} ? {} : {
    getItemKey: BadgeGroupPropGetItemKey<ITEM>;
});
export declare type BadgeGroupComponent = <ITEM = BadgeGroupDefaultItem>(props: BadgeGroupProps<ITEM>) => React.ReactElement | null;
