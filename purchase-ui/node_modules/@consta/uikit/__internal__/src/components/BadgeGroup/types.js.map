{"version":3,"file":"types.js","names":[],"sources":["../../../../../src/components/BadgeGroup/types.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { AsAttributes, AsTags } from '##/utils/types/AsTags';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport {\n  BadgePropForm,\n  BadgePropSize,\n  BadgePropStatus,\n  BadgePropView,\n} from '../Badge/Badge';\n\nexport type BadgeGroupDefaultItem = {\n  key: string | number;\n  status?: BadgePropStatus;\n  view?: BadgePropView;\n  label?: string;\n  iconLeft?: IconComponent;\n  iconRight?: IconComponent;\n  as?: AsTags;\n  ref?: React.RefObject<HTMLElement>;\n  attributes?: Omit<AsAttributes, 'children' | 'ref'>;\n};\n\nexport type BadgeGroupPropGetItemKey<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['key'];\nexport type BadgeGroupPropGetItemStatus<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['status'];\nexport type BadgeGroupPropGetItemView<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['view'];\nexport type BadgeGroupPropGetItemLabel<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['label'];\nexport type BadgeGroupPropGetItemIconLeft<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['iconLeft'];\nexport type BadgeGroupPropGetItemIconRight<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['iconRight'];\nexport type BadgeGroupPropGetItemRef<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['ref'];\nexport type BadgeGroupPropGetItemAs<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['as'];\nexport type BadgeGroupPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => BadgeGroupDefaultItem['attributes'];\n\nexport type BadgeGroupProps<ITEM = BadgeGroupDefaultItem> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      items: ITEM[];\n      fitMode?: 'reduction' | 'wrap';\n      getItemKey?: BadgeGroupPropGetItemKey<ITEM>;\n      getItemLabel?: BadgeGroupPropGetItemLabel<ITEM>;\n      getItemStatus?: BadgeGroupPropGetItemStatus<ITEM>;\n      getItemView?: BadgeGroupPropGetItemView<ITEM>;\n      getItemIconLeft?: BadgeGroupPropGetItemIconLeft<ITEM>;\n      getItemIconRight?: BadgeGroupPropGetItemIconRight<ITEM>;\n      getItemRef?: BadgeGroupPropGetItemRef<ITEM>;\n      getItemAs?: BadgeGroupPropGetItemAs<ITEM>;\n      getItemAttributes?: BadgeGroupPropGetItemAttributes<ITEM>;\n      form?: BadgePropForm;\n      size?: BadgePropSize;\n      minified?: boolean;\n      moreRef?: React.RefObject<HTMLDivElement>;\n      moreAttributes?: Omit<React.HTMLAttributes<HTMLDivElement>, 'children'>;\n    },\n    HTMLDivElement\n  > &\n    (ITEM extends { key: string | number }\n      ? {}\n      : {\n          getItemKey: BadgeGroupPropGetItemKey<ITEM>;\n        });\n\nexport type BadgeGroupComponent = <ITEM = BadgeGroupDefaultItem>(\n  props: BadgeGroupProps<ITEM>,\n) => React.ReactElement | null;\n"],"mappings":""}