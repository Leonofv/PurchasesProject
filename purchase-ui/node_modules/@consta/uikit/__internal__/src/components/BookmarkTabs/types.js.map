{"version":3,"file":"types.js","names":["bookmarkTabsPropSize","bookmarkTabsPropSizeDefault","bookmarkTabsPropForm","bookmarkTabsPropFormDefault","bookmarkTabsPropView","bookmarkTabsPropViewDefault"],"sources":["../../../../../src/components/BookmarkTabs/types.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { AsAttributes, AsTags } from '##/utils/types/AsTags';\nimport { PropsWithAsAttributes } from '##/utils/types/PropsWithAsAttributes';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport const bookmarkTabsPropSize = ['m', 's'] as const;\nexport type BookmarkTabsPropSize = typeof bookmarkTabsPropSize[number];\nexport const bookmarkTabsPropSizeDefault: BookmarkTabsPropSize =\n  bookmarkTabsPropSize[0];\n\nexport const bookmarkTabsPropForm = ['brick', 'round'] as const;\nexport type BookmarkTabsPropForm = typeof bookmarkTabsPropForm[number];\nexport const bookmarkTabsPropFormDefault: BookmarkTabsPropForm =\n  bookmarkTabsPropForm[0];\n\nexport const bookmarkTabsPropView = ['ghost', 'clear'] as const;\nexport type BookmarkTabsPropView = typeof bookmarkTabsPropView[number];\nexport const bookmarkTabsPropViewDefault: BookmarkTabsPropView =\n  bookmarkTabsPropView[0];\n\nexport type BookmarkTabsItemDefault = {\n  key: string | number;\n  label?: string | number;\n  leftIcon?: IconComponent;\n  rightIcon?: IconComponent;\n  fixed?: boolean;\n  as?: AsTags;\n  ref?: React.RefObject<HTMLElement>;\n  attributes?: AsAttributes;\n};\n\nexport type BookmarkTabsPropGetItemKey<ITEM> = (item: ITEM) => string | number;\nexport type BookmarkTabsPropGetItemLabel<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\nexport type BookmarkTabsPropGetItemLeftIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type BookmarkTabsPropGetItemRightIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\nexport type BookmarkTabsPropGetItemFixed<ITEM> = (\n  item: ITEM,\n) => boolean | undefined;\nexport type BookmarkTabsPropGetItemAs<ITEM> = (\n  item: ITEM,\n) => AsTags | undefined;\nexport type BookmarkTabsPropGetItemRef<ITEM> = (\n  item: ITEM,\n) => React.RefObject<HTMLElement> | undefined;\nexport type BookmarkTabsPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => AsAttributes | undefined;\n\nexport type BookmarkTabsPropOnChange<ITEM> = (\n  value: ITEM,\n  params: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type BookmarkTabsRenderItemProps<ITEM> = {\n  item: ITEM;\n  hovered?: boolean;\n  onClick: React.MouseEventHandler;\n  active?: boolean;\n  onClose?: React.MouseEventHandler;\n  size: BookmarkTabsPropSize;\n  form: BookmarkTabsPropForm;\n  view: BookmarkTabsPropView;\n  bordered?: boolean;\n  tabWidth?: string;\n  tabRef?: React.RefObject<HTMLElement>;\n} & Omit<BookmarkTabsItemDefault, 'key' | 'ref'>;\n\nexport type BookmarkTabsPropRenderItem<ITEM> = (\n  props: BookmarkTabsRenderItemProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type BookmarkTabsPropOnRemove<ITEM> = (\n  item: ITEM,\n  params: { e: React.MouseEvent },\n) => void;\n\nexport type BookmarkTabsProps<ITEM = BookmarkTabsItemDefault> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      size?: BookmarkTabsPropSize;\n      form?: BookmarkTabsPropForm;\n      view?: BookmarkTabsPropView;\n      items: ITEM[];\n      value?: ITEM | null;\n      getItemKey?: BookmarkTabsPropGetItemKey<ITEM>;\n      getItemLabel?: BookmarkTabsPropGetItemLabel<ITEM>;\n      getItemLeftIcon?: BookmarkTabsPropGetItemLeftIcon<ITEM>;\n      getItemRightIcon?: BookmarkTabsPropGetItemRightIcon<ITEM>;\n      getItemFixed?: BookmarkTabsPropGetItemFixed<ITEM>;\n      getItemAs?: BookmarkTabsPropGetItemAs<ITEM>;\n      getItemRef?: BookmarkTabsPropGetItemRef<ITEM>;\n      getItemAttributes?: BookmarkTabsPropGetItemAttributes<ITEM>;\n      children?: never;\n      withNavigationButtons?: boolean;\n      onCreate?: React.MouseEventHandler;\n      onRemove?: BookmarkTabsPropOnRemove<ITEM>;\n      onChange?: BookmarkTabsPropOnChange<ITEM>;\n      renderItem?: BookmarkTabsPropRenderItem<ITEM>;\n    },\n    HTMLDivElement\n  > &\n    (ITEM extends { key: string | number }\n      ? {}\n      : {\n          getItemKey: BookmarkTabsPropGetItemKey<ITEM>;\n        });\n\nexport type BookmarkTabsComponent = <ITEM>(\n  props: BookmarkTabsProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type BookmarkTabsTabProps<AS extends AsTags = 'div'> =\n  PropsWithAsAttributes<\n    {\n      hovered?: boolean;\n      size: BookmarkTabsPropSize;\n      form: BookmarkTabsPropForm;\n      view: BookmarkTabsPropView;\n      active?: boolean;\n      tabWidth?: string;\n      bordered?: boolean;\n      tabRef?: React.RefObject<HTMLElement>;\n      fixed?: boolean;\n      onClose?: React.ReactEventHandler;\n    },\n    AS\n  > &\n    Omit<BookmarkTabsItemDefault, 'key' | 'attributes' | 'ref'>;\n\nexport type BookmarkTabsTabComponent = <AS extends AsTags = 'div'>(\n  props: BookmarkTabsTabProps<AS>,\n) => React.ReactElement | null;\n"],"mappings":"AAOA,MAAO,IAAMA,qBAAoB,CAAG,CAAC,GAAD,CAAM,GAAN,CAA7B,CAEP,MAAO,IAAMC,4BAAiD,CAC5DD,oBAAoB,CAAC,CAAD,CADf,CAGP,MAAO,IAAME,qBAAoB,CAAG,CAAC,OAAD,CAAU,OAAV,CAA7B,CAEP,MAAO,IAAMC,4BAAiD,CAC5DD,oBAAoB,CAAC,CAAD,CADf,CAGP,MAAO,IAAME,qBAAoB,CAAG,CAAC,OAAD,CAAU,OAAV,CAA7B,CAEP,MAAO,IAAMC,4BAAiD,CAC5DD,oBAAoB,CAAC,CAAD,CADf"}