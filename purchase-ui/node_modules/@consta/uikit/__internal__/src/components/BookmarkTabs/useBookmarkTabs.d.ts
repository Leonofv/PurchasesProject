/// <reference types="react" />
import { BookmarkTabsItemDefault, BookmarkTabsPropGetItemFixed, BookmarkTabsPropSize } from './types';
declare type UseBookmarkTabsProps<ITEM = BookmarkTabsItemDefault> = {
    items: ITEM[];
    getItemFixed: BookmarkTabsPropGetItemFixed<ITEM>;
    withNavigationButtons?: boolean;
    withAddButton?: boolean;
    size: BookmarkTabsPropSize;
};
export declare const useBookmarkTabs: <ITEM>(props: UseBookmarkTabsProps<ITEM>) => {
    refs: import("react").RefObject<HTMLDivElement>[];
    containerRef: import("react").RefObject<HTMLDivElement>;
    wrapperRef: import("react").RefObject<HTMLDivElement>;
    fixedTabsRef: import("react").RefObject<HTMLDivElement>;
    otherTabsRef: import("react").RefObject<HTMLDivElement>;
    showControls: boolean;
    fixedTabs: ITEM[];
    otherTabs: ITEM[];
    navigate: (type: 'next' | 'prev') => void;
    sizes: string[];
    controlsRef: import("react").RefObject<HTMLDivElement>;
    addButtonRef: import("react").RefObject<HTMLDivElement>;
};
export {};
