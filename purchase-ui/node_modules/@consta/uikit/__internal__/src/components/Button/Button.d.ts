import './Button.css';
import { IconComponent, IconPropSize } from '@consta/icons/Icon';
import React, { HTMLProps } from 'react';
export declare const buttonPropSize: readonly ["m", "xs", "s", "l"];
export declare type ButtonPropSize = typeof buttonPropSize[number];
export declare const buttonPropSizeDefault: ButtonPropSize;
export declare const buttonPropView: readonly ["primary", "clear", "ghost", "secondary"];
export declare type ButtonPropView = typeof buttonPropView[number];
export declare const buttonPropViewDefault: ButtonPropView;
export declare const buttonPropWidth: readonly ["default", "full"];
export declare type ButtonPropWidth = typeof buttonPropWidth[number];
export declare const buttonPropWidthDefault: ButtonPropWidth;
export declare const buttonPropForm: readonly ["default", "brick", "round", "brickRound", "roundBrick", "brickDefault", "defaultBrick"];
export declare type ButtonPropForm = typeof buttonPropForm[number];
export declare const buttonPropFormDefault: "default";
export declare type Props = {
    size?: ButtonPropSize;
    view?: ButtonPropView;
    width?: ButtonPropWidth;
    form?: ButtonPropForm;
    tabIndex?: number;
    disabled?: boolean;
    loading?: boolean;
    label?: string | number;
    onClick?: React.EventHandler<React.MouseEvent>;
    iconLeft?: IconComponent;
    iconRight?: IconComponent;
    onlyIcon?: boolean;
    iconSize?: IconPropSize;
    title?: string;
    children?: never;
    type?: 'button' | 'reset' | 'submit';
    formId?: HTMLProps<HTMLButtonElement>['form'];
};
export declare const COMPONENT_NAME: "Button";
export declare const cnButton: import("@bem-react/classname").ClassNameFormatter;
export declare const Button: import("../../utils/types/PropsWithAsAttributes").ComponentWithAs<Props, "button">;
