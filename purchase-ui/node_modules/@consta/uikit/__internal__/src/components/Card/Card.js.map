{"version":3,"file":"Card.js","names":["React","useRef","useForkRef","cnMixCard","cn","forwardRefWithAs","usePropsHandler","cardPropForm","cardPropFormDefault","cardPropSpace","cardPropStatus","COMPONENT_NAME","cnCard","Card","props","ref","cardRef","verticalSpace","horizontalSpace","status","form","shadow","children","tabIndex","border","className","as","otherProps"],"sources":["../../../../../src/components/Card/Card.tsx"],"sourcesContent":["import React, { useRef } from 'react';\n\nimport { useForkRef } from '../../hooks/useForkRef/useForkRef';\nimport { cnMixCard } from '../../mixs/MixCard/MixCard';\nimport { cn } from '../../utils/bem';\nimport { forwardRefWithAs } from '../../utils/types/PropsWithAsAttributes';\nimport { usePropsHandler } from '../EventInterceptor/usePropsHandler';\n\nexport const cardPropForm = ['round', 'square'] as const;\nexport type CardPropForm = typeof cardPropForm[number];\nexport const cardPropFormDefault: CardPropForm = cardPropForm[0];\n\nexport const cardPropSpace = [\n  'm',\n  'xs',\n  's',\n  'l',\n  'xl',\n  '2xl',\n  '3xl',\n  '4xl',\n  '5xl',\n] as const;\nexport type CardPropSpace = typeof cardPropSpace[number];\n\nexport const cardPropStatus = ['alert', 'success', 'warning'] as const;\nexport type CardPropStatus = typeof cardPropStatus[number] | string;\n\nexport type Props = {\n  verticalSpace?: CardPropSpace;\n  horizontalSpace?: CardPropSpace;\n  status?: CardPropStatus;\n  border?: boolean;\n  form?: CardPropForm;\n  shadow?: boolean;\n  children?: React.ReactNode;\n};\n\nexport const COMPONENT_NAME = 'Card' as const;\n\nexport const cnCard = cn('Card');\n\nexport const Card = forwardRefWithAs<Props>((props, ref) => {\n  const cardRef = useRef<HTMLDivElement>(null);\n\n  const {\n    verticalSpace,\n    horizontalSpace,\n    status,\n    form = cardPropFormDefault,\n    shadow = true,\n    children,\n    tabIndex,\n    border,\n    className,\n    as = 'div',\n    ...otherProps\n  } = usePropsHandler(COMPONENT_NAME, props, cardRef);\n\n  const Tag = as as string;\n\n  return (\n    <Tag\n      tabIndex={tabIndex}\n      ref={useForkRef([cardRef, ref])}\n      className={cnCard(null, [\n        cnMixCard({\n          verticalSpace,\n          horizontalSpace,\n          shadow,\n          form,\n          status,\n          border,\n        }),\n        className,\n      ])}\n      {...otherProps}\n    >\n      {children}\n    </Tag>\n  );\n});\n"],"mappings":"gNAAA,MAAOA,MAAP,EAAgBC,MAAhB,KAA8B,OAA9B,CAEA,OAASC,UAAT,yCACA,OAASC,SAAT,kCACA,OAASC,EAAT,uBACA,OAASC,gBAAT,+CACA,OAASC,eAAT,2CAEA,MAAO,IAAMC,aAAY,CAAG,CAAC,OAAD,CAAU,QAAV,CAArB,CAEP,MAAO,IAAMC,oBAAiC,CAAGD,YAAY,CAAC,CAAD,CAAtD,CAEP,MAAO,IAAME,cAAa,CAAG,CAC3B,GAD2B,CAE3B,IAF2B,CAG3B,GAH2B,CAI3B,GAJ2B,CAK3B,IAL2B,CAM3B,KAN2B,CAO3B,KAP2B,CAQ3B,KAR2B,CAS3B,KAT2B,CAAtB,CAaP,MAAO,IAAMC,eAAc,CAAG,CAAC,OAAD,CAAU,SAAV,CAAqB,SAArB,CAAvB,CAaP,MAAO,IAAMC,eAAc,CAAG,MAAvB,CAEP,MAAO,IAAMC,OAAM,CAAGR,EAAE,CAAC,MAAD,CAAjB,CAEP,MAAO,IAAMS,KAAI,CAAGR,gBAAgB,CAAQ,SAACS,CAAD,CAAQC,CAAR,CAAgB,IACpDC,EAAO,CAAGf,MAAM,CAAiB,IAAjB,CADoC,GAetDK,eAAe,CAACK,cAAD,CAAiBG,CAAjB,CAAwBE,CAAxB,CAfuC,CAIxDC,CAJwD,GAIxDA,aAJwD,CAKxDC,CALwD,GAKxDA,eALwD,CAMxDC,CANwD,GAMxDA,MANwD,KAOxDC,IAPwD,CAOxDA,CAPwD,YAOjDZ,mBAPiD,OAQxDa,MARwD,CASxDC,CATwD,GASxDA,QATwD,CAUxDC,CAVwD,GAUxDA,QAVwD,CAWxDC,CAXwD,GAWxDA,MAXwD,CAYxDC,CAZwD,GAYxDA,SAZwD,KAaxDC,EAbwD,CAaxDA,CAbwD,YAanD,KAbmD,GAcrDC,CAdqD,uCAmB1D,MACE,qBAHUD,CAGV,gBACE,QAAQ,CAAEH,CADZ,CAEE,GAAG,CAAErB,UAAU,CAAC,CAACc,CAAD,CAAUD,CAAV,CAAD,CAFjB,CAGE,SAAS,CAAEH,MAAM,CAAC,IAAD,CAAO,CACtBT,SAAS,CAAC,CACRc,aAAa,CAAbA,CADQ,CAERC,eAAe,CAAfA,CAFQ,CAGRG,MAAM,iBAHE,CAIRD,IAAI,CAAJA,CAJQ,CAKRD,MAAM,CAANA,CALQ,CAMRK,MAAM,CAANA,CANQ,CAAD,CADa,CAStBC,CATsB,CAAP,CAHnB,EAcME,CAdN,EAgBGL,CAhBH,CAmBH,CAvCmC,CAA7B"}