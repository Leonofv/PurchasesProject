import './Checkbox.css';
import React from 'react';
import { PropsWithHTMLAttributes } from '../../utils/types/PropsWithHTMLAttributes';
export declare const checkboxPropSize: readonly ["m", "xs", "s", "l"];
export declare type CheckboxPropSize = typeof checkboxPropSize[number];
export declare const checkboxPropSizeDefault: CheckboxPropSize;
export declare const checkboxPropView: readonly ["primary", "ghost"];
export declare type CheckboxPropView = typeof checkboxPropView[number];
export declare const checkboxPropViewDefault: CheckboxPropView;
export declare const checkboxPropAlign: readonly ["center", "top"];
export declare type CheckboxPropAlign = typeof checkboxPropAlign[number];
export declare const checkboxPropAlignDefault: CheckboxPropAlign;
export declare type CheckboxPropOnChange = (checked: boolean, params: {
    e: React.ChangeEvent<HTMLInputElement>;
}) => void;
declare type Props = {
    checked: boolean | undefined;
    size?: CheckboxPropSize;
    view?: CheckboxPropView;
    align?: CheckboxPropAlign;
    disabled?: boolean;
    intermediate?: boolean;
    label?: string;
    onChange?: CheckboxPropOnChange;
    name?: string;
    onFocus?: React.FocusEventHandler<HTMLInputElement>;
    onBlur?: React.FocusEventHandler<HTMLInputElement>;
    autoFocus?: boolean;
    readOnly?: boolean;
    required?: boolean;
    step?: number | string;
    tabIndex?: number;
    inputRef?: React.Ref<HTMLInputElement>;
    children?: never;
    for?: string;
    inputId?: string;
};
export declare type CheckboxProps = PropsWithHTMLAttributes<Props, HTMLLabelElement>;
export declare const COMPONENT_NAME: "Checkbox";
export declare const cnCheckbox: import("@bem-react/classname").ClassNameFormatter;
export declare const Checkbox: React.ForwardRefExoticComponent<Props & Omit<React.HTMLAttributes<HTMLLabelElement>, "css" | keyof Props> & React.RefAttributes<HTMLLabelElement>>;
export {};
