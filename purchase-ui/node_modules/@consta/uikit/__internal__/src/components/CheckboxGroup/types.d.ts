import React from 'react';
import { PropsWithHTMLAttributesAndRef } from "../../utils/types/PropsWithHTMLAttributes";
declare type CheckboxGroupPropAttributes = Omit<JSX.IntrinsicElements['label'], 'ref' | 'onChange' | 'onFocus' | 'children' | 'onBlur'>;
export declare type CheckboxGroupDefaultItem = {
    key?: string | number;
    label: string;
    disabled?: boolean;
    attributes?: CheckboxGroupPropAttributes;
    ref?: React.RefObject<HTMLLabelElement>;
};
export declare const checkboxGroupPropDirections: readonly ["column", "row"];
export declare type CheckboxGroupPropDirection = typeof checkboxGroupPropDirections[number];
export declare const checkboxGroupDefaultDirection: CheckboxGroupPropDirection;
export declare const checkboxGroupPropSizes: readonly ["m", "xs", "s", "l"];
export declare type CheckboxGroupPropSize = typeof checkboxGroupPropSizes[number];
export declare const checkboxGroupDefaultSize: CheckboxGroupPropSize;
export declare const checkboxGroupPropViews: readonly ["primary", "ghost"];
export declare type CheckboxGroupPropView = typeof checkboxGroupPropViews[number];
export declare const checkboxGroupDefaultView: CheckboxGroupPropView;
export declare const checkboxGroupPropAlign: readonly ["center", "top"];
export declare type CheckboxGroupPropAlign = typeof checkboxGroupPropAlign[number];
export declare const checkboxGroupDefaultAlign: CheckboxGroupPropAlign;
export declare type CheckboxGroupPropGetItemKey<ITEM> = (item: ITEM) => string | number | undefined;
export declare type CheckboxGroupPropGetItemLabel<ITEM> = (item: ITEM) => string;
export declare type CheckboxGroupPropGetItemDisabled<ITEM> = (item: ITEM) => boolean | undefined;
export declare type CheckboxGroupPropGetItemAttributes<ITEM> = (item: ITEM) => CheckboxGroupPropAttributes | undefined;
export declare type CheckboxGroupPropGetItemRef<ITEM> = (item: ITEM) => React.RefObject<HTMLLabelElement> | undefined;
export declare type CheckboxGroupPropOnChange<ITEM> = (value: ITEM[] | null, props: {
    e: React.ChangeEvent<HTMLInputElement>;
}) => void;
export declare type CheckboxGroupProps<ITEM = CheckboxGroupDefaultItem> = PropsWithHTMLAttributesAndRef<{
    value?: ITEM[] | null;
    items: ITEM[];
    getItemKey?: CheckboxGroupPropGetItemKey<ITEM>;
    getItemLabel?: CheckboxGroupPropGetItemLabel<ITEM>;
    getItemDisabled?: CheckboxGroupPropGetItemDisabled<ITEM>;
    getItemAttributes?: CheckboxGroupPropGetItemAttributes<ITEM>;
    getItemRef?: CheckboxGroupPropGetItemRef<ITEM>;
    onChange?: CheckboxGroupPropOnChange<ITEM>;
    name?: string;
    direction?: CheckboxGroupPropDirection;
    align?: CheckboxGroupPropAlign;
    size?: CheckboxGroupPropSize;
    view?: CheckboxGroupPropView;
    disabled?: boolean;
    className?: string;
}, HTMLDivElement> & (ITEM extends {
    label: CheckboxGroupDefaultItem['label'];
} ? {} : {
    getItemLabel: CheckboxGroupPropGetItemLabel<ITEM>;
});
export declare type CheckboxGroupComponent = <ITEM = CheckboxGroupDefaultItem>(props: CheckboxGroupProps<ITEM>) => React.ReactElement | null;
export {};
