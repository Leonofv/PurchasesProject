{"version":3,"file":"types.js","names":[],"sources":["../../../../../../src/components/Chips/ChipsChoice/types.ts"],"sourcesContent":["import {\n  ChipsItemProps,\n  ChipsPropActiveView,\n  ChipsPropGetItemIconLeft,\n  ChipsPropGetItemLabel,\n  ChipsPropGetItemRef,\n  ChipsPropGetItemStatus,\n  ChipsPropSize,\n} from '##/components/Chips';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport type ChipsChoiceDefaultItem = Omit<\n  ChipsItemProps,\n  | 'size'\n  | 'activeView'\n  | 'interactive'\n  | 'onRightIconClick'\n  | 'iconRight'\n  | 'as'\n> & {\n  key: string;\n};\n\nexport type ChipsChoicePropGetItemKey<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\n\nexport type ChipsChoicePropOnChange<ITEM, MULTIPLE extends boolean> = (\n  value: MULTIPLE extends true ? ITEM[] | null : ITEM,\n  props: {\n    e: React.MouseEvent;\n  },\n) => void;\n\nexport type ChipsChoicePropValue<ITEM, MULTIPLE extends boolean> =\n  | (MULTIPLE extends true ? ITEM[] : ITEM)\n  | null;\n\nexport type ChipsChoiceProps<\n  ITEM = ChipsChoiceDefaultItem,\n  MULTIPLE extends boolean = false,\n> = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ChipsPropSize;\n    activeView?: ChipsPropActiveView;\n    items: ITEM[];\n    getItemStatus?: ChipsPropGetItemStatus<ITEM>;\n    getItemLabel?: ChipsPropGetItemLabel<ITEM>;\n    getItemIconLeft?: ChipsPropGetItemIconLeft<ITEM>;\n    getItemRef?: ChipsPropGetItemRef<ITEM>;\n    onChange: ChipsChoicePropOnChange<ITEM, MULTIPLE>;\n    multiple?: MULTIPLE;\n    value?: ChipsChoicePropValue<ITEM, MULTIPLE>;\n    getItemKey?: ChipsChoicePropGetItemKey<ITEM>;\n    disabled?: boolean;\n  },\n  HTMLDivElement\n> &\n  (ITEM extends { label: string }\n    ? {}\n    : {\n        getItemLabel?: ChipsPropGetItemLabel<ITEM>;\n      });\n\nexport type ChipsChoiceComponent = <\n  ITEM = ChipsChoiceDefaultItem,\n  MULTIPLE extends boolean = false,\n>(\n  props: ChipsChoiceProps<ITEM, MULTIPLE>,\n) => React.ReactElement | null;\n"],"mappings":""}