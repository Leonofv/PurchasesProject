/// <reference types="react" />
import { ChipsDefaultItem, ChipsPropGetItemActive, ChipsPropGetItemAs, ChipsPropGetItemAttributes, ChipsPropGetItemDisabled, ChipsPropGetItemIconLeft, ChipsPropGetItemIconRight, ChipsPropGetItemLabel, ChipsPropGetItemRef, ChipsPropGetItemStatus, ChipsProps } from './types';
export declare const defaultGetItemIconRight: ChipsPropGetItemIconRight<ChipsDefaultItem>;
export declare const defaultGetItemActive: ChipsPropGetItemActive<ChipsDefaultItem>;
export declare const defaultGetItemDisabled: ChipsPropGetItemDisabled<ChipsDefaultItem>;
export declare const defaultGetItemIconLeft: ChipsPropGetItemIconLeft<ChipsDefaultItem>;
export declare const defaultGetItemStatus: ChipsPropGetItemStatus<ChipsDefaultItem>;
export declare const defaultGetItemLabel: ChipsPropGetItemLabel<ChipsDefaultItem>;
export declare const defaultGetItemAs: ChipsPropGetItemAs<ChipsDefaultItem>;
export declare const defaultGetItemAttributes: ChipsPropGetItemAttributes<ChipsDefaultItem>;
export declare const defaultGetItemRef: ChipsPropGetItemRef<ChipsDefaultItem>;
export declare function withDefaultGetters<ITEM>(props: ChipsProps<ITEM>): {
    size?: "s" | "m" | "xs" | "l" | undefined;
    activeView?: "primary" | "secondary" | undefined;
    items: ITEM[];
    interactive?: boolean | undefined;
    disabled?: boolean | undefined;
    getItemStatus?: ChipsPropGetItemStatus<ITEM> | undefined;
    getItemLabel?: ChipsPropGetItemLabel<ITEM> | undefined;
    getItemIconLeft?: ChipsPropGetItemIconLeft<ITEM> | undefined;
    getItemIconRight?: ChipsPropGetItemIconRight<ITEM> | undefined;
    getItemRef?: ChipsPropGetItemRef<ITEM> | undefined;
    getItemAs?: ChipsPropGetItemAs<ITEM> | undefined;
    getItemAttributes?: ChipsPropGetItemAttributes<ITEM> | undefined;
    getItemActive?: ChipsPropGetItemActive<ITEM> | undefined;
    getItemDisabled?: ChipsPropGetItemDisabled<ITEM> | undefined;
    onItemClick?: import("./types").ChipsPropOnItemClick<ITEM> | undefined;
    onItemRightIconClick?: import("./types").ChipsPropItemOnRightIconClick<ITEM> | undefined;
} & Omit<import("react").HTMLAttributes<HTMLDivElement>, "disabled" | "size" | "css" | "items" | "getItemLabel" | "getItemDisabled" | "getItemStatus" | "onItemClick" | "getItemActive" | "getItemAs" | "getItemAttributes" | "getItemRef" | "interactive" | "getItemIconLeft" | "getItemIconRight" | "activeView" | "onItemRightIconClick"> & import("react").RefAttributes<HTMLDivElement> & (ITEM extends {
    label: string;
} ? {} : {
    getItemLabel: ChipsPropGetItemLabel<ITEM>;
}) & {
    getItemLabel: ChipsPropGetItemLabel<ChipsDefaultItem> | ChipsPropGetItemLabel<ITEM>;
    getItemIconRight: ChipsPropGetItemIconRight<ChipsDefaultItem> | ChipsPropGetItemIconRight<ITEM>;
    getItemIconLeft: ChipsPropGetItemIconLeft<ChipsDefaultItem> | ChipsPropGetItemIconLeft<ITEM>;
    getItemStatus: ChipsPropGetItemStatus<ChipsDefaultItem> | ChipsPropGetItemStatus<ITEM>;
    getItemRef: ChipsPropGetItemRef<ChipsDefaultItem> | ChipsPropGetItemRef<ITEM>;
    getItemAs: ChipsPropGetItemAs<ChipsDefaultItem> | ChipsPropGetItemAs<ITEM>;
    getItemAttributes: ChipsPropGetItemAttributes<ChipsDefaultItem> | ChipsPropGetItemAttributes<ITEM>;
    getItemActive: ChipsPropGetItemActive<ChipsDefaultItem> | ChipsPropGetItemActive<ITEM>;
    getItemDisabled: ChipsPropGetItemDisabled<ChipsDefaultItem> | ChipsPropGetItemDisabled<ITEM>;
};
