{"version":3,"file":"helpers.js","names":["defaultGetItemKey","item","id","defaultGetItemLabel","label","defaultGetItemGroupKey","groupId","defaultGetItemDisabled","disabled","defaultGetGroupKey","group","defaultGetGroupLabel","isMultipleParams","params","multiple","isNotMultipleParams","withDefaultGetters","props","getItemLabel","getItemKey","getItemGroupKey","getItemDisabled","getGroupLabel","getGroupKey","clearSizeMap","xs","s","m","l","iconSizeMap"],"sources":["../../../../../src/components/ComboboxDeprecated/helpers.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';\nimport {\n  PropForm,\n  PropSize,\n  PropStatus,\n  PropView,\n  RenderItemProps,\n} from '../SelectComponentsDeprecated/types';\nimport { TextFieldPropOnChange } from '../TextField';\n\nexport type DefaultItem = {\n  label: string;\n  id: string | number;\n  groupId?: string | number;\n  disabled?: boolean;\n};\n\nexport type DefaultGroup = {\n  label: string;\n  id: string | number;\n};\n\ntype RenderValueProps<ITEM> = {\n  item: ITEM;\n  handleRemove?: (e: React.SyntheticEvent) => void;\n};\n\nexport type PropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type PropGetItemKey<ITEM> = (item: ITEM) => string | number;\nexport type PropGetItemGroupKey<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\nexport type PropGetItemDisabled<ITEM> = (item: ITEM) => boolean | undefined;\nexport type PropGetGroupKey<GROUP> = (group: GROUP) => string | number;\nexport type PropGetGroupLabel<GROUP> = (group: GROUP) => string;\ntype PropSearchFunction<ITEM> = (item: ITEM, searchValue: string) => boolean;\ntype PropOnChange<ITEM, MULTIPLE extends boolean> = (props: {\n  value: (MULTIPLE extends true ? ITEM[] : ITEM) | null;\n  e: React.SyntheticEvent;\n}) => void;\ntype PropValue<ITEM, MULTIPLE extends boolean> =\n  | (MULTIPLE extends true ? ITEM[] : ITEM)\n  | null\n  | undefined;\n\nexport type PropRenderItem<ITEM> = (\n  props: RenderItemProps<ITEM>,\n) => React.ReactElement | null;\nexport type PropRenderValue<ITEM> = (\n  props: RenderValueProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type ComboboxProps<\n  ITEM = DefaultItem,\n  GROUP = DefaultGroup,\n  MULTIPLE extends boolean = false,\n> = PropsWithHTMLAttributesAndRef<\n  {\n    items: ITEM[];\n    onChange: PropOnChange<ITEM, MULTIPLE>;\n    disabled?: boolean;\n    form?: PropForm;\n    dropdownForm?: 'default' | 'brick' | 'round';\n    size?: PropSize;\n    view?: PropView;\n    placeholder?: string;\n    ariaLabel?: string;\n    status?: PropStatus;\n    isLoading?: boolean;\n    dropdownClassName?: string;\n    dropdownRef?: React.Ref<HTMLDivElement>;\n    name?: string;\n    renderItem?: PropRenderItem<ITEM>;\n    renderValue?: PropRenderValue<ITEM>;\n    onFocus?: React.FocusEventHandler<HTMLInputElement>;\n    onBlur?: React.FocusEventHandler<HTMLInputElement>;\n    onCreate?: (props: { e: React.SyntheticEvent; label: string }) => void;\n    inputRef?: React.Ref<HTMLInputElement>;\n    labelForNotFound?: string;\n    required?: boolean;\n    labelForCreate?: string;\n    labelForEmptyItems?: string;\n    searchFunction?: PropSearchFunction<ITEM>;\n    searchValue?: string;\n    multiple?: MULTIPLE;\n    value?: PropValue<ITEM, MULTIPLE>;\n    groups?: GROUP[];\n    onInputChange?: TextFieldPropOnChange;\n    getItemLabel?: PropGetItemLabel<ITEM>;\n    getItemKey?: PropGetItemKey<ITEM>;\n    getItemGroupKey?: PropGetItemGroupKey<ITEM>;\n    getItemDisabled?: PropGetItemDisabled<ITEM>;\n    getGroupLabel?: PropGetGroupLabel<GROUP>;\n    getGroupKey?: PropGetGroupKey<GROUP>;\n    label?: string;\n    labelIcon?: IconComponent;\n    caption?: string;\n    labelPosition?: 'top' | 'left';\n  },\n  HTMLDivElement\n> &\n  (MULTIPLE extends true\n    ? {\n        selectAll?: boolean;\n      }\n    : {\n        selectAll?: never;\n      }) &\n  (ITEM extends { label: DefaultItem['label'] }\n    ? {}\n    : { getItemLabel: PropGetItemLabel<ITEM> }) &\n  (ITEM extends { id: DefaultItem['id'] }\n    ? {}\n    : { getItemKey: PropGetItemKey<ITEM> }) &\n  (GROUP extends { label: DefaultGroup['label'] }\n    ? {}\n    : { getGroupLabel: PropGetGroupLabel<GROUP> }) &\n  (GROUP extends { id: DefaultGroup['id'] }\n    ? {}\n    : { getGroupKey: PropGetGroupKey<GROUP> });\n\nexport type ComboboxComponent = <\n  ITEM = DefaultItem,\n  GROUP = DefaultGroup,\n  MULTIPLE extends boolean = false,\n>(\n  props: ComboboxProps<ITEM, GROUP, MULTIPLE>,\n) => React.ReactElement | null;\n\nexport const defaultGetItemKey: PropGetItemKey<DefaultItem> = (item) => item.id;\nexport const defaultGetItemLabel: PropGetItemLabel<DefaultItem> = (item) =>\n  item.label;\nexport const defaultGetItemGroupKey: PropGetItemGroupKey<DefaultItem> = (\n  item,\n) => item.groupId;\nexport const defaultGetItemDisabled: PropGetItemDisabled<DefaultItem> = (\n  item,\n) => item.disabled;\n\nexport const defaultGetGroupKey: PropGetGroupKey<DefaultGroup> = (group) =>\n  group.id;\nexport const defaultGetGroupLabel: PropGetGroupLabel<DefaultGroup> = (group) =>\n  group.label;\n\nexport const isMultipleParams = <ITEM, GROUP>(\n  params: ComboboxProps<ITEM, GROUP, boolean>,\n): params is ComboboxProps<ITEM, GROUP, true> => {\n  return !!params.multiple;\n};\n\nexport const isNotMultipleParams = <ITEM, GROUP>(\n  params: ComboboxProps<ITEM, GROUP, boolean>,\n): params is ComboboxProps<ITEM, GROUP, false> => {\n  return !params.multiple;\n};\n\nexport function withDefaultGetters<\n  ITEM = DefaultItem,\n  GROUP = DefaultGroup,\n  MULTIPLE extends boolean = false,\n>(props: ComboboxProps<ITEM, GROUP, MULTIPLE>) {\n  return {\n    ...props,\n    getItemLabel: props.getItemLabel || defaultGetItemLabel,\n    getItemKey: props.getItemKey || defaultGetItemKey,\n    getItemGroupKey: props.getItemGroupKey || defaultGetItemGroupKey,\n    getItemDisabled: props.getItemDisabled || defaultGetItemDisabled,\n    getGroupLabel: props.getGroupLabel || defaultGetGroupLabel,\n    getGroupKey: props.getGroupKey || defaultGetGroupKey,\n  };\n}\n\nexport const clearSizeMap: Record<PropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 's',\n  l: 'm',\n};\n\nexport const iconSizeMap: Record<PropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'm',\n};\n"],"mappings":"qqBAoIA,MAAO,IAAMA,kBAA8C,CAAG,SAACC,CAAD,QAAUA,EAAI,CAACC,EAAf,CAAvD,CACP,MAAO,IAAMC,oBAAkD,CAAG,SAACF,CAAD,QAChEA,EAAI,CAACG,KAD2D,CAA3D,CAEP,MAAO,IAAMC,uBAAwD,CAAG,SACtEJ,CADsE,QAEnEA,EAAI,CAACK,OAF8D,CAAjE,CAGP,MAAO,IAAMC,uBAAwD,CAAG,SACtEN,CADsE,QAEnEA,EAAI,CAACO,QAF8D,CAAjE,CAIP,MAAO,IAAMC,mBAAiD,CAAG,SAACC,CAAD,QAC/DA,EAAK,CAACR,EADyD,CAA1D,CAEP,MAAO,IAAMS,qBAAqD,CAAG,SAACD,CAAD,QACnEA,EAAK,CAACN,KAD6D,CAA9D,CAGP,MAAO,IAAMQ,iBAAgB,CAAG,SAC9BC,CAD8B,CAEiB,CAC/C,MAAO,CAAC,CAACA,CAAM,CAACC,QACjB,CAJM,CAMP,MAAO,IAAMC,oBAAmB,CAAG,SACjCF,CADiC,CAEe,CAChD,MAAO,CAACA,CAAM,CAACC,QAChB,CAJM,CAMP,MAAO,SAASE,mBAAT,CAILC,CAJK,CAIwC,CAC7C,sCACKA,CADL,MAEEC,YAAY,CAAED,CAAK,CAACC,YAAN,EAAsBf,mBAFtC,CAGEgB,UAAU,CAAEF,CAAK,CAACE,UAAN,EAAoBnB,iBAHlC,CAIEoB,eAAe,CAAEH,CAAK,CAACG,eAAN,EAAyBf,sBAJ5C,CAKEgB,eAAe,CAAEJ,CAAK,CAACI,eAAN,EAAyBd,sBAL5C,CAMEe,aAAa,CAAEL,CAAK,CAACK,aAAN,EAAuBX,oBANxC,CAOEY,WAAW,CAAEN,CAAK,CAACM,WAAN,EAAqBd,kBAPpC,EASD,CAED,MAAO,IAAMe,aAA4C,CAAG,CAC1DC,EAAE,CAAE,IADsD,CAE1DC,CAAC,CAAE,GAFuD,CAG1DC,CAAC,CAAE,GAHuD,CAI1DC,CAAC,CAAE,GAJuD,CAArD,CAOP,MAAO,IAAMC,YAA2C,CAAG,CACzDJ,EAAE,CAAE,IADqD,CAEzDC,CAAC,CAAE,GAFsD,CAGzDC,CAAC,CAAE,GAHsD,CAIzDC,CAAC,CAAE,GAJsD,CAApD"}