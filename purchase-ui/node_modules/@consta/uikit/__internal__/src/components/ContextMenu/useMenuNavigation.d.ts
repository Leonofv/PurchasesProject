import React from 'react';
import { ContextMenuItemDefault, ContextMenuPropGetItemSubMenu } from './types';
declare type UseMenuNavigationProps<ITEM = ContextMenuItemDefault> = {
    items: ITEM[];
    deleteLevel: () => void;
    getItemSubMenu: ContextMenuPropGetItemSubMenu<ITEM>;
    active: boolean;
    addLevel: (item: ITEM) => void;
    onEsc?: React.KeyboardEventHandler;
    level?: number;
    isMobile?: boolean;
};
export declare const useMenuNavigation: (props: UseMenuNavigationProps) => {
    refs: React.RefObject<HTMLDivElement>[];
    activeIndex: number;
    onKeyDown: (e: React.KeyboardEvent) => void;
    setActiveIndex: React.Dispatch<React.SetStateAction<number>>;
    setDirection: React.Dispatch<React.SetStateAction<"downCenter" | "upCenter" | "downRight" | "downLeft" | "upRight" | "upLeft" | "leftUp" | "leftCenter" | "leftDown" | "rightUp" | "rightCenter" | "rightDown" | "downStartLeft" | "upStartLeft" | "downStartRight" | "upStartRight" | "leftStartUp" | "leftStartDown" | "rightStartUp" | "rightStartDown" | undefined>>;
    parentRef: React.RefObject<HTMLDivElement>;
    containerRef: React.RefObject<HTMLDivElement>;
};
export {};
