{"version":3,"file":"helpers.js","names":["addHours","addMinutes","addSeconds","format","isValid","isWithinInterval","parse","startOfDay","startOfHour","startOfMinute","useCallback","IMask","useIMask","getLabelHours","getLabelMinutes","getLabelSeconds","useMutableRef","datePickerPropSeparatorDefault","getPartDate","getParts","getPartsDate","getTimeEnum","useStringValue","datePickerErrorTypes","usePicker","props","value","onChange","onError","formatProp","separator","maxDate","minDate","multiplicityHours","multiplicityMinutes","multiplicitySeconds","onChangeRef","valueRef","onErrorRef","onAccept","stringValue","maskRef","e","current","length","formatArray","valueArray","validArray","map","marker","filter","item","date","join","Date","start","end","dd","MM","yyyy","HH","mm","ss","type","getTime","imaskProps","mask","pattern","blocks","MaskedRange","from","to","MaskedEnum","lazy","autofix","string","validate","handleClear","ref"],"sources":["../../../../../../src/components/DatePicker/DatePickerFieldTypeDateTime/helpers.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport {\n  addHours,\n  addMinutes,\n  addSeconds,\n  format,\n  isValid,\n  isWithinInterval,\n  parse,\n  startOfDay,\n  startOfHour,\n  startOfMinute,\n} from 'date-fns';\nimport { MaskedDate } from 'imask';\nimport React, { useCallback } from 'react';\nimport { IMask, ReactMaskOpts, useIMask } from 'react-imask';\n\nimport {\n  getLabelHours,\n  getLabelMinutes,\n  getLabelSeconds,\n} from '##/components/DateTime/helpers';\nimport {\n  TextFieldPropForm,\n  TextFieldPropSize,\n  TextFieldPropStatus,\n  TextFieldPropView,\n} from '##/components/TextField/TextField';\nimport { useMutableRef } from '##/hooks/useMutableRef/useMutableRef';\nimport { PropsWithHTMLAttributes } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport {\n  datePickerPropSeparatorDefault,\n  getPartDate,\n  getParts,\n  getPartsDate,\n  getTimeEnum,\n  useStringValue,\n} from '../helpers';\nimport { datePickerErrorTypes, DatePickerPropOnError } from '../types';\n\ntype DatePickerFieldTypeDateTimePropOnChange = (\n  value: Date | null,\n  props: {\n    e: Event;\n  },\n) => void;\n\nexport type DatePickerFieldTypeDateTimeProps = PropsWithHTMLAttributes<\n  {\n    className?: string;\n    value?: Date | null;\n    onChange?: DatePickerFieldTypeDateTimePropOnChange;\n    onError?: DatePickerPropOnError;\n    id?: string;\n    name?: string;\n    disabled?: boolean;\n    size?: TextFieldPropSize;\n    view?: TextFieldPropView;\n    form?: TextFieldPropForm;\n    status?: TextFieldPropStatus;\n    onFocus?: React.FocusEventHandler<HTMLElement>;\n    onBlur?: React.FocusEventHandler<HTMLElement>;\n    autoFocus?: boolean;\n    placeholder?: string;\n    leftSide?: string | IconComponent;\n    rightSide?: string | IconComponent;\n    readOnly?: boolean;\n    required?: boolean;\n    tabIndex?: number;\n    inputRef?: React.Ref<HTMLTextAreaElement | HTMLInputElement>;\n    ariaLabel?: string;\n    iconSize?: IconPropSize;\n    children?: never;\n    format?: string;\n    separator?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    focused?: boolean;\n    multiplicitySeconds?: number;\n    multiplicityMinutes?: number;\n    multiplicityHours?: number;\n    label?: string;\n    labelIcon?: IconComponent;\n    caption?: string;\n    labelPosition?: 'top' | 'left';\n    withClearButton?: boolean;\n  },\n  HTMLDivElement\n>;\n\ntype UsePickerProps = {\n  value?: Date | null;\n  onChange?: DatePickerFieldTypeDateTimePropOnChange;\n  onError?: DatePickerPropOnError;\n  format: string;\n  separator: string;\n  minDate: Date;\n  maxDate: Date;\n  multiplicityHours: number | undefined;\n  multiplicitySeconds: number | undefined;\n  multiplicityMinutes: number | undefined;\n};\n\nexport const usePicker = (props: UsePickerProps) => {\n  const {\n    value,\n    onChange,\n    onError,\n    format: formatProp,\n    separator,\n    maxDate,\n    minDate,\n    multiplicityHours,\n    multiplicityMinutes,\n    multiplicitySeconds,\n  } = props;\n  const onChangeRef = useMutableRef(onChange);\n  const valueRef = useMutableRef(value);\n  const onErrorRef = useMutableRef(onError);\n\n  const onAccept = useCallback(\n    (stringValue: string, maskRef: unknown, e: InputEvent | undefined) => {\n      const onChange = onChangeRef.current;\n      const value = valueRef.current;\n\n      if (\n        value &&\n        isValid(value) &&\n        format(value, formatProp) === stringValue\n      ) {\n        return;\n      }\n\n      if (stringValue?.length !== formatProp.length && value && e && onChange) {\n        onChange(null, { e });\n        return;\n      }\n\n      if (onChange && e) {\n        if (!stringValue) {\n          if (value) {\n            onChange(null, { e });\n          }\n          return;\n        }\n\n        const formatArray = getParts(formatProp, separator, false);\n        const valueArray = getParts(stringValue, separator, false);\n        const validArray = formatArray\n          .map((marker) => getPartDate(formatArray, valueArray, marker))\n          .filter((item) => Boolean(item));\n\n        if (formatArray.length === validArray.length) {\n          const date = parse(\n            valueArray.join(datePickerPropSeparatorDefault),\n            formatArray.join(datePickerPropSeparatorDefault),\n            new Date(),\n          );\n\n          if (!isWithinInterval(date, { start: minDate, end: maxDate })) {\n            const [dd, MM, yyyy, HH, mm, ss] = getPartsDate(\n              stringValue,\n              formatProp,\n              separator,\n              true,\n              ['dd', 'MM', 'yyyy', 'HH', 'mm', 'ss'],\n            );\n\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[0],\n              stringValue,\n              dd,\n              MM,\n              yyyy,\n              date,\n              HH,\n              mm,\n              ss,\n            });\n\n            if (value) {\n              onChange(null, { e });\n            }\n            return;\n          }\n          onChange(date, { e });\n        } else if (value) {\n          onChange(null, { e });\n        }\n      }\n    },\n    [minDate?.getTime(), maxDate?.getTime(), formatProp, separator],\n  );\n\n  const imaskProps = useIMask<HTMLInputElement, ReactMaskOpts>(\n    {\n      mask: Date as unknown as MaskedDate,\n      pattern: formatProp,\n      blocks: {\n        yyyy: {\n          mask: IMask.MaskedRange,\n          from: 1,\n          to: 9999,\n        },\n\n        MM: {\n          mask: IMask.MaskedRange,\n          from: 1,\n          to: 12,\n        },\n\n        dd: {\n          mask: IMask.MaskedRange,\n          from: 1,\n          to: 31,\n        },\n        HH:\n          multiplicityHours && multiplicityHours > 1\n            ? {\n                mask: IMask.MaskedEnum,\n                enum: getTimeEnum(\n                  24,\n                  multiplicityHours,\n                  startOfDay,\n                  addHours,\n                  getLabelHours,\n                ),\n              }\n            : {\n                mask: IMask.MaskedRange,\n                from: 0,\n                to: 23,\n              },\n        mm:\n          multiplicityMinutes && multiplicityMinutes > 1\n            ? {\n                mask: IMask.MaskedEnum,\n                enum: getTimeEnum(\n                  60,\n                  multiplicityMinutes,\n                  startOfHour,\n                  addMinutes,\n                  getLabelMinutes,\n                ),\n              }\n            : {\n                mask: IMask.MaskedRange,\n                from: 0,\n                to: 59,\n              },\n        ss:\n          multiplicitySeconds && multiplicitySeconds > 1\n            ? {\n                mask: IMask.MaskedEnum,\n                enum: getTimeEnum(\n                  60,\n                  multiplicitySeconds,\n                  startOfMinute,\n                  addSeconds,\n                  getLabelSeconds,\n                ),\n              }\n            : {\n                mask: IMask.MaskedRange,\n                from: 0,\n                to: 59,\n              },\n      },\n      lazy: true,\n      autofix: true,\n      format: (date: Date) => format(date, formatProp),\n      parse: (string: string) => parse(string, formatProp, new Date()),\n      validate: (string: string) => {\n        const formatArray = getParts(formatProp, separator, false);\n        const valueArray = getParts(string, separator, false);\n        const validArray = formatArray\n          .map((marker) => getPartDate(formatArray, valueArray, marker))\n          .filter((item) => Boolean(item));\n\n        if (\n          formatArray.length === validArray.length &&\n          !isValid(\n            parse(\n              valueArray.join(datePickerPropSeparatorDefault),\n              formatArray.join(datePickerPropSeparatorDefault),\n              new Date(),\n            ),\n          )\n        ) {\n          const [dd, MM, yyyy, HH, mm, ss] = getPartsDate(\n            string,\n            formatProp,\n            separator,\n            true,\n            ['dd', 'MM', 'yyyy', 'HH', 'mm', 'ss'],\n          );\n\n          onErrorRef.current?.({\n            type: datePickerErrorTypes[1],\n            stringValue: string,\n            dd,\n            MM,\n            yyyy,\n            HH,\n            mm,\n            ss,\n          });\n          return false;\n        }\n\n        return true;\n      },\n    },\n    { onAccept },\n  );\n\n  const handleClear = useStringValue(\n    value,\n    formatProp,\n    separator,\n    onChangeRef,\n    imaskProps,\n  );\n\n  return [imaskProps.ref, handleClear] as const;\n};\n"],"mappings":"iEACA,OACEA,QADF,CAEEC,UAFF,CAGEC,UAHF,CAIEC,MAAM,GAANA,QAJF,CAKEC,OALF,CAMEC,gBANF,CAOEC,KAAK,GAALA,OAPF,CAQEC,UARF,CASEC,WATF,CAUEC,aAVF,KAWO,UAXP,CAaA,OAAgBC,WAAhB,KAAmC,OAAnC,CACA,OAASC,KAAT,CAA+BC,QAA/B,KAA+C,aAA/C,CAEA,OACEC,aADF,CAEEC,eAFF,CAGEC,eAHF,8BAWA,OAASC,aAAT,kDAGA,OACEC,8BADF,CAEEC,WAFF,CAGEC,QAHF,CAIEC,YAJF,CAKEC,WALF,CAMEC,cANF,kBAQA,OAASC,oBAAT,gBAiEA,MAAO,IAAMC,UAAS,CAAG,SAACC,CAAD,CAA2B,IAEhDC,EAFgD,CAY9CD,CAZ8C,CAEhDC,KAFgD,CAGhDC,CAHgD,CAY9CF,CAZ8C,CAGhDE,QAHgD,CAIhDC,CAJgD,CAY9CH,CAZ8C,CAIhDG,OAJgD,CAKxCC,CALwC,CAY9CJ,CAZ8C,CAKhDtB,MALgD,CAMhD2B,CANgD,CAY9CL,CAZ8C,CAMhDK,SANgD,CAOhDC,CAPgD,CAY9CN,CAZ8C,CAOhDM,OAPgD,CAQhDC,CARgD,CAY9CP,CAZ8C,CAQhDO,OARgD,CAShDC,CATgD,CAY9CR,CAZ8C,CAShDQ,iBATgD,CAUhDC,CAVgD,CAY9CT,CAZ8C,CAUhDS,mBAVgD,CAWhDC,CAXgD,CAY9CV,CAZ8C,CAWhDU,mBAXgD,CAa5CC,CAAW,CAAGpB,aAAa,CAACW,CAAD,CAbiB,CAc5CU,CAAQ,CAAGrB,aAAa,CAACU,CAAD,CAdoB,CAe5CY,CAAU,CAAGtB,aAAa,CAACY,CAAD,CAfkB,CAiB5CW,CAAQ,CAAG7B,WAAW,CAC1B,SAAC8B,CAAD,CAAsBC,CAAtB,CAAwCC,CAAxC,CAAsE,IAC9Df,EAAQ,CAAGS,CAAW,CAACO,OADuC,CAE9DjB,CAAK,CAAGW,CAAQ,CAACM,OAF6C,CAIpE,KACEjB,CAAK,EACLtB,OAAO,CAACsB,CAAD,CADP,EAEAvB,OAAM,CAACuB,CAAD,CAAQG,CAAR,CAAN,GAA8BW,CAHhC,GAQA,GAAI,QAAAA,CAAW,WAAXA,CAAA,QAAAA,CAAW,CAAEI,MAAb,IAAwBf,CAAU,CAACe,MAAnC,EAA6ClB,CAA7C,EAAsDgB,CAAtD,EAA2Df,CAA/D,CAEE,WADAA,EAAQ,CAAC,IAAD,CAAO,CAAEe,CAAC,CAADA,CAAF,CAAP,CACR,CAGF,GAAIf,CAAQ,EAAIe,CAAhB,CAAmB,CACjB,GAAI,CAACF,CAAL,CAIE,YAHId,CAGJ,EAFEC,CAAQ,CAAC,IAAD,CAAO,CAAEe,CAAC,CAADA,CAAF,CAAP,CAEV,EALe,GAQXG,EAAW,CAAG1B,QAAQ,CAACU,CAAD,CAAaC,CAAb,IARX,CASXgB,CAAU,CAAG3B,QAAQ,CAACqB,CAAD,CAAcV,CAAd,IATV,CAUXiB,CAAU,CAAGF,CAAW,CAC3BG,GADgB,CACZ,SAACC,CAAD,QAAY/B,YAAW,CAAC2B,CAAD,CAAcC,CAAd,CAA0BG,CAA1B,CAAvB,CADY,EAEhBC,MAFgB,CAET,SAACC,CAAD,UAAkBA,CAAlB,CAFS,CAVF,CAcjB,GAAIN,CAAW,CAACD,MAAZ,GAAuBG,CAAU,CAACH,MAAtC,CAA8C,CAC5C,GAAMQ,EAAI,CAAG9C,MAAK,CAChBwC,CAAU,CAACO,IAAX,CAAgBpC,8BAAhB,CADgB,CAEhB4B,CAAW,CAACQ,IAAZ,CAAiBpC,8BAAjB,CAFgB,CAGhB,GAAIqC,KAHY,CAAlB,CAMA,GAAI,CAACjD,gBAAgB,CAAC+C,CAAD,CAAO,CAAEG,KAAK,CAAEvB,CAAT,CAAkBwB,GAAG,CAAEzB,CAAvB,CAAP,CAArB,CAA+D,SAC1BX,YAAY,CAC7CoB,CAD6C,CAE7CX,CAF6C,CAG7CC,CAH6C,IAK7C,CAAC,IAAD,CAAO,IAAP,CAAa,MAAb,CAAqB,IAArB,CAA2B,IAA3B,CAAiC,IAAjC,CAL6C,CADc,uBACtD2B,CADsD,MAClDC,CADkD,MAC9CC,CAD8C,MACxCC,CADwC,MACpCC,CADoC,MAChCC,CADgC,MAwB7D,iBAfAxB,CAAU,CAACK,OAeX,qBAfA,OAAAL,CAAU,CAAW,CACnByB,IAAI,CAAExC,oBAAoB,CAAC,CAAD,CADP,CAEnBiB,WAAW,CAAXA,CAFmB,CAGnBiB,EAAE,CAAFA,CAHmB,CAInBC,EAAE,CAAFA,CAJmB,CAKnBC,IAAI,CAAJA,CALmB,CAMnBP,IAAI,CAAJA,CANmB,CAOnBQ,EAAE,CAAFA,CAPmB,CAQnBC,EAAE,CAAFA,CARmB,CASnBC,EAAE,CAAFA,CATmB,CAAX,CAeV,MAHIpC,CAGJ,EAFEC,CAAQ,CAAC,IAAD,CAAO,CAAEe,CAAC,CAADA,CAAF,CAAP,CAEV,CACD,CACDf,CAAQ,CAACyB,CAAD,CAAO,CAAEV,CAAC,CAADA,CAAF,CAAP,CACT,CAlCD,IAkCWhB,EAlCX,EAmCEC,CAAQ,CAAC,IAAD,CAAO,CAAEe,CAAC,CAADA,CAAF,CAAP,CAEX,CAhED,CAiED,CAtEyB,CAuE1B,QAACV,CAAD,WAACA,CAAD,QAACA,CAAO,CAAEgC,OAAT,EAAD,QAAqBjC,CAArB,WAAqBA,CAArB,QAAqBA,CAAO,CAAEiC,OAAT,EAArB,CAAyCnC,CAAzC,CAAqDC,CAArD,CAvE0B,CAjBsB,CA2F5CmC,CAAU,CAAGrD,QAAQ,CACzB,CACEsD,IAAI,CAAEZ,IADR,CAEEa,OAAO,CAAEtC,CAFX,CAGEuC,MAAM,CAAE,CACNT,IAAI,CAAE,CACJO,IAAI,CAAEvD,KAAK,CAAC0D,WADR,CAEJC,IAAI,CAAE,CAFF,CAGJC,EAAE,CAAE,IAHA,CADA,CAONb,EAAE,CAAE,CACFQ,IAAI,CAAEvD,KAAK,CAAC0D,WADV,CAEFC,IAAI,CAAE,CAFJ,CAGFC,EAAE,CAAE,EAHF,CAPE,CAaNd,EAAE,CAAE,CACFS,IAAI,CAAEvD,KAAK,CAAC0D,WADV,CAEFC,IAAI,CAAE,CAFJ,CAGFC,EAAE,CAAE,EAHF,CAbE,CAkBNX,EAAE,CACA3B,CAAiB,EAAwB,CAApB,CAAAA,CAArB,CACI,CACEiC,IAAI,CAAEvD,KAAK,CAAC6D,UADd,CAEE,KAAMnD,WAAW,CACf,EADe,CAEfY,CAFe,CAGf1B,UAHe,CAIfP,QAJe,CAKfa,aALe,CAFnB,CADJ,CAWI,CACEqD,IAAI,CAAEvD,KAAK,CAAC0D,WADd,CAEEC,IAAI,CAAE,CAFR,CAGEC,EAAE,CAAE,EAHN,CA9BA,CAmCNV,EAAE,CACA3B,CAAmB,EAA0B,CAAtB,CAAAA,CAAvB,CACI,CACEgC,IAAI,CAAEvD,KAAK,CAAC6D,UADd,CAEE,KAAMnD,WAAW,CACf,EADe,CAEfa,CAFe,CAGf1B,WAHe,CAIfP,UAJe,CAKfa,eALe,CAFnB,CADJ,CAWI,CACEoD,IAAI,CAAEvD,KAAK,CAAC0D,WADd,CAEEC,IAAI,CAAE,CAFR,CAGEC,EAAE,CAAE,EAHN,CA/CA,CAoDNT,EAAE,CACA3B,CAAmB,EAA0B,CAAtB,CAAAA,CAAvB,CACI,CACE+B,IAAI,CAAEvD,KAAK,CAAC6D,UADd,CAEE,KAAMnD,WAAW,CACf,EADe,CAEfc,CAFe,CAGf1B,aAHe,CAIfP,UAJe,CAKfa,eALe,CAFnB,CADJ,CAWI,CACEmD,IAAI,CAAEvD,KAAK,CAAC0D,WADd,CAEEC,IAAI,CAAE,CAFR,CAGEC,EAAE,CAAE,EAHN,CAhEA,CAHV,CAyEEE,IAAI,GAzEN,CA0EEC,OAAO,GA1ET,CA2EEvE,MAAM,CAAE,gBAACiD,CAAD,QAAgBjD,QAAM,CAACiD,CAAD,CAAOvB,CAAP,CAAtB,CA3EV,CA4EEvB,KAAK,CAAE,eAACqE,CAAD,QAAoBrE,OAAK,CAACqE,CAAD,CAAS9C,CAAT,CAAqB,GAAIyB,KAAzB,CAAzB,CA5ET,CA6EEsB,QAAQ,CAAE,kBAACD,CAAD,CAAoB,IACtB9B,EAAW,CAAG1B,QAAQ,CAACU,CAAD,CAAaC,CAAb,IADA,CAEtBgB,CAAU,CAAG3B,QAAQ,CAACwD,CAAD,CAAS7C,CAAT,IAFC,CAGtBiB,CAAU,CAAGF,CAAW,CAC3BG,GADgB,CACZ,SAACC,CAAD,QAAY/B,YAAW,CAAC2B,CAAD,CAAcC,CAAd,CAA0BG,CAA1B,CAAvB,CADY,EAEhBC,MAFgB,CAET,SAACC,CAAD,UAAkBA,CAAlB,CAFS,CAHS,CAO5B,GACEN,CAAW,CAACD,MAAZ,GAAuBG,CAAU,CAACH,MAAlC,EACA,CAACxC,OAAO,CACNE,MAAK,CACHwC,CAAU,CAACO,IAAX,CAAgBpC,8BAAhB,CADG,CAEH4B,CAAW,CAACQ,IAAZ,CAAiBpC,8BAAjB,CAFG,CAGH,GAAIqC,KAHD,CADC,CAFV,CASE,SACmClC,YAAY,CAC7CuD,CAD6C,CAE7C9C,CAF6C,CAG7CC,CAH6C,IAK7C,CAAC,IAAD,CAAO,IAAP,CAAa,MAAb,CAAqB,IAArB,CAA2B,IAA3B,CAAiC,IAAjC,CAL6C,CAD/C,uBACO2B,CADP,MACWC,CADX,MACeC,CADf,MACqBC,CADrB,MACyBC,CADzB,MAC6BC,CAD7B,MAmBA,iBAVAxB,CAAU,CAACK,OAUX,qBAVA,OAAAL,CAAU,CAAW,CACnByB,IAAI,CAAExC,oBAAoB,CAAC,CAAD,CADP,CAEnBiB,WAAW,CAAEmC,CAFM,CAGnBlB,EAAE,CAAFA,CAHmB,CAInBC,EAAE,CAAFA,CAJmB,CAKnBC,IAAI,CAAJA,CALmB,CAMnBC,EAAE,CAAFA,CANmB,CAOnBC,EAAE,CAAFA,CAPmB,CAQnBC,EAAE,CAAFA,CARmB,CAAX,CAUV,GACD,CAED,QACD,CApHH,CADyB,CAuHzB,CAAEvB,QAAQ,CAARA,CAAF,CAvHyB,CA3FuB,CAqN5CsC,CAAW,CAAGvD,cAAc,CAChCI,CADgC,CAEhCG,CAFgC,CAGhCC,CAHgC,CAIhCM,CAJgC,CAKhC6B,CALgC,CArNgB,CA6NlD,MAAO,CAACA,CAAU,CAACa,GAAZ,CAAiBD,CAAjB,CACR,CA9NM"}