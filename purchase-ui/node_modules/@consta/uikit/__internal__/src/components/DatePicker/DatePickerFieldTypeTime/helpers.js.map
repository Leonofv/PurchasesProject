{"version":3,"file":"helpers.js","names":["addHours","addMinutes","addSeconds","format","isValid","isWithinInterval","parse","startOfDay","startOfHour","startOfMinute","useCallback","IMask","useIMask","getLabelHours","getLabelMinutes","getLabelSeconds","useMutableRef","getPartDate","getParts","getPartsDate","getTimeEnum","useStringValue","datePickerErrorTypes","usePicker","props","value","onChange","onError","multiplicityHours","multiplicityMinutes","multiplicitySeconds","formatProp","separator","maxDate","minDate","onChangeRef","valueRef","onErrorRef","onAccept","stringValue","maskRef","e","current","length","formatArray","valueArray","validArray","map","marker","filter","item","date","join","Date","start","end","HH","mm","ss","type","getTime","imaskProps","mask","pattern","blocks","MaskedEnum","MaskedRange","from","to","lazy","autofix","string","validate","handleClear","ref"],"sources":["../../../../../../src/components/DatePicker/DatePickerFieldTypeTime/helpers.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport {\n  addHours,\n  addMinutes,\n  addSeconds,\n  format,\n  isValid,\n  isWithinInterval,\n  parse,\n  startOfDay,\n  startOfHour,\n  startOfMinute,\n} from 'date-fns';\nimport { MaskedDate } from 'imask';\nimport React, { useCallback } from 'react';\nimport { IMask, ReactMaskOpts, useIMask } from 'react-imask';\n\nimport {\n  getLabelHours,\n  getLabelMinutes,\n  getLabelSeconds,\n} from '##/components/DateTime/helpers';\nimport {\n  TextFieldPropForm,\n  TextFieldPropSize,\n  TextFieldPropStatus,\n  TextFieldPropView,\n} from '##/components/TextField';\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { PropsWithHTMLAttributes } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport {\n  getPartDate,\n  getParts,\n  getPartsDate,\n  getTimeEnum,\n  useStringValue,\n} from '../helpers';\nimport { datePickerErrorTypes, DatePickerPropOnError } from '../types';\n\ntype DatePickerFieldTypeTimePropOnChange = (\n  value: Date | null,\n  props: {\n    e: Event;\n  },\n) => void;\n\nexport type DatePickerFieldTypeTimeProps = PropsWithHTMLAttributes<\n  {\n    className?: string;\n    value?: Date | null;\n    onChange?: DatePickerFieldTypeTimePropOnChange;\n    onError?: DatePickerPropOnError;\n    id?: string;\n    name?: string;\n    disabled?: boolean;\n    size?: TextFieldPropSize;\n    view?: TextFieldPropView;\n    form?: TextFieldPropForm;\n    status?: TextFieldPropStatus;\n    onFocus?: React.FocusEventHandler<HTMLElement>;\n    onBlur?: React.FocusEventHandler<HTMLElement>;\n    autoFocus?: boolean;\n    placeholder?: string;\n    leftSide?: string | IconComponent;\n    rightSide?: string | IconComponent;\n    readOnly?: boolean;\n    required?: boolean;\n    tabIndex?: number;\n    inputRef?: React.Ref<HTMLTextAreaElement | HTMLInputElement>;\n    ariaLabel?: string;\n    iconSize?: IconPropSize;\n    children?: never;\n    format?: string;\n    separator?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    focused?: boolean;\n    multiplicitySeconds?: number;\n    multiplicityMinutes?: number;\n    multiplicityHours?: number;\n    label?: string;\n    labelIcon?: IconComponent;\n    caption?: string;\n    labelPosition?: 'top' | 'left';\n    withClearButton?: boolean;\n  },\n  HTMLDivElement\n>;\n\ntype UsePickerProps = {\n  value?: Date | null;\n  onChange?: DatePickerFieldTypeTimePropOnChange;\n  onError?: DatePickerPropOnError;\n  multiplicityHours: number | undefined;\n  multiplicitySeconds: number | undefined;\n  multiplicityMinutes: number | undefined;\n  format: string;\n  separator: string;\n  minDate: Date;\n  maxDate: Date;\n};\n\nexport const usePicker = (props: UsePickerProps) => {\n  const {\n    value,\n    onChange,\n    onError,\n    multiplicityHours,\n    multiplicityMinutes,\n    multiplicitySeconds,\n    format: formatProp,\n    separator,\n    maxDate,\n    minDate,\n  } = props;\n  const onChangeRef = useMutableRef(onChange);\n  const valueRef = useMutableRef(value);\n  const onErrorRef = useMutableRef(onError);\n\n  const onAccept = useCallback(\n    (stringValue: string, maskRef: unknown, e: InputEvent | undefined) => {\n      const onChange = onChangeRef.current;\n      const value = valueRef.current;\n\n      if (\n        value &&\n        isValid(value) &&\n        format(value, formatProp) === stringValue\n      ) {\n        return;\n      }\n\n      if (stringValue?.length !== formatProp.length && value && e && onChange) {\n        onChange(null, { e });\n        return;\n      }\n\n      if (onChange && e) {\n        if (!stringValue) {\n          if (value) {\n            onChange(null, { e });\n          }\n          return;\n        }\n\n        const formatArray = getParts(formatProp, separator, false);\n        const valueArray = getParts(stringValue, separator, false);\n        const validArray = formatArray\n          .map((marker) => getPartDate(formatArray, valueArray, marker))\n          .filter((item) => Boolean(item));\n\n        if (formatArray.length === validArray.length) {\n          const date = parse(\n            valueArray.join(':'),\n            formatArray.join(':'),\n            value || new Date(),\n          );\n\n          if (!isWithinInterval(date, { start: minDate, end: maxDate })) {\n            const [HH, mm, ss] = getPartsDate(\n              stringValue,\n              formatProp,\n              ':',\n              false,\n              ['HH', 'mm', 'ss'],\n            );\n\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[0],\n              stringValue,\n              date,\n              HH,\n              mm,\n              ss,\n            });\n\n            if (value) {\n              onChange(null, { e });\n            }\n            return;\n          }\n          onChange(date, { e });\n        } else if (value) {\n          onChange(null, { e });\n        }\n      }\n    },\n    [minDate?.getTime(), maxDate?.getTime(), formatProp, separator],\n  );\n\n  const imaskProps = useIMask<HTMLInputElement, ReactMaskOpts>(\n    {\n      mask: Date as unknown as MaskedDate,\n      pattern: formatProp,\n      blocks: {\n        HH:\n          multiplicityHours && multiplicityHours > 1\n            ? {\n                mask: IMask.MaskedEnum,\n                enum: getTimeEnum(\n                  24,\n                  multiplicityHours,\n                  startOfDay,\n                  addHours,\n                  getLabelHours,\n                ),\n              }\n            : {\n                mask: IMask.MaskedRange,\n                from: 0,\n                to: 23,\n              },\n        mm:\n          multiplicityMinutes && multiplicityMinutes > 1\n            ? {\n                mask: IMask.MaskedEnum,\n                enum: getTimeEnum(\n                  60,\n                  multiplicityMinutes,\n                  startOfHour,\n                  addMinutes,\n                  getLabelMinutes,\n                ),\n              }\n            : {\n                mask: IMask.MaskedRange,\n                from: 0,\n                to: 59,\n              },\n        ss:\n          multiplicitySeconds && multiplicitySeconds > 1\n            ? {\n                mask: IMask.MaskedEnum,\n                enum: getTimeEnum(\n                  60,\n                  multiplicitySeconds,\n                  startOfMinute,\n                  addSeconds,\n                  getLabelSeconds,\n                ),\n              }\n            : {\n                mask: IMask.MaskedRange,\n                from: 0,\n                to: 59,\n              },\n      },\n      lazy: true,\n      autofix: true,\n      format: (date: Date) => format(date, formatProp),\n      parse: (string: string) => parse(string, formatProp, new Date()),\n      validate: (string: string) => {\n        const formatArray = getParts(formatProp, separator, false);\n        const valueArray = getParts(string, separator, false);\n        const validArray = formatArray\n          .map((marker) => getPartDate(formatArray, valueArray, marker))\n          .filter((item) => Boolean(item));\n\n        if (\n          formatArray.length === validArray.length &&\n          !isValid(\n            parse(valueArray.join(':'), formatArray.join(':'), new Date()),\n          )\n        ) {\n          const [HH, mm, ss] = getPartsDate(string, formatProp, ':', false, [\n            'HH',\n            'mm',\n            'ss',\n          ]);\n\n          onErrorRef.current?.({\n            type: datePickerErrorTypes[1],\n            stringValue: string,\n            HH,\n            mm,\n            ss,\n          });\n          return false;\n        }\n\n        return true;\n      },\n    },\n    { onAccept },\n  );\n\n  const handleClear = useStringValue(\n    value,\n    formatProp,\n    separator,\n    onChangeRef,\n    imaskProps,\n  );\n\n  return [imaskProps.ref, handleClear] as const;\n};\n"],"mappings":"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"}