{"version":3,"file":"helpers.js","names":["format","isValid","isWithinInterval","parse","useCallback","IMask","useIMask","useMutableRef","datePickerPropSeparatorDefault","getPartDate","getParts","getPartsDate","useStringValue","datePickerErrorTypes","usePicker","props","value","onChange","onError","formatProp","separator","maxDate","minDate","onChangeRef","valueRef","onErrorRef","onAccept","stringValue","maskRef","e","current","length","formatArray","valueArray","validArray","map","marker","filter","item","date","join","Date","start","end","yyyy","type","getTime","imaskProps","mask","pattern","blocks","MaskedRange","from","to","lazy","autofix","string","validate","handleClear","ref"],"sources":["../../../../../../src/components/DatePicker/DatePickerFieldTypeYear/helpers.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport { format, isValid, isWithinInterval, parse } from 'date-fns';\nimport { MaskedDate } from 'imask';\nimport { useCallback } from 'react';\nimport { IMask, ReactMaskOpts, useIMask } from 'react-imask';\n\nimport {\n  TextFieldPropForm,\n  TextFieldPropSize,\n  TextFieldPropStatus,\n  TextFieldPropView,\n} from '##/components/TextField';\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { PropsWithHTMLAttributes } from '##/utils/types/PropsWithHTMLAttributes';\n\nimport {\n  datePickerPropSeparatorDefault,\n  getPartDate,\n  getParts,\n  getPartsDate,\n  useStringValue,\n} from '../helpers';\nimport { datePickerErrorTypes, DatePickerPropOnError } from '../types';\n\ntype DatePickerFieldTypeYearPropOnChange = (\n  value: Date | null,\n  props: {\n    e: Event;\n  },\n) => void;\n\nexport type DatePickerFieldTypeYearProps = PropsWithHTMLAttributes<\n  {\n    className?: string;\n    value?: Date | null;\n    onChange?: DatePickerFieldTypeYearPropOnChange;\n    onError?: DatePickerPropOnError;\n    id?: string;\n    name?: string;\n    disabled?: boolean;\n    size?: TextFieldPropSize;\n    view?: TextFieldPropView;\n    form?: TextFieldPropForm;\n    status?: TextFieldPropStatus;\n    onFocus?: React.FocusEventHandler<HTMLElement>;\n    onBlur?: React.FocusEventHandler<HTMLElement>;\n    autoFocus?: boolean;\n    placeholder?: string;\n    leftSide?: string | IconComponent;\n    rightSide?: string | IconComponent;\n    readOnly?: boolean;\n    required?: boolean;\n    tabIndex?: number;\n    inputRef?: React.Ref<HTMLTextAreaElement | HTMLInputElement>;\n    ariaLabel?: string;\n    iconSize?: IconPropSize;\n    children?: never;\n    format?: string;\n    separator?: string;\n    minDate?: Date;\n    maxDate?: Date;\n    focused?: boolean;\n    label?: string;\n    labelIcon?: IconComponent;\n    caption?: string;\n    labelPosition?: 'top' | 'left';\n    withClearButton?: boolean;\n  },\n  HTMLDivElement\n>;\n\ntype UsePickerProps = {\n  value?: Date | null;\n  onChange?: DatePickerFieldTypeYearPropOnChange;\n  onError?: DatePickerPropOnError;\n  format: string;\n  separator: string;\n  minDate: Date;\n  maxDate: Date;\n};\n\nexport const usePicker = (props: UsePickerProps) => {\n  const {\n    value,\n    onChange,\n    onError,\n    format: formatProp,\n    separator,\n    maxDate,\n    minDate,\n  } = props;\n  const onChangeRef = useMutableRef(onChange);\n  const valueRef = useMutableRef(value);\n  const onErrorRef = useMutableRef(onError);\n\n  const onAccept = useCallback(\n    (stringValue: string, maskRef: unknown, e: InputEvent | undefined) => {\n      const onChange = onChangeRef.current;\n      const value = valueRef.current;\n\n      if (\n        value &&\n        isValid(value) &&\n        format(value, formatProp) === stringValue\n      ) {\n        return;\n      }\n\n      if (stringValue?.length !== formatProp.length && value && e && onChange) {\n        onChange(null, { e });\n        return;\n      }\n\n      if (onChange && e) {\n        if (!stringValue) {\n          if (value) {\n            onChange(null, { e });\n          }\n          return;\n        }\n\n        const formatArray = getParts(formatProp, separator, false);\n        const valueArray = getParts(stringValue, separator, false);\n        const validArray = formatArray\n          .map((marker) => getPartDate(formatArray, valueArray, marker))\n          .filter((item) => Boolean(item));\n\n        if (formatArray.length === validArray.length) {\n          const date = parse(\n            valueArray.join(datePickerPropSeparatorDefault),\n            formatArray.join(datePickerPropSeparatorDefault),\n            new Date(),\n          );\n          if (!isWithinInterval(date, { start: minDate, end: maxDate })) {\n            const [yyyy] = getPartsDate(\n              stringValue,\n              formatProp,\n              separator,\n              false,\n              ['yyyy'],\n            );\n\n            onErrorRef.current?.({\n              type: datePickerErrorTypes[0],\n              stringValue,\n              yyyy,\n              date,\n            });\n\n            if (value) {\n              onChange(null, { e });\n            }\n            return;\n          }\n          onChange(date, { e });\n        } else if (value) {\n          onChange(null, { e });\n        }\n      }\n    },\n    [minDate?.getTime(), maxDate?.getTime(), formatProp, separator],\n  );\n\n  const imaskProps = useIMask<HTMLInputElement, ReactMaskOpts>(\n    {\n      mask: Date as unknown as MaskedDate,\n      pattern: formatProp,\n      blocks: {\n        yyyy: {\n          mask: IMask.MaskedRange,\n          from: 1,\n          to: 9999,\n        },\n      },\n      lazy: true,\n      autofix: true,\n      format: (date: Date) => format(date, formatProp),\n      parse: (string: string) => parse(string, formatProp, new Date()),\n      validate: (string: string) => {\n        const formatArray = getParts(formatProp, separator, false);\n        const valueArray = getParts(string, separator, false);\n        const validArray = formatArray\n          .map((marker) => getPartDate(formatArray, valueArray, marker))\n          .filter((item) => Boolean(item));\n\n        if (\n          formatArray.length === validArray.length &&\n          !isValid(\n            parse(\n              valueArray.join(datePickerPropSeparatorDefault),\n              formatArray.join(datePickerPropSeparatorDefault),\n              new Date(),\n            ),\n          )\n        ) {\n          const [yyyy] = getPartsDate(string, formatProp, separator, false, [\n            'yyyy',\n          ]);\n\n          onErrorRef.current?.({\n            type: datePickerErrorTypes[1],\n            stringValue: string,\n            yyyy,\n          });\n          return false;\n        }\n\n        return true;\n      },\n    },\n    { onAccept },\n  );\n\n  const handleClear = useStringValue(\n    value,\n    formatProp,\n    separator,\n    onChangeRef,\n    imaskProps,\n  );\n\n  return [imaskProps.ref, handleClear] as const;\n};\n"],"mappings":"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"}