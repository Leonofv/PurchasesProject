import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["events","dateTimeView","locale","dropdownForm","dropdownClassName","currentVisibleDate","onChangeCurrentVisibleDate","multiplicityHours","multiplicityMinutes","multiplicitySeconds","renderAdditionalControls","onDropdownOpen","dropdownOpen","ignoreOutsideClicksRefs","disabled","inputRef"];import addMonths from"date-fns/addMonths";import startOfMonth from"date-fns/startOfMonth";import React,{forwardRef,useEffect,useRef}from"react";import{useClickOutside}from"../../../hooks/useClickOutside/useClickOutside";import{useForkRef}from"../../../hooks/useForkRef";import{setRef}from"../../../utils/setRef";import{DatePickerDropdown}from"../DatePickerDropdown/DatePickerDropdown";import{DatePickerFieldTypeDateTime}from"../DatePickerFieldTypeDateTime/DatePickerFieldTypeDateTime";import{datePickerPropFormatTypeDateTime,getDropdownZIndex,getMultiplicityTime}from"../helpers";import{datePickerPropDateTimeViewDefault}from"../types";import{useCalendarVisible}from"../useCalendarVisible";import{useCurrentVisibleDate}from"../useCurrentVisibleDate";export var DatePickerTypeDateTime=forwardRef(function(a,b){var c=a.events,d=a.dateTimeView,e=void 0===d?datePickerPropDateTimeViewDefault:d,f=a.locale,g=a.dropdownForm,h=a.dropdownClassName,i=a.currentVisibleDate,j=a.onChangeCurrentVisibleDate,k=a.multiplicityHours,l=a.multiplicityMinutes,m=a.multiplicitySeconds,n=a.renderAdditionalControls,o=a.onDropdownOpen,p=a.dropdownOpen,q=a.ignoreOutsideClicksRefs,r=a.disabled,s=a.inputRef,t=_objectWithoutProperties(a,_excluded),u=getMultiplicityTime(t.format||datePickerPropFormatTypeDateTime,k,l,m),v=_slicedToArray(u,3),w=v[0],x=v[1],y=v[2],z=useRef(null),A=useRef(null),B=useRef(null),C=useCalendarVisible({dropdownOpen:p,onDropdownOpen:o,disabled:r,startRef:B}),D=_slicedToArray(C,2),E=D[0],F=D[1],G=useCurrentVisibleDate({currentVisibleDate:i,maxDate:a.maxDate,minDate:a.minDate,value:a.value,startOfUnit:startOfMonth,onChangeCurrentVisibleDate:j,calendarVisible:E}),H=_slicedToArray(G,2),I=H[0],J=H[1];return useEffect(function(){b&&setRef(b,z.current)},[b,z]),useEffect(function(){if(a.value&&"classic"===e&&I){var b=startOfMonth(a.value);return void(b.getTime()!==I.getTime()&&J(b))}if(a.value&&"classic"!==e&&I){var c=startOfMonth(a.value);c.getTime()!==I.getTime()&&c.getTime()!==addMonths(I,1).getTime()&&J(c)}},[a.value]),useClickOutside({isActive:E,ignoreClicksInsideRefs:[z,A].concat(_toConsumableArray(null!==q&&void 0!==q?q:[])),handler:F.off}),React.createElement(React.Fragment,null,React.createElement(DatePickerFieldTypeDateTime,Object.assign({},t,{ref:z,inputRef:useForkRef([B,s]),onClick:F.on,multiplicityHours:w,multiplicitySeconds:y,multiplicityMinutes:x,disabled:r})),React.createElement(DatePickerDropdown,{ref:A,anchorRef:z,isOpen:E,value:a.value||void 0,type:"date-time",view:e,events:c,className:h,locale:f,minDate:a.minDate,maxDate:a.maxDate,currentVisibleDate:I,form:g,onChange:a.onChange,renderAdditionalControls:n,onChangeCurrentVisibleDate:J,multiplicityHours:w,multiplicitySeconds:y,multiplicityMinutes:x,zIndex:getDropdownZIndex(a.style)}))});
//# sourceMappingURL=DatePickerTypeDateTime.js.map