{"version":3,"file":"DatePickerTypeDateTime.js","names":["addMonths","startOfMonth","React","forwardRef","useEffect","useRef","useClickOutside","useForkRef","setRef","DatePickerDropdown","DatePickerFieldTypeDateTime","datePickerPropFormatTypeDateTime","getDropdownZIndex","getMultiplicityTime","datePickerPropDateTimeViewDefault","useCalendarVisible","useCurrentVisibleDate","DatePickerTypeDateTime","props","ref","events","dateTimeView","locale","dropdownForm","dropdownClassName","currentVisibleDateProp","currentVisibleDate","onChangeCurrentVisibleDate","multiplicityHoursProp","multiplicityHours","multiplicityMinutesProp","multiplicityMinutes","multiplicitySecondsProp","multiplicitySeconds","renderAdditionalControls","onDropdownOpen","dropdownOpen","ignoreOutsideClicksRefs","disabled","inputRefProp","inputRef","otherProps","format","fieldRef","calendarRef","startRef","calendarVisible","setCalendarVisible","maxDate","minDate","value","startOfUnit","setCurrentVisibleDate","current","newVisibleDate","getTime","isActive","ignoreClicksInsideRefs","handler","off","on","onChange","style"],"sources":["../../../../../../src/components/DatePicker/DatePickerTypeDateTime/DatePickerTypeDateTime.tsx"],"sourcesContent":["import addMonths from 'date-fns/addMonths';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport React, { forwardRef, useEffect, useRef } from 'react';\n\nimport { useClickOutside } from '##/hooks/useClickOutside/useClickOutside';\nimport { useForkRef } from '##/hooks/useForkRef';\nimport { setRef } from '##/utils/setRef';\n\nimport { DatePickerDropdown } from '../DatePickerDropdown/DatePickerDropdown';\nimport { DatePickerFieldTypeDateTime } from '../DatePickerFieldTypeDateTime/DatePickerFieldTypeDateTime';\nimport {\n  datePickerPropFormatTypeDateTime,\n  getDropdownZIndex,\n  getMultiplicityTime,\n} from '../helpers';\nimport {\n  datePickerPropDateTimeViewDefault,\n  DatePickerTypeComponent,\n} from '../types';\nimport { useCalendarVisible } from '../useCalendarVisible';\nimport { useCurrentVisibleDate } from '../useCurrentVisibleDate';\n\nexport const DatePickerTypeDateTime: DatePickerTypeComponent<'date-time'> =\n  forwardRef((props, ref) => {\n    const {\n      events,\n      dateTimeView = datePickerPropDateTimeViewDefault,\n      locale,\n      dropdownForm,\n      dropdownClassName,\n      currentVisibleDate: currentVisibleDateProp,\n      onChangeCurrentVisibleDate,\n      multiplicityHours: multiplicityHoursProp,\n      multiplicityMinutes: multiplicityMinutesProp,\n      multiplicitySeconds: multiplicitySecondsProp,\n      renderAdditionalControls,\n      onDropdownOpen,\n      dropdownOpen,\n      ignoreOutsideClicksRefs,\n      disabled,\n      inputRef: inputRefProp,\n      ...otherProps\n    } = props;\n\n    const [multiplicityHours, multiplicityMinutes, multiplicitySeconds] =\n      getMultiplicityTime(\n        otherProps.format || datePickerPropFormatTypeDateTime,\n        multiplicityHoursProp,\n        multiplicityMinutesProp,\n        multiplicitySecondsProp,\n      );\n\n    const fieldRef = useRef<HTMLDivElement>(null);\n    const calendarRef = useRef<HTMLDivElement>(null);\n    const inputRef = useRef<HTMLInputElement>(null);\n\n    const [calendarVisible, setCalendarVisible] = useCalendarVisible({\n      dropdownOpen,\n      onDropdownOpen,\n      disabled,\n      startRef: inputRef,\n    });\n\n    const [currentVisibleDate, setCurrentVisibleDate] = useCurrentVisibleDate({\n      currentVisibleDate: currentVisibleDateProp,\n      maxDate: props.maxDate,\n      minDate: props.minDate,\n      value: props.value,\n      startOfUnit: startOfMonth,\n      onChangeCurrentVisibleDate,\n      calendarVisible,\n    });\n\n    useEffect(() => {\n      if (ref) {\n        setRef(ref, fieldRef.current);\n      }\n    }, [ref, fieldRef]);\n\n    useEffect(() => {\n      if (props.value && dateTimeView === 'classic' && currentVisibleDate) {\n        const newVisibleDate = startOfMonth(props.value);\n        if (newVisibleDate.getTime() !== currentVisibleDate.getTime()) {\n          setCurrentVisibleDate(newVisibleDate);\n        }\n        return;\n      }\n      if (props.value && dateTimeView !== 'classic' && currentVisibleDate) {\n        const newVisibleDate = startOfMonth(props.value);\n        if (\n          newVisibleDate.getTime() !== currentVisibleDate.getTime() &&\n          newVisibleDate.getTime() !==\n            addMonths(currentVisibleDate, 1).getTime()\n        ) {\n          setCurrentVisibleDate(newVisibleDate);\n        }\n      }\n    }, [props.value]);\n\n    useClickOutside({\n      isActive: calendarVisible,\n      ignoreClicksInsideRefs: [\n        fieldRef,\n        calendarRef,\n        ...(ignoreOutsideClicksRefs ?? []),\n      ],\n      handler: setCalendarVisible.off,\n    });\n\n    return (\n      <>\n        <DatePickerFieldTypeDateTime\n          {...otherProps}\n          ref={fieldRef}\n          inputRef={useForkRef([inputRef, inputRefProp])}\n          onClick={setCalendarVisible.on}\n          multiplicityHours={multiplicityHours}\n          multiplicitySeconds={multiplicitySeconds}\n          multiplicityMinutes={multiplicityMinutes}\n          disabled={disabled}\n        />\n        <DatePickerDropdown\n          ref={calendarRef}\n          anchorRef={fieldRef}\n          isOpen={calendarVisible}\n          value={props.value || undefined}\n          type=\"date-time\"\n          view={dateTimeView}\n          events={events}\n          className={dropdownClassName}\n          locale={locale}\n          minDate={props.minDate}\n          maxDate={props.maxDate}\n          currentVisibleDate={currentVisibleDate}\n          form={dropdownForm}\n          onChange={props.onChange}\n          renderAdditionalControls={renderAdditionalControls}\n          onChangeCurrentVisibleDate={setCurrentVisibleDate}\n          multiplicityHours={multiplicityHours}\n          multiplicitySeconds={multiplicitySeconds}\n          multiplicityMinutes={multiplicityMinutes}\n          zIndex={getDropdownZIndex(props.style)}\n        />\n      </>\n    );\n  });\n"],"mappings":"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"}