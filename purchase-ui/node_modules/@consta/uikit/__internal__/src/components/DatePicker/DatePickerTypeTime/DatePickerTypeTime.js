import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["events","dateTimeView","locale","dropdownForm","dropdownClassName","multiplicityHours","multiplicityMinutes","multiplicitySeconds","renderAdditionalControls","currentVisibleDate","onChangeCurrentVisibleDate","onDropdownOpen","dropdownOpen","ignoreOutsideClicksRefs","disabled","inputRef"];import React,{forwardRef,useEffect,useRef}from"react";import{useClickOutside}from"../../../hooks/useClickOutside/useClickOutside";import{useForkRef}from"../../../hooks/useForkRef";import{setRef}from"../../../utils/setRef";import{DatePickerDropdown}from"../DatePickerDropdown/DatePickerDropdown";import{DatePickerFieldTypeTime}from"../DatePickerFieldTypeTime/DatePickerFieldTypeTime";import{datePickerPropFormatTypeDateTime,getDropdownZIndex,getMultiplicityTime}from"../helpers";import{datePickerPropDateTimeViewDefault}from"../types";import{useCalendarVisible}from"../useCalendarVisible";export var DatePickerTypeTime=forwardRef(function(a,b){var c=a.events,d=a.dateTimeView,e=void 0===d?datePickerPropDateTimeViewDefault:d,f=a.locale,g=a.dropdownForm,h=a.dropdownClassName,i=a.multiplicityHours,j=a.multiplicityMinutes,k=a.multiplicitySeconds,l=a.renderAdditionalControls,m=a.currentVisibleDate,n=a.onChangeCurrentVisibleDate,o=a.onDropdownOpen,p=a.dropdownOpen,q=a.ignoreOutsideClicksRefs,r=a.disabled,s=a.inputRef,t=_objectWithoutProperties(a,_excluded),u=getMultiplicityTime(t.format||datePickerPropFormatTypeDateTime,i,j,k),v=_slicedToArray(u,3),w=v[0],x=v[1],y=v[2],z=useRef(null),A=useRef(null),B=useRef(null),C=useCalendarVisible({dropdownOpen:p,onDropdownOpen:o,disabled:r,startRef:B}),D=_slicedToArray(C,2),E=D[0],F=D[1];return useEffect(function(){b&&setRef(b,z.current)},[b,z]),useClickOutside({isActive:E,ignoreClicksInsideRefs:[z,A].concat(_toConsumableArray(null!==q&&void 0!==q?q:[])),handler:F.off}),React.createElement(React.Fragment,null,React.createElement(DatePickerFieldTypeTime,Object.assign({},t,{ref:z,inputRef:useForkRef([B,s]),onClick:F.on,multiplicityHours:w,multiplicitySeconds:y,multiplicityMinutes:x,disabled:r})),React.createElement(DatePickerDropdown,{ref:A,anchorRef:z,isOpen:E,value:a.value||void 0,type:"time",view:e,events:c,locale:f,minDate:a.minDate,maxDate:a.maxDate,form:g,className:h,onChange:a.onChange,renderAdditionalControls:l,multiplicityHours:w,multiplicitySeconds:y,multiplicityMinutes:x,zIndex:getDropdownZIndex(a.style)}))});
//# sourceMappingURL=DatePickerTypeTime.js.map