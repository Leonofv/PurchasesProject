{"version":3,"file":"types.js","names":["dateTimePropViewDefault","datePickerPropType","datePickerPropTypeDefault","datePickerPropDateTimeViewDefault","datePickerErrorTypes","datePickerPropDropdownForm","datePickerPropDropdownFormDefault"],"sources":["../../../../../src/components/DatePicker/types.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport { Locale } from 'date-fns';\n\nimport { DateRange } from '../../utils/types/Date';\nimport { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';\nimport { DateTimePropView, dateTimePropViewDefault } from '../DateTime/helpers';\nimport {\n  TextFieldPropForm,\n  TextFieldPropSize,\n  TextFieldPropStatus,\n  TextFieldPropView,\n} from '../TextField/TextField';\n\nexport const datePickerPropType = [\n  'date',\n  'date-range',\n  'date-time',\n  'date-time-range',\n  'time',\n  'year',\n  'year-range',\n  'month',\n  'month-range',\n] as const;\n\nexport type DatePickerPropType = typeof datePickerPropType[number];\nexport const datePickerPropTypeDefault = datePickerPropType[0];\n\nexport type DatePickerPropDateTimeView = DateTimePropView;\nexport const datePickerPropDateTimeViewDefault = dateTimePropViewDefault;\n\ntype Range = 'date-range' | 'date-time-range' | 'year-range' | 'month-range';\n\nexport const datePickerErrorTypes = [\n  'outOfRange',\n  'invalidInputAttempt',\n  'startDateIsGreaterThanEndDate',\n] as const;\n\nexport type DatePickerPropValue<TYPE extends DatePickerPropType> =\n  | (TYPE extends Range ? DateRange : Date)\n  | null;\n\nexport type DatePickerPropPlaceholder<TYPE> = TYPE extends Range\n  ? [string?, string?] | string\n  : string;\n\nexport type DatePickerPropOnChange<TYPE extends DatePickerPropType> = (\n  value: DatePickerPropValue<TYPE>,\n  props: {\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent> | Event;\n  },\n) => void;\n\nexport const datePickerPropDropdownForm = [\n  'default',\n  'brick',\n  'round',\n] as const;\nexport type DatePickerPropDropdownForm =\n  typeof datePickerPropDropdownForm[number];\nexport const datePickerPropDropdownFormDefault = datePickerPropDropdownForm[0];\n\ntype DatePickerPropInputRef<TYPE> = TYPE extends Range\n  ? [React.Ref<HTMLInputElement>?, React.Ref<HTMLInputElement>?]\n  : React.Ref<HTMLInputElement>;\n\ntype DatePickerPropSide<TYPE> = TYPE extends Range\n  ?\n      | [(string | IconComponent)?, (string | IconComponent)?]\n      | string\n      | IconComponent\n  : string | IconComponent;\n\ntype DatePickerPropOnFocus<TYPE> = TYPE extends Range\n  ?\n      | [\n          React.FocusEventHandler<HTMLElement>?,\n          React.FocusEventHandler<HTMLElement>?,\n        ]\n      | React.FocusEventHandler<HTMLElement>\n  : React.FocusEventHandler<HTMLElement>;\n\ntype DatePickerPropName<TYPE> = TYPE extends Range\n  ? [string?, string?] | string\n  : string;\n\nexport type DatePickerAdditionalControlRenderFn = (props: {\n  currentVisibleDate?: Date;\n}) => React.ReactNode | React.ReactNode[];\n\nexport type DatePickerAdditionalControlRenderProp =\n  | React.ReactNode\n  | DatePickerAdditionalControlRenderFn;\n\nexport type DatePickerProps<TYPE extends DatePickerPropType = 'date'> =\n  PropsWithHTMLAttributesAndRef<\n    {\n      type?: TYPE;\n      value?: DatePickerPropValue<TYPE>;\n      onChange?: DatePickerPropOnChange<TYPE>;\n      minDate?: Date;\n      maxDate?: Date;\n      renderAdditionalControls?: DatePickerAdditionalControlRenderProp;\n      events?: Date[];\n      dateTimeView?: DatePickerPropDateTimeView;\n      locale?: Locale;\n      children?: never;\n      onError?: DatePickerPropOnError;\n      id?: string;\n      name?: DatePickerPropName<TYPE>;\n      disabled?: boolean;\n      dropdownClassName?: string;\n      size?: TextFieldPropSize;\n      view?: TextFieldPropView;\n      form?: TextFieldPropForm;\n      status?: TextFieldPropStatus;\n      onFocus?: DatePickerPropOnFocus<TYPE>;\n      onBlur?: DatePickerPropOnFocus<TYPE>;\n      autoFocus?: boolean;\n      placeholder?: DatePickerPropPlaceholder<TYPE>;\n      readOnly?: boolean;\n      required?: boolean;\n      tabIndex?: number;\n      inputRef?: DatePickerPropInputRef<TYPE>;\n      ariaLabel?: string;\n      iconSize?: IconPropSize;\n      format?: string;\n      separator?: string;\n      dropdownForm?: DatePickerPropDropdownForm;\n      leftSide?: DatePickerPropSide<TYPE>;\n      rightSide?: DatePickerPropSide<TYPE>;\n      label?: string;\n      labelIcon?: IconComponent;\n      caption?: string;\n      labelPosition?: 'top' | 'left';\n      onChangeCurrentVisibleDate?: (date: Date) => void;\n      currentVisibleDate?: Date;\n      multiplicitySeconds?: number;\n      multiplicityMinutes?: number;\n      multiplicityHours?: number;\n      isMobile?: number;\n      withClearButton?: boolean;\n      onDropdownOpen?: (isOpen: boolean) => void;\n      dropdownOpen?: boolean;\n      ignoreOutsideClicksRefs?: ReadonlyArray<React.RefObject<HTMLElement>>;\n    },\n    HTMLDivElement\n  >;\n\nexport type DatePickerComponent = <TYPE extends DatePickerPropType = 'date'>(\n  props: DatePickerProps<TYPE>,\n) => React.ReactElement | null;\n\nexport type DatePickerTypeComponent<TYPE extends DatePickerPropType> = (\n  props: Omit<DatePickerProps<TYPE>, 'type'>,\n) => React.ReactElement | null;\n\nexport type DatePickerPropOnError = (\n  props:\n    | {\n        type: typeof datePickerErrorTypes[0];\n        stringValue: string;\n        dd?: string;\n        MM?: string;\n        yyyy?: string;\n        ss?: string;\n        mm?: string;\n        HH?: string;\n        date: Date;\n      }\n    | {\n        type: typeof datePickerErrorTypes[1];\n        stringValue: string;\n        dd?: string;\n        MM?: string;\n        yyyy?: string;\n        ss?: string;\n        mm?: string;\n        HH?: string;\n      }\n    | {\n        type: typeof datePickerErrorTypes[2];\n        date: [Date, Date];\n      },\n) => void;\n"],"mappings":"AAKA,OAA2BA,uBAA3B,2BAQA,MAAO,IAAMC,mBAAkB,CAAG,CAChC,MADgC,CAEhC,YAFgC,CAGhC,WAHgC,CAIhC,iBAJgC,CAKhC,MALgC,CAMhC,MANgC,CAOhC,YAPgC,CAQhC,OARgC,CAShC,aATgC,CAA3B,CAaP,MAAO,IAAMC,0BAAyB,CAAGD,kBAAkB,CAAC,CAAD,CAApD,CAGP,MAAO,IAAME,kCAAiC,CAAGH,uBAA1C,CAIP,MAAO,IAAMI,qBAAoB,CAAG,CAClC,YADkC,CAElC,qBAFkC,CAGlC,+BAHkC,CAA7B,CAqBP,MAAO,IAAMC,2BAA0B,CAAG,CACxC,SADwC,CAExC,OAFwC,CAGxC,OAHwC,CAAnC,CAOP,MAAO,IAAMC,kCAAiC,CAAGD,0BAA0B,CAAC,CAAD,CAApE"}