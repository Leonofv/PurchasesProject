import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import{addYears,endOfWeek,format,isBefore,isSameDay,isWithinInterval,startOfWeek}from"date-fns";import eachDayOfInterval from"date-fns/eachDayOfInterval";import{isDateRange,isOnlyOneDateInRange}from"../../../utils/date";import{isDefined}from"../../../utils/type-guards";export var dateComparer=function(c,a){var b,d;return(null!==(b=null===c||void 0===c?void 0:c.getTime())&&void 0!==b?b:0)-(null!==(d=null===a||void 0===a?void 0:a.getTime())&&void 0!==d?d:0)};export var getStartAndEndDate=function(a,b){return[a,b].sort(dateComparer)};export var isDateSelected=function(a){var b=a.date,c=a.value;return!!c&&isSameDay(c,b)};export var isValueSelected=function(a){var b=a.date,c=a.value;if(isDateRange(c)){if(c[0]&&c[1]){var d=getStartAndEndDate(c[0],c[1]),e=_slicedToArray(d,2),f=e[0],g=e[1];return isWithinInterval(b,{start:f,end:g})}return isDateSelected({date:b,value:c[0]||c[1]})}return isDateSelected({date:b,value:c})};export var isValueSelectedBackwards=function(a){var b=a.value,c=a.hoveredDate;return c&&isDateRange(b)&&isOnlyOneDateInRange(b)&&(isDefined(b[0])&&isBefore(c,b[0])||isDefined(b[1])&&isBefore(c,b[1]))};export var getMonthTitle=function(a,b){return format(a,"LLLL",{locale:b})};export var getMonthTitleAbbreviated=function(a,b){var c=format(a,"LLL",{locale:b});return"."===c[c.length-1]?c.substr(0,c.length-1):c};export var getYearTitle=function(a){return format(a,"yyyy")};export var getMouthLabelWithYear=function(a,b){return"".concat(getMonthTitle(a,b)," ").concat(a.getFullYear())};export var getDecadeTitle=function(a){return"".concat(getYearTitle(a)," - ").concat(getYearTitle(addYears(a,9)))};export var getLabelHours=function(a){return format(a,"HH")};export var getLabelMinutes=function(a){return format(a,"mm")};export var getLabelSeconds=function(a){return format(a,"ss")};export var getDaysOfWeek=function(a){var b=new Date;return eachDayOfInterval({start:startOfWeek(b,{locale:a}),end:endOfWeek(b,{locale:a})}).map(function(b){return format(b,"EEEEEE",{locale:a})})};var getUnitLabelMap=[getLabelHours,getLabelMinutes,getLabelSeconds];export var getTimeTitle=function(a,b,c,d){return[b,c,d].map(function(b,c){return a?b?"".concat(getUnitLabelMap[c](a),":"):"":b?"--:":""}).join("").slice(0,-1)};export*from"./useCurrentVisibleDate";export*from"./types";export*from"./getDaysOfMonth";export*from"./getYearsOfDecade";export*from"./getHandleSelectDate";export*from"./isEqualDay";export*from"./isEqualYear";export*from"./isEqualMount";export*from"./getMonthsOfYear";
//# sourceMappingURL=index.js.map