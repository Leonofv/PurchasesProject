{"version":3,"file":"formatFileSize.js","names":["getUnits","locale","value","name","gigabyte","megabyte","kilobyte","floorToDecimals","num","decimals","Math","floor","formatFileSize","sizeInBytes","units","step"],"sources":["../../../../../src/components/DragNDropField/formatFileSize.ts"],"sourcesContent":["import { Locale } from './locale';\n\nconst getUnits = (locale: Required<Locale>) => {\n  return [\n    { value: 1024 * 1024 * 1024, name: locale.gigabyte },\n    { value: 1024 * 1024, name: locale.megabyte },\n    { value: 1024, name: locale.kilobyte },\n    { value: 1, name: locale.byte },\n  ];\n};\n\nconst floorToDecimals = (num: number, decimals: number): number =>\n  Math.floor(10 ** decimals * num) / 10 ** decimals;\n\nexport const formatFileSize = (\n  sizeInBytes: number,\n  locale: Required<Locale>,\n): string | undefined => {\n  const units = getUnits(locale);\n  for (const step of units) {\n    if (sizeInBytes >= step.value) {\n      return `${floorToDecimals(sizeInBytes / step.value, 1)} ${step.name}`;\n    }\n  }\n  return undefined;\n};\n"],"mappings":"wpCAEMA,SAAQ,CAAG,SAACC,CAAD,CAA8B,CAC7C,MAAO,CACL,CAAEC,KAAK,WAAP,CAA6BC,IAAI,CAAEF,CAAM,CAACG,QAA1C,CADK,CAEL,CAAEF,KAAK,QAAP,CAAsBC,IAAI,CAAEF,CAAM,CAACI,QAAnC,CAFK,CAGL,CAAEH,KAAK,CAAE,IAAT,CAAeC,IAAI,CAAEF,CAAM,CAACK,QAA5B,CAHK,CAIL,CAAEJ,KAAK,CAAE,CAAT,CAAYC,IAAI,CAAEF,CAAM,KAAxB,CAJK,CAMR,C,CAEKM,eAAe,CAAG,SAACC,CAAD,CAAcC,CAAd,QACtBC,KAAI,CAACC,KAAL,CAAW,YAAMF,CAAN,EAAiBD,CAA5B,WAAmC,EAAnC,CAAyCC,CAAzC,CADsB,C,CAGxB,MAAO,IAAMG,eAAc,CAAG,SAC5BC,CAD4B,CAE5BZ,CAF4B,CAGL,OACjBa,CAAK,CAAGd,QAAQ,CAACC,CAAD,CADC,8BAEJa,CAFI,MAEvB,2BAA0B,IAAfC,EAAe,SACxB,GAAIF,CAAW,EAAIE,CAAI,CAACb,KAAxB,CACE,gBAAUK,eAAe,CAACM,CAAW,CAAGE,CAAI,CAACb,KAApB,CAA2B,CAA3B,CAAzB,aAA0Da,CAAI,CAACZ,IAA/D,CAEH,CANsB,+BAQxB,CAXM"}