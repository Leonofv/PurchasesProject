{"version":3,"file":"getErrorsList.js","names":["isNotNil","isString","defaultFileSizes","maxSize","minSize","NO_MESSAGE","getErrorMessage","error","file","sizes","locale","code","message","name","getErrorsList","fileRejections","errorsList","tooManyFilesErrorsCount","rejection","errors","push","unshift","find","text","list","filter"],"sources":["../../../../../src/components/DragNDropField/getErrorsList.ts"],"sourcesContent":["import { FileRejection } from 'react-dropzone';\n\nimport { isNotNil, isString } from '../../utils/type-guards';\nimport { DragNDropFieldPropLocale, FileError, FileSizes } from './types';\n\nconst defaultFileSizes: FileSizes = {\n  maxSize: 1024 * 1024 * 1024,\n  minSize: 1,\n};\n\nconst NO_MESSAGE = 'no-message';\n\nconst getErrorMessage = (\n  error: FileRejection['errors'][number],\n  file: File | undefined,\n  sizes: FileSizes,\n  locale: DragNDropFieldPropLocale,\n): string => {\n  const { code } = error as FileError;\n\n  const message = locale[code];\n\n  if (!isNotNil(message)) {\n    return file ? `${file.name}: ${locale['general-error']}` : NO_MESSAGE;\n  }\n\n  if (file) {\n    return isString(message) ? message : message({ file, sizes });\n  }\n\n  return isString(message) ? message : NO_MESSAGE;\n};\n\nexport const getErrorsList = (\n  fileRejections: FileRejection[],\n  sizes: FileSizes | undefined = defaultFileSizes,\n  locale: Required<DragNDropFieldPropLocale>,\n): string[] => {\n  const errorsList: string[] = [];\n  let tooManyFilesErrorsCount = 0;\n\n  for (const rejection of fileRejections) {\n    for (const error of rejection.errors) {\n      if (error.code === 'too-many-files') {\n        tooManyFilesErrorsCount++;\n      } else {\n        errorsList.push(getErrorMessage(error, rejection.file, sizes, locale));\n      }\n    }\n  }\n\n  if (tooManyFilesErrorsCount) {\n    errorsList.unshift(\n      getErrorMessage(\n        { code: 'too-many-files', message: '' },\n        undefined,\n        sizes,\n        locale,\n      ),\n    );\n  }\n\n  if (isNotNil(errorsList.find((text) => text === NO_MESSAGE))) {\n    const list = errorsList.filter((text) => text !== NO_MESSAGE);\n\n    list.unshift(locale['general-error']);\n    return list;\n  }\n\n  return errorsList;\n};\n"],"mappings":"qpCAEA,OAASA,QAAT,CAAmBC,QAAnB,+B,GAGMC,iBAA2B,CAAG,CAClCC,OAAO,WAD2B,CAElCC,OAAO,CAAE,CAFyB,C,CAK9BC,UAAU,CAAG,Y,CAEbC,eAAe,CAAG,SACtBC,CADsB,CAEtBC,CAFsB,CAGtBC,CAHsB,CAItBC,CAJsB,CAKX,IACHC,EADG,CACMJ,CADN,CACHI,IADG,CAGLC,CAAO,CAAGF,CAAM,CAACC,CAAD,CAHX,OAKNX,SAAQ,CAACY,CAAD,CALF,CASPJ,CATO,CAUFP,QAAQ,CAACW,CAAD,CAAR,CAAoBA,CAApB,CAA8BA,CAAO,CAAC,CAAEJ,IAAI,CAAJA,CAAF,CAAQC,KAAK,CAALA,CAAR,CAAD,CAVnC,CAaJR,QAAQ,CAACW,CAAD,CAAR,CAAoBA,CAApB,CAA8BP,UAb1B,CAMFG,CAAI,WAAMA,CAAI,CAACK,IAAX,cAAoBH,CAAM,CAAC,eAAD,CAA1B,EAAgDL,UAQ9D,C,CAED,MAAO,IAAMS,cAAa,CAAG,SAC3BC,CAD2B,CAId,OAFbN,CAEa,wDAFkBP,gBAElB,CADbQ,CACa,wCACPM,CAAoB,CAAG,EADhB,CAETC,CAAuB,CAAG,CAFjB,8BAIWF,CAJX,MAIb,2BAAwC,OAA7BG,CAA6B,sCAClBA,CAAS,CAACC,MADQ,MACtC,2BAAsC,IAA3BZ,EAA2B,SACjB,gBAAf,GAAAA,CAAK,CAACI,IAD0B,CAElCM,CAAuB,EAFW,CAIlCD,CAAU,CAACI,IAAX,CAAgBd,eAAe,CAACC,CAAD,CAAQW,CAAS,CAACV,IAAlB,CAAwBC,CAAxB,CAA+BC,CAA/B,CAA/B,CAEH,CAPqC,+BAQvC,CAZY,+BAyBb,GAXIO,CAWJ,EAVED,CAAU,CAACK,OAAX,CACEf,eAAe,CACb,CAAEK,IAAI,CAAE,gBAAR,CAA0BC,OAAO,CAAE,EAAnC,CADa,QAGbH,CAHa,CAIbC,CAJa,CADjB,CAUF,CAAIV,QAAQ,CAACgB,CAAU,CAACM,IAAX,CAAgB,SAACC,CAAD,QAAUA,EAAI,GAAKlB,UAAnB,CAAhB,CAAD,CAAZ,CAA8D,CAC5D,GAAMmB,EAAI,CAAGR,CAAU,CAACS,MAAX,CAAkB,SAACF,CAAD,QAAUA,EAAI,GAAKlB,UAAnB,CAAlB,CAAb,CAGA,MADAmB,EAAI,CAACH,OAAL,CAAaX,CAAM,CAAC,eAAD,CAAnB,CACA,CAAOc,CACR,CAED,MAAOR,EACR,CArCM"}