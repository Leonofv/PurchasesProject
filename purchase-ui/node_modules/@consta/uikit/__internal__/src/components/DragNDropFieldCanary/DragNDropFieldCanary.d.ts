import './DragNDropField.css';
import React from 'react';
export declare const DragNDropField: React.ForwardRefExoticComponent<{
    accept?: import("react-dropzone").Accept | undefined;
    maxSize?: number | undefined;
    minSize?: number | undefined;
    maxFiles?: number | undefined;
    multiple?: boolean | undefined;
    disabled?: boolean | undefined;
    children?: React.ReactNode | import("./types").DragNDropFieldChildrenRenderFn;
    locale?: import("./types").DragNDropFieldPropLocale | undefined;
    onDrop?: (<T extends File>(acceptedFiles: T[], fileRejections: import("react-dropzone").FileRejection[], event: import("react-dropzone").DropEvent) => void) | undefined;
    onDropAccepted?: (<T_1 extends File>(files: T_1[]) => void) | undefined;
    onDropRejected?: ((fileRejections: import("react-dropzone").FileRejection[], event: import("react-dropzone").DropEvent) => void) | undefined;
    onError?: ((err: Error) => void) | undefined;
} & Omit<React.HTMLAttributes<HTMLDivElement>, "children" | "onError" | "onDrop" | "disabled" | "accept" | "multiple" | "css" | "locale" | "maxSize" | "minSize" | "maxFiles" | "onDropAccepted" | "onDropRejected"> & React.RefAttributes<HTMLDivElement>>;
export * from './types';
