{"version":3,"file":"getErrorsList.js","names":["ErrorCode","isNotNil","isString","withDefaultLocale","NO_MESSAGE","getErrorMessage","error","file","locale","sizes","code","message","Object","values","includes","name","getErrorsList","fileRejections","errorsList","tooManyFilesErrorsCount","localeWithDefault","rejection","errors","push","unshift","find","text","list","filter"],"sources":["../../../../../src/components/DragNDropFieldCanary/getErrorsList.ts"],"sourcesContent":["import { ErrorCode, FileError, FileRejection } from 'react-dropzone';\n\nimport { isNotNil, isString } from '##/utils/type-guards';\n\nimport { withDefaultLocale } from './locale';\nimport { DragNDropFieldPropLocale, FileSizes } from './types';\n\nconst NO_MESSAGE = 'no-message';\n\nconst getErrorMessage = (\n  error: FileRejection['errors'][number],\n  file: File | undefined,\n  locale: DragNDropFieldPropLocale,\n  sizes?: FileSizes,\n): string => {\n  const { code } = error as FileError;\n\n  const message = (Object.values(ErrorCode) as string[]).includes(code)\n    ? locale[code as ErrorCode]\n    : locale['general-error'];\n\n  if (!isNotNil(message)) {\n    return file ? `${file.name}: ${locale['general-error']}` : NO_MESSAGE;\n  }\n\n  if (file) {\n    return isString(message) ? message : message({ file, sizes });\n  }\n\n  return isString(message) ? message : NO_MESSAGE;\n};\n\nexport const getErrorsList = (\n  fileRejections: FileRejection[],\n  locale?: DragNDropFieldPropLocale,\n  sizes?: FileSizes,\n): string[] => {\n  const errorsList: string[] = [];\n  let tooManyFilesErrorsCount = 0;\n\n  const localeWithDefault = withDefaultLocale(locale);\n\n  for (const rejection of fileRejections) {\n    for (const error of rejection.errors) {\n      if (error.code === 'too-many-files') {\n        tooManyFilesErrorsCount++;\n      } else {\n        errorsList.push(\n          getErrorMessage(error, rejection.file, localeWithDefault, sizes),\n        );\n      }\n    }\n  }\n\n  if (tooManyFilesErrorsCount) {\n    errorsList.unshift(\n      getErrorMessage(\n        { code: 'too-many-files', message: '' },\n        undefined,\n        localeWithDefault,\n        sizes,\n      ),\n    );\n  }\n  if (isNotNil(errorsList.find((text) => text === NO_MESSAGE))) {\n    const list = errorsList.filter((text) => text !== NO_MESSAGE);\n\n    list.unshift(localeWithDefault['general-error']);\n    return list;\n  }\n\n  return errorsList;\n};\n"],"mappings":"qpCAAA,OAASA,SAAT,KAAoD,gBAApD,CAEA,OAASC,QAAT,CAAmBC,QAAnB,+BAEA,OAASC,iBAAT,gB,GAGMC,WAAU,CAAG,Y,CAEbC,eAAe,CAAG,SACtBC,CADsB,CAEtBC,CAFsB,CAGtBC,CAHsB,CAItBC,CAJsB,CAKX,IACHC,EADG,CACMJ,CADN,CACHI,IADG,CAGLC,CAAO,CAAIC,MAAM,CAACC,MAAP,CAAcb,SAAd,CAAD,CAAuCc,QAAvC,CAAgDJ,CAAhD,EACZF,CAAM,CAACE,CAAD,CADM,CAEZF,CAAM,CAAC,eAAD,CALC,OAONP,SAAQ,CAACU,CAAD,CAPF,CAWPJ,CAXO,CAYFL,QAAQ,CAACS,CAAD,CAAR,CAAoBA,CAApB,CAA8BA,CAAO,CAAC,CAAEJ,IAAI,CAAJA,CAAF,CAAQE,KAAK,CAALA,CAAR,CAAD,CAZnC,CAeJP,QAAQ,CAACS,CAAD,CAAR,CAAoBA,CAApB,CAA8BP,UAf1B,CAQFG,CAAI,WAAMA,CAAI,CAACQ,IAAX,cAAoBP,CAAM,CAAC,eAAD,CAA1B,EAAgDJ,UAQ9D,C,CAED,MAAO,IAAMY,cAAa,CAAG,SAC3BC,CAD2B,CAE3BT,CAF2B,CAG3BC,CAH2B,CAId,OACPS,CAAoB,CAAG,EADhB,CAETC,CAAuB,CAAG,CAFjB,CAIPC,CAAiB,CAAGjB,iBAAiB,CAACK,CAAD,CAJ9B,8BAMWS,CANX,MAMb,2BAAwC,OAA7BI,CAA6B,sCAClBA,CAAS,CAACC,MADQ,MACtC,2BAAsC,IAA3BhB,EAA2B,SACjB,gBAAf,GAAAA,CAAK,CAACI,IAD0B,CAElCS,CAAuB,EAFW,CAIlCD,CAAU,CAACK,IAAX,CACElB,eAAe,CAACC,CAAD,CAAQe,CAAS,CAACd,IAAlB,CAAwBa,CAAxB,CAA2CX,CAA3C,CADjB,CAIH,CATqC,+BAUvC,CAhBY,+BA4Bb,GAVIU,CAUJ,EATED,CAAU,CAACM,OAAX,CACEnB,eAAe,CACb,CAAEK,IAAI,CAAE,gBAAR,CAA0BC,OAAO,CAAE,EAAnC,CADa,QAGbS,CAHa,CAIbX,CAJa,CADjB,CASF,CAAIR,QAAQ,CAACiB,CAAU,CAACO,IAAX,CAAgB,SAACC,CAAD,QAAUA,EAAI,GAAKtB,UAAnB,CAAhB,CAAD,CAAZ,CAA8D,CAC5D,GAAMuB,EAAI,CAAGT,CAAU,CAACU,MAAX,CAAkB,SAACF,CAAD,QAAUA,EAAI,GAAKtB,UAAnB,CAAlB,CAAb,CAGA,MADAuB,EAAI,CAACH,OAAL,CAAaJ,CAAiB,CAAC,eAAD,CAA9B,CACA,CAAOO,CACR,CAED,MAAOT,EACR,CAxCM"}