import React from 'react';
import { eventInterceptorMap } from './eventInterceptorMap';
import { EventInterceptorComponentName } from './types';
export declare type EventInterceptorMap = typeof eventInterceptorMap;
export declare type EventInterceptorProps = {
    component: EventInterceptorComponentName;
    event?: string;
    options: {
        [key: string]: any;
    };
};
export declare type EventInterceptorHandler = ((props: EventInterceptorProps) => void) | undefined;
declare const EventInterceptorContext: React.Context<{
    eventHandler: EventInterceptorHandler;
    map: EventInterceptorMap;
} | undefined>;
declare const EventInterceptorProvider: ({ children, eventHandler, map, }: {
    children: React.ReactNode;
    eventHandler: EventInterceptorHandler;
    map: EventInterceptorMap;
}) => JSX.Element;
export { EventInterceptorContext, EventInterceptorProvider };
export * from './eventInterceptorMap';
