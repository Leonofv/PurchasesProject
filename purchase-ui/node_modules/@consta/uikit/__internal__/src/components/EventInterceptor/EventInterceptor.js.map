{"version":3,"file":"EventInterceptor.js","names":["React","EventInterceptorContext","createContext","EventInterceptorProvider","children","eventHandler","map"],"sources":["../../../../../src/components/EventInterceptor/EventInterceptor.tsx"],"sourcesContent":["import React from 'react';\n\nimport { eventInterceptorMap } from './eventInterceptorMap';\nimport { EventInterceptorComponentName } from './types';\n\nexport type EventInterceptorMap = typeof eventInterceptorMap;\n\nexport type EventInterceptorProps = {\n  component: EventInterceptorComponentName;\n  event?: string;\n  options: {\n    [key: string]: any;\n  };\n};\n\nexport type EventInterceptorHandler =\n  | ((props: EventInterceptorProps) => void)\n  | undefined;\n\n// eslint-disable-next-line @typescript-eslint/no-empty-function\nconst EventInterceptorContext = React.createContext<\n  | { eventHandler: EventInterceptorHandler; map: EventInterceptorMap }\n  | undefined\n>(undefined);\n\nconst EventInterceptorProvider = ({\n  children,\n  eventHandler,\n  map,\n}: {\n  children: React.ReactNode;\n  eventHandler: EventInterceptorHandler;\n  map: EventInterceptorMap;\n}) => {\n  return (\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    <EventInterceptorContext.Provider value={{ eventHandler, map }}>\n      {children}\n    </EventInterceptorContext.Provider>\n  );\n};\n\nexport { EventInterceptorContext, EventInterceptorProvider };\nexport * from './eventInterceptorMap';\n"],"mappings":"AAAA,MAAOA,MAAP,KAAkB,OAAlB,C,GAoBMC,wBAAuB,CAAGD,KAAK,CAACE,aAAN,Q,CAK1BC,wBAAwB,CAAG,WAQ3B,IAPJC,EAOI,GAPJA,QAOI,CANJC,CAMI,GANJA,YAMI,CALJC,CAKI,GALJA,GAKI,CACJ,MAEE,qBAAC,uBAAD,CAAyB,QAAzB,EAAkC,KAAK,CAAE,CAAED,YAAY,CAAZA,CAAF,CAAgBC,GAAG,CAAHA,CAAhB,CAAzC,EACGF,CADH,CAIH,C,CAED,OAASH,uBAAT,CAAkCE,wBAAlC,EACA"}