{"version":3,"file":"useButtonEventHandler.js","names":["useButtonEventHandler","props","handler","ref","newProps","onClick","onClickArgs","e","value","component","event","type","options","text","currentTarget","innerText","pageURL","baseURI","DOMRef","current"],"sources":["../../../../../../src/components/EventInterceptor/propsHandlers/useButtonEventHandler.tsx"],"sourcesContent":["import React from 'react';\n\nimport { Props } from '../../Button/Button';\nimport { EventInterceptorHandler } from '../EventInterceptor';\n\nexport type ButtonProps = Props;\n\nexport const useButtonEventHandler = <T extends ButtonProps>(\n  props: T,\n  handler: EventInterceptorHandler,\n  ref: React.RefObject<HTMLElement>,\n): T => {\n  const newProps: T = { ...props };\n\n  newProps.onClick = (...onClickArgs) => {\n    const [e] = onClickArgs;\n    const value = {\n      component: 'Button' as const,\n      event: e.type,\n      options: {\n        text: (e.currentTarget as HTMLButtonElement).innerText,\n        pageURL: e.currentTarget.baseURI,\n        DOMRef: ref.current,\n        props: newProps,\n      },\n    };\n    handler!(value);\n\n    return props.onClick?.(...onClickArgs);\n  };\n\n  return newProps;\n};\n"],"mappings":"qqBAOA,MAAO,IAAMA,sBAAqB,CAAG,SACnCC,CADmC,CAEnCC,CAFmC,CAGnCC,CAHmC,CAI7B,CACN,GAAMC,EAAW,kBAAQH,CAAR,CAAjB,CAmBA,MAjBAG,EAAQ,CAACC,OAAT,CAAmB,UAAoB,8BAAhBC,CAAgB,sBAAhBA,CAAgB,oBAC9BC,EAD8B,CACzBD,CADyB,IAE/BE,CAAK,CAAG,CACZC,SAAS,CAAE,QADC,CAEZC,KAAK,CAAEH,CAAC,CAACI,IAFG,CAGZC,OAAO,CAAE,CACPC,IAAI,CAAGN,CAAC,CAACO,aAAH,CAAuCC,SADtC,CAEPC,OAAO,CAAET,CAAC,CAACO,aAAF,CAAgBG,OAFlB,CAGPC,MAAM,CAAEf,CAAG,CAACgB,OAHL,CAIPlB,KAAK,CAAEG,CAJA,CAHG,CAFuB,CAcrC,MAFAF,EAAO,CAAEM,CAAF,CAEP,WAAOP,CAAK,CAACI,OAAb,qBAAO,gBAAAJ,CAAK,QAAL,CAAmBK,CAAnB,EACR,CAED,CAAOF,CACR,CAzBM"}