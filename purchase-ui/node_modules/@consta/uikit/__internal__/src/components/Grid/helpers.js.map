{"version":3,"file":"helpers.js","names":["useBreakpoints","isEmpty","isNotNil","normalizeGap","gap","alignMap","left","top","center","right","bottom","normalizeAlign","align","calculateBreakpoints","breakpoints","activeBreakpoints","retuned","key","Object","prototype","hasOwnProperty","call","useGridBreakpoints","ref","keys","map","fromEntries","item","filter","isActive","length"],"sources":["../../../../../src/components/Grid/helpers.ts"],"sourcesContent":["import React from 'react';\n\nimport { useBreakpoints } from '##/hooks/useBreakpoints';\nimport { isEmpty } from '##/utils/object';\nimport { isNotNil } from '##/utils/type-guards';\n\nimport { GridPropGap, GridPropXAlign, GridPropYAlign } from './types';\n\nexport const normalizeGap = (gap: GridPropGap | undefined) => {\n  if (typeof gap === 'string') {\n    return `var(--space-${gap})`;\n  }\n\n  return gap;\n};\n\nconst alignMap = {\n  left: 'start',\n  top: 'start',\n  center: 'center',\n  right: 'end',\n  bottom: 'end',\n} as const;\n\nexport const normalizeAlign = (\n  align: GridPropXAlign | GridPropYAlign | undefined,\n) => (align ? alignMap[align] : undefined);\n\nconst calculateBreakpoints = <T extends {}>(\n  breakpoints: Record<string, T>,\n  activeBreakpoints: Record<string, boolean>,\n) => {\n  let retuned = {} as T;\n  for (const key in activeBreakpoints) {\n    if (\n      Object.prototype.hasOwnProperty.call(activeBreakpoints, key) &&\n      activeBreakpoints[key]\n    ) {\n      retuned = { ...retuned, ...breakpoints[key] };\n    } else {\n      break;\n    }\n  }\n\n  return retuned;\n};\n\nexport const useGridBreakpoints = <T extends {}>(\n  breakpoints: Record<string, T>,\n  ref?: React.RefObject<HTMLElement>,\n) => {\n  const keys = Object.keys(breakpoints);\n\n  const map = Object.fromEntries(\n    keys\n      .map((item) => {\n        return isEmpty(breakpoints[item])\n          ? undefined\n          : ([item, Number(item)] as const);\n      })\n      .filter(isNotNil),\n  );\n\n  const activeBreakpoints = useBreakpoints({\n    map,\n    ref,\n    isActive: keys.length > 1,\n  });\n\n  return calculateBreakpoints(breakpoints, activeBreakpoints);\n};\n"],"mappings":"qqBAEA,OAASA,cAAT,kCACA,OAASC,OAAT,0BACA,OAASC,QAAT,+BAIA,MAAO,IAAMC,aAAY,CAAG,SAACC,CAAD,CAAkC,OACzC,QAAf,QAAOA,EADiD,uBAEpCA,CAFoC,MAKrDA,CACR,CANM,CAQP,GAAMC,SAAQ,CAAG,CACfC,IAAI,CAAE,OADS,CAEfC,GAAG,CAAE,OAFU,CAGfC,MAAM,CAAE,QAHO,CAIfC,KAAK,CAAE,KAJQ,CAKfC,MAAM,CAAE,KALO,CAAjB,CAQA,MAAO,IAAMC,eAAc,CAAG,SAC5BC,CAD4B,QAExBA,EAAK,CAAGP,QAAQ,CAACO,CAAD,CAAX,OAFmB,CAAvB,CAIP,GAAMC,qBAAoB,CAAG,SAC3BC,CAD2B,CAE3BC,CAF2B,CAGxB,CACH,GAAIC,EAAO,CAAG,EAAd,CACA,IAAK,GAAMC,EAAX,GAAkBF,EAAlB,CACE,GACEG,MAAM,CAACC,SAAP,CAAiBC,cAAjB,CAAgCC,IAAhC,CAAqCN,CAArC,CAAwDE,CAAxD,GACAF,CAAiB,CAACE,CAAD,CAFnB,CAIED,CAAO,gCAAQA,CAAR,EAAoBF,CAAW,CAACG,CAAD,CAA/B,CAJT,KAME,OAIJ,MAAOD,EACR,CAjBD,CAmBA,MAAO,IAAMM,mBAAkB,CAAG,SAChCR,CADgC,CAEhCS,CAFgC,CAG7B,IACGC,EAAI,CAAGN,MAAM,CAACM,IAAP,CAAYV,CAAZ,CADV,CAGGW,CAAG,CAAGP,MAAM,CAACQ,WAAP,CACVF,CAAI,CACDC,GADH,CACO,SAACE,CAAD,CAAU,CACb,MAAO1B,QAAO,CAACa,CAAW,CAACa,CAAD,CAAZ,CAAP,QAEF,CAACA,CAAD,EAAcA,CAAd,CACN,CALH,EAMGC,MANH,CAMU1B,QANV,CADU,CAHT,CAaGa,CAAiB,CAAGf,cAAc,CAAC,CACvCyB,GAAG,CAAHA,CADuC,CAEvCF,GAAG,CAAHA,CAFuC,CAGvCM,QAAQ,CAAgB,CAAd,CAAAL,CAAI,CAACM,MAHwB,CAAD,CAbrC,CAmBH,MAAOjB,qBAAoB,CAACC,CAAD,CAAcC,CAAd,CAC5B,CAvBM"}