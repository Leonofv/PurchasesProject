/// <reference types="react" />
export declare const gridPropXAlign: readonly ["left", "center", "right"];
export declare type GridPropXAlign = typeof gridPropXAlign[number];
export declare const gridPropYAlign: readonly ["top", "center", "bottom"];
export declare type GridPropYAlign = typeof gridPropYAlign[number];
export declare const gridPropGap: readonly [0, "2xs", "xs", "s", "m", "l", "xl", "2xl", "3xl", "4xl", "5xl", "6xl"];
export declare type GridPropGap = typeof gridPropGap[number];
export declare const breakpointSizes: readonly ["xs", "s", "m", "l", "xl", "2xl"];
export declare type BreakpointSizes = typeof breakpointSizes[number];
declare type GridBreakpoint = {
    cols?: number;
    gap?: GridPropGap;
    colGap?: GridPropGap;
    rowGap?: GridPropGap;
    xAlign?: GridPropXAlign;
    yAlign?: GridPropYAlign;
};
export declare type GridPropBreakpoints = Record<number, GridBreakpoint>;
export declare type GridProps = GridBreakpoint & {
    breakpoints?: GridPropBreakpoints;
    breakpointsForRef?: React.RefObject<HTMLElement>;
};
declare type GridItemBreakpoint = {
    col?: number;
    colStart?: number;
    row?: number;
    rowStart?: number;
    order?: 0 | 1 | -1;
};
export declare type GridItemPropBreakpoints = Record<number, GridItemBreakpoint>;
export declare type GridItemProps = GridItemBreakpoint & {
    breakpoints?: GridItemPropBreakpoints;
    breakpointsForRef?: React.RefObject<HTMLElement>;
};
export {};
