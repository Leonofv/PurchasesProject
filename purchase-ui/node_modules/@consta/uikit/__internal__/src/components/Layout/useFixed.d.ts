import React from 'react';
export declare type UseFixedData = {
    top?: number;
    left?: number;
    width?: number;
    height?: number;
    maxWidth?: number;
    maxHeight?: number;
    position?: 'unset' | 'fixed';
};
declare const verticalAlign: readonly ["top", "bottom"];
declare type VerticalAlign = typeof verticalAlign[number];
declare const horizontalAlign: readonly ["left", "right"];
declare type HorizontalAlign = typeof horizontalAlign[number];
declare type UseFixed = (layoutRef?: React.RefObject<HTMLElement> | null, scrollContainer?: React.RefObject<HTMLElement> | null | HTMLElement | Window, anchorRef?: React.RefObject<HTMLElement> | null, verticalAlign?: VerticalAlign, horizontalAlign?: HorizontalAlign) => UseFixedData;
export declare type ElementStationing = {
    offsetTop: number;
    offsetHeight: number;
    offsetLeft: number;
    offsetWidth: number;
    clientHeight: number;
    clientWidth: number;
    scrollTop: number;
    scrollHeight: number;
};
declare type PositioningElement = (startScroll?: number, layoutStationing?: ElementStationing, scrollContainerStationing?: ElementStationing, anchorStationing?: ElementStationing, verticalAlign?: VerticalAlign, horizontalAlign?: HorizontalAlign) => UseFixedData;
export declare const positioningElement: PositioningElement;
export declare const useFixed: UseFixed;
export {};
