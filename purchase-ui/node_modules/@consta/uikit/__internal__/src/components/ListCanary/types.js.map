{"version":3,"file":"types.js","names":["listPropSize","defaultListPropSize","listPropInnerOffset","defaultListPropInnerOffset","listPropStatus","listPropForm","defaultListPropForm"],"sources":["../../../../../src/components/ListCanary/types.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { MixSpaceProps } from '##/mixs/MixSpace';\nimport { Group } from '##/utils/getGroups';\nimport { AsAttributes, AsTags } from '##/utils/types/AsTags';\nimport { PropsWithAsAttributes } from '##/utils/types/PropsWithAsAttributes';\nimport { PropsWithHTMLAttributesAndRef } from '##/utils/types/PropsWithHTMLAttributes';\n\nexport const listPropSize = ['m', 'xs', 's', 'l'] as const;\nexport type ListPropSize = typeof listPropSize[number];\nexport const defaultListPropSize = listPropSize[0];\n\nexport const listPropInnerOffset = ['normal', 'increased'] as const;\nexport type ListPropInnerOffset = typeof listPropInnerOffset[number];\nexport const defaultListPropInnerOffset = listPropInnerOffset[0];\n\nexport const listPropStatus = ['alert', 'success', 'warning'] as const;\nexport type ListPropStatus = typeof listPropStatus[number];\n\nexport const listPropForm = ['default', 'brick', 'round'] as const;\nexport type ListPropForm = typeof listPropForm[number];\nexport const defaultListPropForm = listPropForm[0];\n\nexport type DefaultListGroup = {\n  id: string | number;\n  label?: string;\n  rightSide?: React.ReactNode;\n};\n\nexport type DefaultListItem = {\n  label: React.ReactNode;\n  disabled?: boolean;\n  active?: boolean;\n  checked?: boolean;\n  status?: ListPropStatus;\n  groupId?: string | number;\n  leftSide?: React.ReactNode;\n  leftIcon?: IconComponent;\n  rightSide?: React.ReactNode;\n  rightIcon?: IconComponent;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type ListPropOnItemClick<ITEM> = (\n  item: ITEM,\n  params: {\n    e: React.MouseEvent;\n    item: ITEM;\n  },\n) => void;\n\nexport type ListPropRenderItem<ITEM> = (\n  item: ITEM,\n) => React.ReactElement | null;\n\n// ITEMS\n\nexport type ListPropGetItemLabel<ITEM> = (item: ITEM) => React.ReactNode;\n\nexport type ListPropGetItemAdditionalClassName<ITEM> = (item: ITEM) => string;\n\nexport type ListPropGetItemDisabled<ITEM> = (item: ITEM) => boolean | undefined;\n\nexport type ListPropGetItemActive<ITEM> = (item: ITEM) => boolean | undefined;\n\nexport type ListPropGetItemChecked<ITEM> = (item: ITEM) => boolean | undefined;\n\nexport type ListPropGetItemStatus<ITEM> = (\n  item: ITEM,\n) => ListPropStatus | undefined;\n\nexport type ListPropGetItemGroupId<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\n\nexport type ListPropGetItemLeftSide<ITEM> = (\n  item: ITEM,\n) => React.ReactNode | undefined;\n\nexport type ListPropGetItemLeftIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\n\nexport type ListPropGetItemRightSide<ITEM> = (\n  item: ITEM,\n) => React.ReactNode | undefined;\n\nexport type ListPropGetItemRightIcon<ITEM> = (\n  item: ITEM,\n) => IconComponent | undefined;\n\nexport type ListPropGetItemAs<ITEM> = (item: ITEM) => AsTags | undefined;\n\nexport type ListPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => AsAttributes | undefined;\n\nexport type ListPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => React.MouseEventHandler | undefined;\n\nexport type ListPropSortGroup<ITEM, GROUP> = (\n  a: Group<ITEM, GROUP>,\n  b: Group<ITEM, GROUP>,\n) => number;\n\n// GROUPS\nexport type ListPropGetGroupKey<GROUP> = (item: GROUP) => string | number;\nexport type ListPropGetGroupAdditionalClassName<GROUP> = (\n  item: GROUP,\n) => string;\n\nexport type ListPropGetGroupLabel<GROUP> = (item: GROUP) => string | undefined;\nexport type ListPropGetGroupRightSide<GROUP> = (\n  item: GROUP,\n) => React.ReactNode | undefined;\n\nexport type ListPropGetItemRef<ITEM> = (\n  item: ITEM,\n) => React.RefObject<HTMLElement> | undefined;\n\nexport type ListProps<ITEM = DefaultListItem, GROUP = DefaultListGroup> = {\n  size?: ListPropSize;\n  items: ITEM[];\n  innerOffset?: ListPropInnerOffset;\n  itemSpase?: MixSpaceProps;\n  groupLabelSpase?: MixSpaceProps;\n  dividerSpase?: MixSpaceProps;\n  onItemClick?: ListPropOnItemClick<ITEM>;\n  getItemLabel?: ListPropGetItemLabel<ITEM>;\n  getItemDisabled?: ListPropGetItemDisabled<ITEM>;\n  getItemActive?: ListPropGetItemActive<ITEM>;\n  getItemChecked?: ListPropGetItemActive<ITEM>;\n  getItemLeftSide?: ListPropGetItemLeftSide<ITEM>;\n  getItemLeftIcon?: ListPropGetItemLeftIcon<ITEM>;\n  getItemRightSide?: ListPropGetItemRightSide<ITEM>;\n  getItemRightIcon?: ListPropGetItemRightIcon<ITEM>;\n  getItemGroupKey?: ListPropGetItemGroupId<ITEM>;\n  getItemOnClick?: ListPropGetItemOnClick<ITEM>;\n  getItemStatus?: ListPropGetItemStatus<ITEM>;\n  getItemAs?: ListPropGetItemAs<ITEM>;\n  getItemAttributes?: ListPropGetItemAttributes<ITEM>;\n  getItemRef?: ListPropGetItemRef<ITEM>;\n  getItemAdditionalClassName?: ListPropGetItemAdditionalClassName<ITEM>;\n  renderItem?: ListPropRenderItem<ITEM>;\n  groups?: GROUP[];\n  getGroupKey?: ListPropGetGroupKey<GROUP>;\n  getGroupLabel?: ListPropGetGroupLabel<GROUP>;\n  getGroupRightSide?: ListPropGetGroupRightSide<GROUP>;\n  sortGroup?: ListPropSortGroup<ITEM, GROUP>;\n  getGroupAdditionalClassName?: ListPropGetGroupAdditionalClassName<GROUP>;\n  disabled?: boolean;\n} & (ITEM extends { label: DefaultListItem['label'] }\n  ? {}\n  : { getItemLabel: ListPropGetItemLabel<ITEM> }) &\n  (GROUP extends { id: DefaultListGroup['id'] }\n    ? {}\n    : { getGroupKey: ListPropGetGroupKey<GROUP> });\n\nexport type ListComponent = <ITEM = DefaultListItem, GROUP = DefaultListGroup>(\n  props: ListProps<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nexport type ListItemProps<AS extends AsTags = 'div'> = PropsWithAsAttributes<\n  Omit<DefaultListItem, 'id' | 'groupId' | 'attributes' | 'onClick'> & {\n    size?: ListPropSize;\n    innerOffset?: 'normal' | 'increased';\n    space?: MixSpaceProps;\n    iconSize?: IconPropSize;\n  },\n  AS\n>;\n\nexport type ListItemComponent = <AS extends AsTags = 'div'>(\n  props: ListItemProps<AS>,\n) => React.ReactElement | null;\n\nexport type ListGroupLabelProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    label: string;\n    innerOffset?: ListPropInnerOffset;\n    rightSide?: React.ReactNode;\n    space?: MixSpaceProps;\n  },\n  HTMLDivElement\n>;\n\nexport type ListDividerProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    innerOffset?: ListPropInnerOffset;\n    space?: MixSpaceProps;\n  },\n  HTMLDivElement\n>;\n\nexport type ListBoxProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    form?: ListPropForm;\n    border?: boolean;\n    shadow?: boolean;\n  },\n  HTMLDivElement\n>;\n\nexport type ListAddItemProps = PropsWithHTMLAttributesAndRef<\n  {\n    size?: ListPropSize;\n    label: React.ReactNode;\n    innerOffset?: ListPropInnerOffset;\n    active?: boolean;\n    underLine?: boolean;\n  },\n  HTMLDivElement\n>;\n"],"mappings":"AASA,MAAO,IAAMA,aAAY,CAAG,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAAiB,GAAjB,CAArB,CAEP,MAAO,IAAMC,oBAAmB,CAAGD,YAAY,CAAC,CAAD,CAAxC,CAEP,MAAO,IAAME,oBAAmB,CAAG,CAAC,QAAD,CAAW,WAAX,CAA5B,CAEP,MAAO,IAAMC,2BAA0B,CAAGD,mBAAmB,CAAC,CAAD,CAAtD,CAEP,MAAO,IAAME,eAAc,CAAG,CAAC,OAAD,CAAU,SAAV,CAAqB,SAArB,CAAvB,CAGP,MAAO,IAAMC,aAAY,CAAG,CAAC,SAAD,CAAY,OAAZ,CAAqB,OAArB,CAArB,CAEP,MAAO,IAAMC,oBAAmB,CAAGD,YAAY,CAAC,CAAD,CAAxC"}