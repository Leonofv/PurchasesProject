{"version":3,"file":"helpers.js","names":["IconArrowFirst","IconArrowLast","IconArrowLeft","IconArrowRight","range","defaultGetItemLabel","item","label","defaultGetItemKey","key","defaultGetItemClickable","clickable","firstPageSeparator","lastPageSeparator","pageSeparatorLabel","guardCurrentPage","currentPage","totalPages","Math","floor","max","min","getPagesArrayByVisibleCount","visibleCountProp","showFirstPage","showLastPage","visibleCount","page","visibleSegmentStartToCenter","ceil","visibleSegmentEndToCenter","slideStart","map","i","el","toString","getPagesArrayByWidth","currentPageArg","gap","buttonPadding","buttonMinWidth","maxSymbolSize","totalWidth","w","direction","leftIndex","rightIndex","pages","getButtonWidth","withGap","length","add","buttonWidth","push","unshift","moreButtonWidth","firstButtonWidth","lastButtonWidth","isAddFirstPage","isAddlastPage","slicedArray","array","slice","reduce","previous","currentValue","returned","getPagesArray","paginationArrowIconsMap","first","next","last"],"sources":["../../../../../src/components/Pagination/helpers.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\nimport { IconArrowFirst } from '@consta/icons/IconArrowFirst';\nimport { IconArrowLast } from '@consta/icons/IconArrowLast';\nimport { IconArrowLeft } from '@consta/icons/IconArrowLeft';\nimport { IconArrowRight } from '@consta/icons/IconArrowRight';\n\nimport { range } from '##/utils/array';\n\nimport {\n  PaginationArrowTypes,\n  PaginationBaseItemDefault,\n  PaginationItem,\n  PaginationPropGetItemClickable,\n  PaginationPropGetItemKey,\n  PaginationPropGetItemLabel,\n} from './types';\n\nexport const defaultGetItemLabel: PaginationPropGetItemLabel<\n  PaginationBaseItemDefault\n> = (item) => item.label;\nexport const defaultGetItemKey: PaginationPropGetItemKey<\n  PaginationBaseItemDefault\n> = (item) => item.key;\nexport const defaultGetItemClickable: PaginationPropGetItemClickable<\n  PaginationBaseItemDefault\n> = (item) => item.clickable ?? true;\n\nexport const firstPageSeparator = '<_';\nexport const lastPageSeparator = '_>';\nexport const pageSeparatorLabel = '...';\nexport const guardCurrentPage = (\n  currentPage: number | undefined,\n  totalPages: number,\n) => Math.floor(Math.max(1, Math.min(currentPage || 0, totalPages)));\n\nexport const getPagesArrayByVisibleCount = (\n  currentPage: number,\n  totalPages: number,\n  visibleCountProp: number,\n  showFirstPage?: boolean,\n  showLastPage?: boolean,\n): PaginationItem[] => {\n  const visibleCount = Math.floor(Math.min(visibleCountProp, totalPages));\n  const page = guardCurrentPage(currentPage, totalPages);\n  const visibleSegmentStartToCenter = Math.ceil(visibleCount / 2);\n  const visibleSegmentEndToCenter = visibleCount - visibleSegmentStartToCenter;\n  const slideStart = Math.max(0, page - visibleSegmentStartToCenter);\n\n  return range(visibleCount).map((i) => {\n    const el =\n      i +\n      slideStart +\n      1 -\n      Math.max(0, page + visibleSegmentEndToCenter - totalPages);\n\n    if (visibleCount >= 5 && visibleCount < totalPages) {\n      if (showFirstPage && i === 0 && page - visibleSegmentStartToCenter > 0) {\n        return {\n          key: 1,\n          label: '1',\n          clickable: true,\n        };\n      }\n      if (showFirstPage && i === 1 && page - visibleSegmentStartToCenter > 0) {\n        return {\n          key: firstPageSeparator,\n          label: pageSeparatorLabel,\n          clickable: false,\n        };\n      }\n      if (\n        showLastPage &&\n        i === visibleCount - 1 &&\n        page + visibleSegmentEndToCenter < totalPages\n      ) {\n        return {\n          key: totalPages,\n          label: totalPages.toString(),\n          clickable: true,\n        };\n      }\n      if (\n        showLastPage &&\n        i === visibleCount - 2 &&\n        page + visibleSegmentEndToCenter < totalPages\n      ) {\n        return {\n          key: lastPageSeparator,\n          label: pageSeparatorLabel,\n          clickable: false,\n        };\n      }\n    }\n\n    return {\n      key: el,\n      label: el.toString(),\n      clickable: true,\n    };\n  });\n};\n\ntype GetPagesArray = (\n  currentPage: number,\n  totalPages: number,\n  visibleCount: number,\n  showFirstPage: boolean,\n  showLastPage: boolean,\n  gap: number,\n  buttonPadding: number,\n  buttonMinWidth: number,\n  maxSymbolSize: number,\n  totalWidth: number,\n) => PaginationItem[];\n\ntype GetPagesArrayByWidth = (\n  currentPage: number,\n  totalPages: number,\n  showFirstPage: boolean,\n  showLastPage: boolean,\n  gap: number,\n  buttonPadding: number,\n  buttonMinWidth: number,\n  maxSymbolSize: number,\n  totalWidth: number,\n) => PaginationItem[];\n\nexport const getPagesArrayByWidth: GetPagesArrayByWidth = (\n  currentPageArg,\n  totalPages,\n  showFirstPage,\n  showLastPage,\n  gap: number,\n  buttonPadding: number,\n  buttonMinWidth: number,\n  maxSymbolSize: number,\n  totalWidth: number,\n) => {\n  const currentPage = guardCurrentPage(currentPageArg, totalPages);\n\n  let w = totalWidth;\n  // направлеине добавления кнопки, true - влево, false - вправо\n  let direction = false;\n  // индекс добавляемой кнопки относительно от выбранной\n  let leftIndex = 0;\n  let rightIndex = 1;\n  let pages: (PaginationItem & { buttonWidth: number })[] = [];\n\n  const getButtonWidth = (label: number, withGap: boolean) => {\n    return (\n      Math.max(\n        label.toString().length * maxSymbolSize + buttonPadding,\n        buttonMinWidth,\n      ) + (withGap ? gap : 0)\n    );\n  };\n\n  while (w > 0 && pages.length < totalPages) {\n    const add = direction ? currentPage + rightIndex : currentPage - leftIndex;\n\n    const buttonWidth: number = getButtonWidth(add, Boolean(pages.length));\n\n    if (w - buttonWidth >= 0 && add <= totalPages && add >= 1) {\n      const el = {\n        key: add,\n        label: add.toString(),\n        clickable: true,\n        buttonWidth,\n      };\n\n      if (direction) {\n        pages.push(el);\n        rightIndex += 1;\n      } else {\n        pages.unshift(el);\n        leftIndex += 1;\n      }\n    }\n    direction = !direction;\n\n    w -= add <= totalPages && add >= 1 ? buttonWidth : 0;\n  }\n\n  if ((showFirstPage || showLastPage) && pages.length >= 5) {\n    const moreButtonWidth = getButtonWidth(1, true);\n    const firstButtonWidth = getButtonWidth(1, true);\n    const lastButtonWidth = getButtonWidth(totalPages, true);\n\n    let isAddFirstPage = false;\n    let isAddlastPage = false;\n\n    if (showFirstPage && pages[0].key !== 1) {\n      let array = [...pages];\n\n      while (array.length > 3) {\n        if (array[0].key === currentPage) {\n          break;\n        }\n\n        const slicedArray = array.slice(1);\n\n        if (\n          slicedArray\n            .map((el) => el.buttonWidth)\n            .reduce((previous, currentValue) => previous + currentValue) +\n            firstButtonWidth +\n            moreButtonWidth <=\n          totalWidth\n        ) {\n          isAddFirstPage = true;\n          pages = [...slicedArray];\n          break;\n        }\n\n        array = slicedArray;\n      }\n    }\n\n    if (showLastPage && pages[pages.length - 1].key !== totalPages) {\n      let array = [...pages];\n\n      while (array.length > 3) {\n        if (array[array.length - 1].key === totalPages) {\n          break;\n        }\n\n        const slicedArray = array.slice(0, -1);\n\n        if (\n          slicedArray\n            .map((el) => el.buttonWidth)\n            .reduce((previous, currentValue) => previous + currentValue) +\n            lastButtonWidth +\n            moreButtonWidth +\n            (isAddFirstPage ? firstButtonWidth + moreButtonWidth : 0) <=\n          totalWidth\n        ) {\n          isAddlastPage = true;\n          pages = [...slicedArray];\n          break;\n        }\n\n        array = slicedArray;\n      }\n    }\n\n    pages = [\n      ...(isAddFirstPage\n        ? [\n            {\n              key: 1,\n              label: '1',\n              clickable: true,\n              buttonWidth: firstButtonWidth,\n            },\n            {\n              key: firstPageSeparator,\n              label: pageSeparatorLabel,\n              buttonWidth: moreButtonWidth,\n              clickable: false,\n            },\n          ]\n        : []),\n      ...pages,\n      ...(isAddlastPage\n        ? [\n            {\n              key: lastPageSeparator,\n              label: pageSeparatorLabel,\n              buttonWidth: moreButtonWidth,\n              clickable: false,\n            },\n            {\n              key: totalPages,\n              label: totalPages.toString(),\n              clickable: true,\n              buttonWidth: firstButtonWidth,\n            },\n          ]\n        : []),\n    ];\n  }\n\n  const returned: PaginationItem[] = pages.map(({ key, label, clickable }) => ({\n    key,\n    label,\n    clickable,\n  }));\n\n  return returned;\n};\n\nexport const getPagesArray: GetPagesArray = (\n  currentPage,\n  totalPages = 1,\n  visibleCount,\n  showFirstPage,\n  showLastPage,\n  gap,\n  buttonPadding,\n  buttonMinWidth,\n  maxSymbolSize,\n  totalWidth,\n) => {\n  return visibleCount\n    ? getPagesArrayByVisibleCount(\n        currentPage,\n        totalPages,\n        visibleCount,\n        showFirstPage,\n        showLastPage,\n      )\n    : getPagesArrayByWidth(\n        currentPage,\n        totalPages,\n        showFirstPage,\n        showLastPage,\n        gap,\n        buttonPadding,\n        buttonMinWidth,\n        maxSymbolSize,\n        totalWidth,\n      );\n};\n\nexport const paginationArrowIconsMap: Record<\n  PaginationArrowTypes,\n  IconComponent\n> = {\n  first: IconArrowFirst,\n  previous: IconArrowLeft,\n  next: IconArrowRight,\n  last: IconArrowLast,\n};\n"],"mappings":"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"}