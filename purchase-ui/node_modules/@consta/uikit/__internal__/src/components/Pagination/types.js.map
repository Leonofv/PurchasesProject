{"version":3,"file":"types.js","names":["paginationPropForm","paginationPropFormDefault","paginationPropSize","paginationPropSizeDefault","paginationPropType","paginationPropTypeDefault"],"sources":["../../../../../src/components/Pagination/types.ts"],"sourcesContent":["import { IconComponent } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { AsAttributes, AsTags } from '##/utils/types/AsTags';\nimport { PropsWithAsAttributes } from '##/utils/types/PropsWithAsAttributes';\nimport {\n  PropsWithHTMLAttributes,\n  PropsWithHTMLAttributesAndRef,\n} from '##/utils/types/PropsWithHTMLAttributes';\n\nexport const paginationPropForm = ['default', 'brick', 'round'] as const;\nexport type PaginationPropForm = typeof paginationPropForm[number];\nexport const paginationPropFormDefault: PaginationPropForm =\n  paginationPropForm[0];\n\nexport const paginationPropSize = ['m', 'xs', 's', 'l'] as const;\nexport type PaginationPropSize = typeof paginationPropSize[number];\nexport const paginationPropSizeDefault: PaginationPropSize =\n  paginationPropSize[0];\n\nexport const paginationPropType = ['default', 'input'] as const;\nexport type PaginationPropType = typeof paginationPropType[number];\nexport const paginationPropTypeDefault: PaginationPropType =\n  paginationPropType[0];\n\nexport type PaginationArrowTypes = 'first' | 'previous' | 'next' | 'last';\n\nexport type PaginationPropHotKey = { label: string; keys: string[] };\n\nexport type PaginationPropOnItemClick<ITEM> = (\n  item: ITEM,\n  params: { e: React.MouseEvent },\n) => void;\n\nexport type PaginationPropOnChange<ITEM> = (\n  value: ITEM,\n  params: { e: React.MouseEvent | KeyboardEvent },\n) => void;\n\n// ARROWS\n\nexport type PaginationPropArrow =\n  | boolean\n  | IconComponent\n  | {\n      label?: string;\n      icon?: IconComponent;\n    };\n\nexport type PaginationBasePropArrow =\n  | false\n  | {\n      label?: string;\n      disabled?: boolean;\n      icon?: IconComponent;\n      onClick?: React.MouseEventHandler;\n    };\n\ntype PaginationArrowsProps = {\n  outerMostArrows?: [PaginationPropArrow?, PaginationPropArrow?];\n} & (\n  | {\n      arrows: [PaginationPropArrow?, PaginationPropArrow?];\n      hotKeys?: [PaginationPropHotKey?, PaginationPropHotKey?];\n    }\n  | {\n      arrows?: never;\n      hotKeys?: never;\n    }\n);\n\nexport type PaginationItem = {\n  key: string | number;\n  label: string;\n  clickable: boolean;\n};\n\nexport type PaginationProps<TYPE extends PaginationPropType> =\n  PropsWithHTMLAttributes<\n    {\n      type?: TYPE;\n      showFirstPage?: boolean;\n      showLastPage?: boolean;\n      visibleCount?: number;\n      form?: PaginationPropForm;\n      size?: PaginationPropSize;\n      containerEventListener?: HTMLElement | Window;\n      value?: number;\n      items?: number;\n      onChange?: PaginationPropOnChange<number>;\n      getItemAs?: PaginationPropGetItemAs<PaginationItem>;\n      getItemAttributes?: PaginationPropGetItemAttributes<PaginationItem>;\n      getItemRef?: PaginationPropGetItemRef<PaginationItem>;\n    },\n    HTMLDivElement\n  > &\n    PaginationArrowsProps &\n    (TYPE extends 'input'\n      ? { getTotalLabel?: (pages: number) => string | number }\n      : {\n          getTotalLabel?: never;\n        });\n\nexport type PaginationComponent = <TYPE extends PaginationPropType>(\n  props: PaginationProps<TYPE>,\n) => React.ReactElement | null;\n\nexport type PaginationBaseItemDefault = {\n  key: string | number;\n  label?: string;\n  as?: AsTags;\n  ref?: React.RefObject<HTMLElement>;\n  clickable?: boolean;\n  attributes?: AsAttributes;\n  onClick?: React.MouseEventHandler;\n};\n\nexport type PaginationPropGetItemKey<ITEM> = (\n  item: ITEM,\n) => PaginationBaseItemDefault['key'];\nexport type PaginationPropGetItemLabel<ITEM> = (\n  item: ITEM,\n) => PaginationBaseItemDefault['label'];\nexport type PaginationPropGetItemClickable<ITEM> = (\n  item: ITEM,\n) => PaginationBaseItemDefault['clickable'];\nexport type PaginationPropGetItemAs<ITEM> = (\n  item: ITEM,\n) => PaginationBaseItemDefault['as'];\nexport type PaginationPropGetItemAttributes<ITEM> = (\n  item: ITEM,\n) => PaginationBaseItemDefault['attributes'];\nexport type PaginationPropGetItemRef<ITEM> = (\n  item: ITEM,\n) => PaginationBaseItemDefault['ref'];\nexport type PaginationPropGetItemOnClick<ITEM> = (\n  item: ITEM,\n) => PaginationBaseItemDefault['onClick'];\n\ntype Mappers<ITEM = PaginationBaseItemDefault> = {\n  getItemLabel?: PaginationPropGetItemLabel<ITEM>;\n  getItemKey: PaginationPropGetItemKey<ITEM>;\n  getItemAs?: PaginationPropGetItemAs<ITEM>;\n  getItemAttributes?: PaginationPropGetItemAttributes<ITEM>;\n  getItemRef?: PaginationPropGetItemRef<ITEM>;\n  getItemClickable?: PaginationPropGetItemClickable<ITEM>;\n  getItemOnClick?: PaginationPropGetItemOnClick<ITEM>;\n};\n\nexport type PaginationArrowProps = PropsWithHTMLAttributes<\n  {\n    icon?: IconComponent;\n    form?: PaginationPropForm;\n    size?: PaginationPropSize;\n    disabled?: boolean;\n    orientation?: 'start' | 'end';\n    label?: string;\n    caption?: string;\n  },\n  HTMLButtonElement\n>;\n\nexport type PaginationItemProps<AS extends AsTags = 'button'> =\n  PropsWithAsAttributes<\n    {\n      form?: PaginationPropForm;\n      size?: PaginationPropSize;\n      label?: string;\n      active?: boolean;\n      clickable?: boolean;\n    },\n    AS\n  >;\n\nexport type PaginationItemComponent = <AS extends AsTags = 'button'>(\n  props: PaginationItemProps<AS>,\n) => React.ReactElement | null;\n\nexport type PaginationNumberInputProps = PropsWithHTMLAttributes<\n  {\n    value?: number;\n    onChange?: PaginationPropOnChange<number>;\n    form?: PaginationPropForm;\n    size?: PaginationPropSize;\n    total: number;\n    getTotalLabel?: (pages: number) => string | number;\n  },\n  HTMLDivElement\n>;\n\nexport type PaginationListProps<ITEM> = PropsWithHTMLAttributesAndRef<\n  {\n    form?: PaginationPropForm;\n    size?: PaginationPropSize;\n    items: ITEM[];\n    value?: ITEM;\n    onItemClick?: PaginationPropOnItemClick<ITEM>;\n  },\n  HTMLDivElement\n> &\n  Mappers<ITEM>;\n\nexport type PaginationListComponent = <ITEM extends PaginationBaseItemDefault>(\n  props: PaginationListProps<ITEM>,\n) => React.ReactElement | null;\n"],"mappings":"AAUA,MAAO,IAAMA,mBAAkB,CAAG,CAAC,SAAD,CAAY,OAAZ,CAAqB,OAArB,CAA3B,CAEP,MAAO,IAAMC,0BAA6C,CACxDD,kBAAkB,CAAC,CAAD,CADb,CAGP,MAAO,IAAME,mBAAkB,CAAG,CAAC,GAAD,CAAM,IAAN,CAAY,GAAZ,CAAiB,GAAjB,CAA3B,CAEP,MAAO,IAAMC,0BAA6C,CACxDD,kBAAkB,CAAC,CAAD,CADb,CAGP,MAAO,IAAME,mBAAkB,CAAG,CAAC,SAAD,CAAY,OAAZ,CAA3B,CAEP,MAAO,IAAMC,0BAA6C,CACxDD,kBAAkB,CAAC,CAAD,CADb"}