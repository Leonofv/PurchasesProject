/// <reference types="react" />
import { PaginationPropArrow, PaginationPropHotKey, PaginationPropSize, PaginationPropType } from './types';
declare type UsePaginationItemsProps = {
    visibleCount?: number;
    value: number;
    items: number;
    showFirstPage?: boolean;
    showLastPage?: boolean;
    containerEventListener?: HTMLElement | Window;
    size: PaginationPropSize;
    hotKeys?: [PaginationPropHotKey?, PaginationPropHotKey?];
    arrows?: [PaginationPropArrow?, PaginationPropArrow?];
    outerMostArrows?: [PaginationPropArrow?, PaginationPropArrow?];
    type?: PaginationPropType;
    handleNext: (e: React.MouseEvent | KeyboardEvent) => void;
    handlePrevious: (e: React.MouseEvent | KeyboardEvent) => void;
};
export declare const itemSizeMap: Record<PaginationPropSize, number>;
export declare const usePaginationItems: (props: UsePaginationItemsProps) => readonly [import("./types").PaginationItem[], import("react").RefObject<HTMLDivElement>[], number];
export {};
