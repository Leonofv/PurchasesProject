{"version":3,"file":"PortalWithThemeContext.js","names":["React","createContext","useContext","useEffect","useState","Context","refs","zIndex","usePortalContext","PortalWithThemeProvider","props","setRefs","contextAddRefs","addRefs","addRef","length","newRefs","filter","item","current","addItem","find","children"],"sources":["../../../../../../src/components/PortalWithTheme/PortalWithThemeContext/PortalWithThemeContext.tsx"],"sourcesContent":["import React, { createContext, useContext, useEffect, useState } from 'react';\n\nconst Context = createContext<{\n  refs: React.RefObject<HTMLElement>[];\n  addRefs?: (ref: React.RefObject<HTMLElement>[]) => void;\n  zIndex?: number;\n}>({\n  refs: [],\n  zIndex: undefined,\n});\n\nexport function usePortalContext() {\n  return useContext(Context);\n}\n/**\n * PortalWithThemeProvider\n * нужен для того чтобы получать рефы дочерних порталов и прокидывать их в родительские порталы\n * Это нужно чтобы в компонетах использовать usePortalContext()\n * и получать рефы всех вложенных порталов в компонент, чтобы без ошибочно реализовать onOutsideClick.\n * Проблема заклбчалась в том что при нажатии на любой вложенный портал,\n * компонент думал ччто клик произашел вне компонента и срабатывал onOutsideClick.\n * Сечас когда мы знаем рефы всех вложенных порталов мы можем игнорировать события кликов на вложенных порталах\n */\nexport const PortalWithThemeProvider: React.FC<{\n  zIndex?: number;\n  children?: React.ReactNode;\n}> = (props) => {\n  const [refs, setRefs] = useState<React.RefObject<HTMLElement>[]>([]);\n  const { addRefs: contextAddRefs } = usePortalContext();\n\n  /**\n   * фукция для добавления рефов дочерних порталов\n   * @param {React.RefObject<HTMLElement>[]} addRef массив ссылок\n   */\n  const addRefs = (addRef: React.RefObject<HTMLElement>[]) => {\n    if (addRef.length > 0) {\n      const newRefs = [\n        ...refs.filter((item) => item.current),\n        ...addRef.filter((addItem) => {\n          if (!addItem.current) {\n            return false;\n          }\n          return !refs.find((item) => item.current === addItem.current);\n        }),\n      ];\n      setRefs(newRefs);\n    }\n  };\n\n  /**\n   * при изменении дочерних рефов необходимо добавить их в родительские порталы\n   */\n  useEffect(() => {\n    contextAddRefs && contextAddRefs(refs);\n  }, [refs]);\n\n  useEffect(() => () => setRefs([]), []);\n\n  return (\n    // eslint-disable-next-line react/jsx-no-constructed-context-values\n    <Context.Provider value={{ refs, addRefs, zIndex: props.zIndex }}>\n      {props.children}\n    </Context.Provider>\n  );\n};\n"],"mappings":"0IAAA,MAAOA,MAAP,EAAgBC,aAAhB,CAA+BC,UAA/B,CAA2CC,SAA3C,CAAsDC,QAAtD,KAAsE,OAAtE,CAEA,GAAMC,QAAO,CAAGJ,aAAa,CAI1B,CACDK,IAAI,CAAE,EADL,CAEDC,MAAM,OAFL,CAJ0B,CAA7B,CASA,MAAO,SAASC,iBAAT,EAA4B,CACjC,MAAON,WAAU,CAACG,OAAD,CAClB,CAUD,MAAO,IAAMI,wBAGX,CAAG,SAACC,CAAD,CAAW,OACUN,QAAQ,CAAiC,EAAjC,CADlB,uBACPE,CADO,MACDK,CADC,QAEsBH,gBAAgB,EAFtC,CAEGI,CAFH,GAENC,OAFM,CAgCd,MANAV,UAAS,CAAC,UAAM,CACdS,CAAc,EAAIA,CAAc,CAACN,CAAD,CACjC,CAFQ,CAEN,CAACA,CAAD,CAFM,CAMT,CAFAH,SAAS,CAAC,iBAAM,kBAAMQ,EAAO,CAAC,EAAD,CAAb,CAAN,CAAD,CAA0B,EAA1B,CAET,CAEE,oBAAC,OAAD,CAAS,QAAT,EAAkB,KAAK,CAAE,CAAEL,IAAI,CAAJA,CAAF,CAAQO,OAAO,CA1B1B,QAAVA,QAAU,CAACC,CAAD,CAA4C,CAC1D,GAAoB,CAAhB,CAAAA,CAAM,CAACC,MAAX,CAAuB,CACrB,GAAMC,EAAO,8BACRV,CAAI,CAACW,MAAL,CAAY,SAACC,CAAD,QAAUA,EAAI,CAACC,OAAf,CAAZ,CADQ,qBAERL,CAAM,CAACG,MAAP,CAAc,SAACG,CAAD,CAAa,SACvBA,CAAO,CAACD,OADe,EAIrB,CAACb,CAAI,CAACe,IAAL,CAAU,SAACH,CAAD,QAAUA,EAAI,CAACC,OAAL,GAAiBC,CAAO,CAACD,OAAnC,CAAV,CACT,CALE,CAFQ,EAAb,CASAR,CAAO,CAACK,CAAD,CACR,CACF,CAa0B,CAAiBT,MAAM,CAAEG,CAAK,CAACH,MAA/B,CAAzB,EACGG,CAAK,CAACY,QADT,CAIH,CAzCM"}