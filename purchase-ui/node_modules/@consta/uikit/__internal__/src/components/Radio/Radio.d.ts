import './Radio.css';
import React, { ChangeEventHandler } from 'react';
import { PropsWithHTMLAttributes } from '../../utils/types/PropsWithHTMLAttributes';
export declare const radioPropSize: readonly ["m", "l", "s", "xs"];
export declare type RadioPropSize = typeof radioPropSize[number];
export declare const radioPropSizeDefault: RadioPropSize;
export declare const radioPropView: readonly ["primary", "ghost"];
export declare type RadioPropView = typeof radioPropView[number];
export declare const radioPropViewDefault: RadioPropView;
export declare const radioPropAlign: readonly ["center", "top"];
export declare type RadioPropAlign = typeof radioPropAlign[number];
export declare const radioPropAlignDefault: RadioPropAlign;
export declare type RadioPropOnChange = (checked: boolean, params: {
    e: React.ChangeEvent<HTMLInputElement>;
}) => void;
export declare type Props = {
    checked?: boolean;
    size?: RadioPropSize;
    view?: RadioPropView;
    align?: RadioPropAlign;
    disabled?: boolean;
    className?: string;
    label?: string;
    onChange?: ChangeEventHandler<HTMLInputElement>;
    name?: string;
    onFocus?: React.FocusEventHandler<HTMLInputElement>;
    onBlur?: React.FocusEventHandler<HTMLInputElement>;
    autoFocus?: boolean;
    readOnly?: boolean;
    required?: boolean;
    step?: number | string;
    tabIndex?: number;
    inputRef?: React.Ref<HTMLInputElement>;
    children?: never;
    for?: string;
    inputId?: string;
};
export declare type RadioProps = PropsWithHTMLAttributes<Props, HTMLLabelElement>;
export declare const cnRadio: import("@bem-react/classname").ClassNameFormatter;
export declare const COMPONENT_NAME: "Radio";
export declare const Radio: React.ForwardRefExoticComponent<Props & Omit<React.HTMLAttributes<HTMLLabelElement>, "css" | keyof Props> & React.RefAttributes<HTMLLabelElement>>;
