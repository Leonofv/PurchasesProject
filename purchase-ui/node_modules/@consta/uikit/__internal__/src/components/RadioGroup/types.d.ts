/// <reference types="react" />
import { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';
export declare type RadioGroupDefaultItem = {
    key?: string | number;
    label: string;
    disabled?: boolean;
};
export declare const radioGroupDirections: readonly ["column", "row"];
export declare type RadioGroupDirection = typeof radioGroupDirections[number];
export declare const radioGroupDefaultDirection: RadioGroupDirection;
export declare const radioGroupSizes: readonly ["m", "l", "xs", "s"];
export declare type RadioGroupPropSize = typeof radioGroupSizes[number];
export declare const radioGroupDefaultSize: RadioGroupPropSize;
export declare const radioGroupViews: readonly ["primary", "ghost"];
export declare type RadioGroupPropView = typeof radioGroupViews[number];
export declare const radioGroupDefaultView: RadioGroupPropView;
export declare const radioGroupPropAlign: readonly ["center", "top"];
export declare type RadioGroupPropAlign = typeof radioGroupPropAlign[number];
export declare const radioGroupPropAlignDefault: RadioGroupPropAlign;
export declare type RadioGroupPropGetItemKey<ITEM> = (item: ITEM) => string | number | undefined;
export declare type RadioGroupPropGetItemLabel<ITEM> = (item: ITEM) => string;
export declare type RadioGroupPropGetItemDisabled<ITEM> = (item: ITEM) => boolean | undefined;
export declare type RadioGroupPropOnChange<ITEM> = (value: ITEM, props: {
    e: React.ChangeEvent<HTMLInputElement>;
}) => void;
export declare type RadioGroupProps<ITEM = RadioGroupDefaultItem> = PropsWithHTMLAttributesAndRef<{
    align?: RadioGroupPropAlign;
    value?: ITEM | null;
    items: ITEM[];
    getItemKey?: RadioGroupPropGetItemKey<ITEM>;
    getItemLabel?: RadioGroupPropGetItemLabel<ITEM>;
    getItemDisabled?: RadioGroupPropGetItemDisabled<ITEM>;
    onChange?: RadioGroupPropOnChange<ITEM>;
    name?: string;
    direction?: RadioGroupDirection;
    size?: RadioGroupPropSize;
    view?: RadioGroupPropView;
    disabled?: boolean;
    className?: string;
}, HTMLDivElement> & (ITEM extends {
    label: RadioGroupDefaultItem['label'];
} ? {} : {
    getItemLabel: RadioGroupPropGetItemLabel<ITEM>;
});
export declare type RadioGroupComponent = <ITEM = RadioGroupDefaultItem>(props: RadioGroupProps<ITEM>) => React.ReactElement | null;
