{"version":3,"file":"SelectDropdown.js","names":["React","Fragment","useEffect","useMemo","useRef","Transition","cnListBox","ListItem","ListLoader","mapVerticalSpase","Popover","useDebounce","useFlag","forkRef","useForkRef","useVirtualScroll","animateTimeout","cnMixPopoverAnimate","cnMixScrollBar","cnMixSpace","cn","fabricIndex","SelectCreateButton","SelectGroupLabel","SelectItemAll","SelectLoader","isNotOptionForCreate","isOptionForCreate","isOptionForSelectAll","selectDropdownform","defaultSelectDropdownPropForm","cnSelectDropdown","getLenghtElements","elements","element","lenght","length","index","items","isVisible","slise","SelectDropdown","props","controlRef","size","getOptionProps","dropdownRefProp","dropdownRef","labelForCreate","className","labelForNotFound","labelForEmptyItems","hasItems","form","isOpen","offset","offsetProp","renderItem","visibleItems","isLoading","getGroupLabel","notFound","itemsRefs","virtualScroll","onScrollToBottom","otherProps","indent","isListShowed","filter","group","Array","isArray","lengthForVirtualScroll","isActive","spaceTop","sliceHookProp","slice","listRefs","scrollElementRef","popoverRef","scrolled","setScroled","setScroledOffDebouns","off","fn","on","current","addEventListener","removeEventListener","animate","getIndex","getVirtualIndex","border","shadow","pV","marginTop","map","groupIndex","label","item","keyPrefix","virtualIndex","key","i","checkedCount","totalCount","ref"],"sources":["../../../../../../src/components/SelectComponents/SelectDropdown/SelectDropdown.tsx"],"sourcesContent":["import './SelectDropdown.css';\n\nimport React, { Fragment, useEffect, useMemo, useRef } from 'react';\nimport { Transition } from 'react-transition-group';\n\nimport {\n  cnListBox,\n  ListItem,\n  ListLoader,\n  mapVerticalSpase,\n} from '##/components/ListCanary';\nimport { Popover, PopoverPropOffset } from '##/components/Popover';\nimport { useDebounce } from '##/hooks/useDebounce';\nimport { useFlag } from '##/hooks/useFlag';\nimport { forkRef, useForkRef } from '##/hooks/useForkRef';\nimport { useVirtualScroll } from '##/hooks/useVirtualScroll';\nimport {\n  animateTimeout,\n  cnMixPopoverAnimate,\n} from '##/mixs/MixPopoverAnimate/MixPopoverAnimate';\nimport { cnMixScrollBar } from '##/mixs/MixScrollBar';\nimport { cnMixSpace } from '##/mixs/MixSpace';\nimport { cn } from '##/utils/bem';\nimport { fabricIndex } from '##/utils/fabricIndex';\nimport { SelectAllItem } from '##/utils/getGroups';\nimport { PropsWithJsxAttributes } from '##/utils/types/PropsWithJsxAttributes';\n\nimport { SelectCreateButton } from '../SelectCreateButton/SelectCreateButton';\nimport { SelectGroupLabel } from '../SelectGroupLabel/SelectGroupLabel';\nimport { SelectItemAll } from '../SelectItemAll/SelectItemAll';\nimport { SelectLoader } from '../SelectLoader/SelectLoader';\nimport { PropSize, RenderItemProps } from '../types';\nimport {\n  GetOptionPropsResult,\n  isNotOptionForCreate,\n  isOptionForCreate,\n  isOptionForSelectAll,\n  OptionForCreate,\n  OptionProps,\n} from '../useSelect';\n\nexport const selectDropdownform = ['default', 'brick', 'round'] as const;\nexport type SelectDropdownPropForm = typeof selectDropdownform[number];\nexport const defaultSelectDropdownPropForm = selectDropdownform[0];\n\ntype Props<ITEM, GROUP> = PropsWithJsxAttributes<{\n  size: PropSize;\n  controlRef: React.MutableRefObject<HTMLDivElement | null>;\n  dropdownRef: React.Ref<HTMLDivElement>;\n  getOptionProps(props: OptionProps<ITEM>): GetOptionPropsResult;\n  form: SelectDropdownPropForm;\n  isOpen: boolean;\n  offset?: PopoverPropOffset | 'none';\n  isLoading?: boolean;\n  renderItem: (props: RenderItemProps<ITEM>) => JSX.Element | null;\n  visibleItems: (\n    | OptionForCreate\n    | {\n        items: Array<SelectAllItem | ITEM>;\n        key: string | number;\n        group?: GROUP;\n        groupIndex: number;\n        checkedCount?: number;\n        totalCount?: number;\n      }\n  )[];\n  getGroupLabel?: (group: GROUP) => string;\n  labelForCreate?: string;\n  labelForNotFound?: string;\n  labelForEmptyItems?: string;\n  notFound?: boolean;\n  hasItems?: boolean;\n  itemsRefs: React.RefObject<HTMLDivElement>[];\n  virtualScroll?: boolean;\n  onScrollToBottom?: (lenght: number) => void;\n}>;\n\ntype SelectDropdown = <ITEM, GROUP>(\n  props: Props<ITEM, GROUP>,\n) => React.ReactElement | null;\n\nconst cnSelectDropdown = cn('SelectDropdown');\n\nconst getLenghtElements = <ITEM, GROUP>(\n  elements: (\n    | OptionForCreate\n    | {\n        items: Array<SelectAllItem | ITEM>;\n        key: string | number;\n        group?: GROUP;\n        groupIndex: number;\n        checkedCount?: number;\n        totalCount?: number;\n      }\n  )[],\n) => {\n  let lenght = elements.length <= 1 ? 0 : elements.length;\n\n  for (let index = 0; index < elements.length; index++) {\n    const element = elements[index];\n\n    if (isNotOptionForCreate(element) && element.items.length) {\n      lenght += element.items.length;\n    }\n  }\n\n  return lenght;\n};\n\nconst isVisible = (slise: [number, number], index: number) => {\n  return index >= slise[0] && index < slise[1];\n};\n\nexport const SelectDropdown: SelectDropdown = (props) => {\n  const {\n    controlRef,\n    size,\n    getOptionProps,\n    dropdownRef: dropdownRefProp,\n    labelForCreate,\n    className,\n    labelForNotFound,\n    labelForEmptyItems,\n    hasItems = true,\n    form,\n    isOpen,\n    offset: offsetProp = 'none',\n    renderItem,\n    visibleItems,\n    isLoading,\n    getGroupLabel,\n    notFound,\n    itemsRefs,\n    virtualScroll,\n    onScrollToBottom,\n    ...otherProps\n  } = props;\n\n  const indent = form === 'round' ? 'increased' : 'normal';\n\n  const isListShowed = useMemo(() => {\n    return (\n      visibleItems.filter(\n        (group) =>\n          isOptionForCreate(group) ||\n          (Array.isArray(group.items) && group.items.length > 0),\n      ).length > 0\n    );\n  }, [visibleItems]);\n\n  const offset = offsetProp === 'none' ? undefined : offsetProp;\n\n  const lengthForVirtualScroll = useMemo(\n    () => getLenghtElements(visibleItems),\n    [visibleItems],\n  );\n\n  const {\n    spaceTop,\n    slice: sliceHookProp,\n    listRefs,\n    scrollElementRef,\n  } = useVirtualScroll({\n    length: lengthForVirtualScroll,\n    isActive: virtualScroll && isOpen,\n    onScrollToBottom,\n  });\n\n  const slice: [number, number] =\n    sliceHookProp[0] === 0 && virtualScroll ? [0, 50] : sliceHookProp;\n\n  const popoverRef = useRef<HTMLDivElement>(null);\n  const dropdownRef = useForkRef([scrollElementRef, dropdownRefProp]);\n  const [scrolled, setScroled] = useFlag();\n  const setScroledOffDebouns = useDebounce(setScroled.off, 100);\n\n  useEffect(() => {\n    const fn = () => {\n      setScroled.on();\n      setScroledOffDebouns();\n    };\n\n    scrollElementRef.current?.addEventListener('scroll', fn);\n\n    return () => {\n      scrollElementRef.current?.removeEventListener('scroll', fn);\n    };\n  }, [scrollElementRef.current]);\n\n  return (\n    <Transition\n      in={isOpen}\n      unmountOnExit\n      nodeRef={popoverRef}\n      timeout={animateTimeout}\n    >\n      {(animate) => {\n        const getIndex = fabricIndex();\n        const getVirtualIndex = fabricIndex();\n\n        return (\n          <Popover\n            {...otherProps}\n            anchorRef={controlRef}\n            direction=\"downStartLeft\"\n            possibleDirections={[\n              'downStartLeft',\n              'upStartLeft',\n              'downStartRight',\n              'upStartRight',\n            ]}\n            offset={offset}\n            ref={popoverRef}\n            role=\"listbox\"\n            className={cnSelectDropdown(null, [\n              cnListBox({ size, form, border: true, shadow: true }),\n              cnMixPopoverAnimate({ animate }),\n              className,\n            ])}\n            equalAnchorWidth\n          >\n            <div\n              className={cnSelectDropdown('ScrollContainer', [\n                cnMixSpace({\n                  pV: mapVerticalSpase[size],\n                }),\n                cnMixScrollBar(),\n              ])}\n              ref={dropdownRef}\n            >\n              {isLoading && !isListShowed && <SelectLoader />}\n              <div\n                className={cnSelectDropdown('List', { scrolled })}\n                style={{ marginTop: spaceTop }}\n              >\n                {visibleItems.map((group, groupIndex) => {\n                  if (isOptionForCreate(group)) {\n                    const index = getIndex();\n                    return (\n                      <SelectCreateButton\n                        size={size}\n                        labelForCreate={labelForCreate}\n                        inputValue={group.label}\n                        indent={indent}\n                        ref={itemsRefs[index]}\n                        {...getOptionProps({\n                          index,\n                          item: group,\n                          keyPrefix: groupIndex,\n                        })}\n                      />\n                    );\n                  }\n\n                  const virtualIndex =\n                    visibleItems.length > 1 ? getVirtualIndex() : 0;\n\n                  return (\n                    <Fragment key={group.key}>\n                      {group.group &&\n                        getGroupLabel &&\n                        isVisible(slice, virtualIndex) && (\n                          <SelectGroupLabel\n                            label={getGroupLabel(group.group)}\n                            size={size}\n                            indent={indent}\n                            ref={listRefs[virtualIndex]}\n                            key={`group-${group.key}`}\n                          />\n                        )}\n                      {group.items.map((item, i) => {\n                        if (isOptionForSelectAll(item)) {\n                          const virtualIndex = getVirtualIndex();\n                          const index = getIndex();\n\n                          if (isVisible(slice, virtualIndex)) {\n                            return (\n                              <SelectItemAll\n                                ref={forkRef([\n                                  listRefs[virtualIndex],\n                                  itemsRefs[index],\n                                ])}\n                                indent={indent}\n                                size={size}\n                                {...getOptionProps({\n                                  index,\n                                  item,\n                                  keyPrefix: i,\n                                })}\n                                intermediate={\n                                  item.checkedCount && item.totalCount\n                                    ? item.checkedCount !== item.totalCount\n                                    : false\n                                }\n                                checked={item.checkedCount === item.totalCount}\n                                countItems={item.checkedCount}\n                                total={item.totalCount}\n                              />\n                            );\n                          }\n                        } else {\n                          const virtualIndex = getVirtualIndex();\n                          const index = getIndex();\n                          if (isVisible(slice, virtualIndex)) {\n                            return (\n                              <Fragment key={`${group.key}-${i}`}>\n                                {renderItem({\n                                  ref: forkRef([\n                                    listRefs[virtualIndex],\n                                    itemsRefs[index],\n                                  ]),\n                                  item,\n                                  ...getOptionProps({\n                                    index,\n                                    item,\n                                    keyPrefix: i,\n                                  }),\n                                })}\n                              </Fragment>\n                            );\n                          }\n                        }\n                      })}\n                    </Fragment>\n                  );\n                })}\n                {isLoading && isListShowed && (\n                  <ListLoader size={size} innerOffset={indent} />\n                )}\n              </div>\n              {!isLoading && hasItems && notFound && labelForNotFound && (\n                <ListItem\n                  size={size}\n                  label={labelForNotFound}\n                  innerOffset={indent}\n                >\n                  {labelForNotFound}\n                </ListItem>\n              )}\n              {!isLoading && !hasItems && labelForEmptyItems && (\n                <ListItem\n                  size={size}\n                  label={labelForEmptyItems}\n                  innerOffset={indent}\n                >\n                  {labelForEmptyItems}\n                </ListItem>\n              )}\n            </div>\n          </Popover>\n        );\n      }}\n    </Transition>\n  );\n};\n"],"mappings":"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"}