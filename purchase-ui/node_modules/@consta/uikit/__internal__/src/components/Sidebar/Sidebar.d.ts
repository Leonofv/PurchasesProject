import './Sidebar.css';
import React from 'react';
import { AsTagAttribute } from "../../utils/types/AsTags";
import { PropsWithHTMLAttributes } from "../../utils/types/PropsWithHTMLAttributes";
declare const sidebarPropPosition: readonly ["right", "bottom", "left", "top"];
declare type SidebarPropPosition = typeof sidebarPropPosition[number];
export declare const sidebarPropSize: readonly ["s", "m", "l", "full", "1/2", "1/3", "1/4", "2/3", "3/4"];
export declare type SidebarPropSize = typeof sidebarPropSize[number];
declare type SidebarProps = PropsWithHTMLAttributes<{
    isOpen?: boolean;
    onClose?: () => void;
    onOpen?: () => void;
    hasOverlay?: boolean;
    onClickOutside?: (event: MouseEvent) => void;
    onEsc?: (event: KeyboardEvent) => void;
    position?: SidebarPropPosition;
    size?: SidebarPropSize;
    rootClassName?: string;
    children?: React.ReactNode;
    container?: HTMLDivElement | undefined;
    afterClose?: () => void;
}, HTMLDivElement>;
declare type SidebarContentProps = {
    className?: string;
    children: React.ReactNode;
};
declare type SidebarActionsProps = {
    className?: string;
    children: React.ReactNode;
};
export declare const cnSidebar: import("@bem-react/classname").ClassNameFormatter;
declare const SidebarContent: React.FC<SidebarContentProps>;
declare const SidebarActions: React.FC<SidebarActionsProps>;
interface SidebarComponent extends React.FC<SidebarProps>, AsTagAttribute<'div'> {
    Content: typeof SidebarContent;
    Actions: typeof SidebarActions;
}
export declare const Sidebar: SidebarComponent;
export {};
