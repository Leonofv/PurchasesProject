{"version":3,"file":"useSliderStationing.js","names":["useCallback","useEffect","useMemo","useState","useComponentSize","COUNT_STEPS","getSteps","step","min","max","stepsArray","size","Array","isArray","i","length","push","useSliderStationing","value","view","range","buttonRefs","sliderLineRef","lineSizes","setLineSizes","buttonPositions","setButtonPositions","width","height","calcualtedStep","val","Math","abs","calculateLines","sizesArray","absoluteSize","active","forEach","stepSize","minValue","maxValue","endPointArray","unshift","getValidValue","calculateButtonPositions","defaultPaddingValue","positions","buttonRef","index","current","offsetWidth"],"sources":["../../../../../src/components/Slider/useSliderStationing.ts"],"sourcesContent":["import React, { useCallback, useEffect, useMemo, useState } from 'react';\n\nimport { useComponentSize } from '##/hooks/useComponentSize';\n\nimport { Line, SliderPropView } from './helper';\nimport { COUNT_STEPS } from './useSlider/useSlider';\n\ntype UseSliderStationing = (\n  value: number | [number, number] | undefined,\n  min: number,\n  max: number,\n  view: SliderPropView,\n  range: boolean | undefined,\n  step: number | number[] | undefined,\n  buttonRefs: [\n    React.RefObject<HTMLButtonElement>,\n    React.RefObject<HTMLButtonElement>,\n  ],\n  sliderLineRef: React.RefObject<HTMLButtonElement | HTMLDivElement>,\n) => {\n  lineSizes: Line[];\n  buttonPositions: number[];\n};\n\nexport const getSteps = (step: number | number[], min: number, max: number) => {\n  const stepsArray: { min: number; max: number }[] = [];\n  let size = min;\n  if (Array.isArray(step)) {\n    for (let i = 0; i < step.length - 1; i++) {\n      stepsArray.push({\n        min: step[i],\n        max: step[i + 1],\n      });\n    }\n  } else {\n    for (let i = min; i < max; i += step) {\n      stepsArray.push({\n        min: size,\n        max: size + (max - i < step ? max - i : step),\n      });\n      size += step;\n    }\n  }\n  return stepsArray;\n};\n\nexport const useSliderStationing: UseSliderStationing = (\n  value,\n  min,\n  max,\n  view,\n  range,\n  step = 1,\n  buttonRefs,\n  sliderLineRef,\n) => {\n  const [lineSizes, setLineSizes] = useState<Line[]>([]);\n  const [buttonPositions, setButtonPositions] = useState<number[]>([]);\n\n  const { width, height } = useComponentSize(sliderLineRef);\n\n  const calcualtedStep = useMemo(() => {\n    if (!Array.isArray(step)) {\n      const val = Math.abs((max - min) / COUNT_STEPS);\n      if (val > step) {\n        return val - (val % step);\n      }\n      return Math.max(val, step);\n    }\n    return step;\n  }, [max, min, step]);\n\n  const calculateLines = () => {\n    const sizesArray: Line[] = [];\n    const absoluteSize = Math.abs(max - min);\n    if (typeof value !== 'undefined') {\n      if (view === 'default') {\n        if (!Array.isArray(value) && typeof value === 'number') {\n          sizesArray.push({\n            width: (1 - (max - value) / absoluteSize) * 100,\n            active: true,\n          });\n          sizesArray.push({\n            width: ((max - value) / absoluteSize) * 100,\n            active: false,\n          });\n        } else if (Array.isArray(value) && value) {\n          const [minValue, maxValue] = [Math.min(...value), Math.max(...value)];\n          const endPointArray = [minValue, maxValue];\n          endPointArray.unshift(min);\n          endPointArray.push(max);\n          for (let i = 0; i < endPointArray.length - 1; i++) {\n            sizesArray.push({\n              width:\n                ((endPointArray[i + 1] - endPointArray[i]) / absoluteSize) *\n                100,\n              active:\n                endPointArray[i] >= minValue &&\n                endPointArray[i + 1] <= maxValue,\n            });\n          }\n        } else {\n          sizesArray.push({\n            width: 100,\n            active: false,\n          });\n        }\n      } else if (typeof calcualtedStep !== 'undefined') {\n        getSteps(calcualtedStep, min, max).forEach((stepSize) => {\n          sizesArray.push({\n            width: (Math.abs(stepSize.max - stepSize.min) * 100) / absoluteSize,\n            active:\n              (typeof value === 'number' || Array.isArray(value)) &&\n              (range && Array.isArray(value)\n                ? stepSize.max > Math.min(...value) &&\n                  stepSize.min < Math.max(...value)\n                : stepSize.max <= value),\n          });\n        });\n      }\n    } else {\n      sizesArray.push({\n        width: 100,\n        active: false,\n      });\n    }\n    return sizesArray;\n  };\n\n  const getValidValue = (value: number) => {\n    if (value < min) return min;\n    if (value > max) return max;\n    return value;\n  };\n\n  const calculateButtonPositions = useCallback(() => {\n    const absoluteSize = Math.abs(max - min);\n    let defaultPaddingValue = 0;\n    const positions: number[] = [];\n    buttonRefs.forEach((buttonRef, index) => {\n      if (\n        buttonRef.current &&\n        buttonRef.current.offsetWidth &&\n        sliderLineRef.current &&\n        sliderLineRef.current.offsetWidth\n      ) {\n        defaultPaddingValue =\n          (absoluteSize * buttonRef.current.offsetWidth) /\n            (2 * sliderLineRef.current.offsetWidth) || 0;\n      }\n      if (typeof value === 'number' || Array.isArray(value)) {\n        positions.push(\n          typeof value === 'number'\n            ? (1 -\n                (max - getValidValue(value) + defaultPaddingValue) /\n                  absoluteSize) *\n                100\n            : (1 -\n                (max - getValidValue(value[index]) + defaultPaddingValue) /\n                  absoluteSize) *\n                100,\n        );\n      }\n    });\n    return positions;\n  }, [buttonRefs, sliderLineRef]);\n\n  useEffect(() => {\n    setLineSizes(calculateLines());\n    setButtonPositions(calculateButtonPositions());\n  }, [value, min, max, range, calcualtedStep, view, width, height]);\n\n  return {\n    lineSizes,\n    buttonPositions,\n  };\n};\n"],"mappings":"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"}