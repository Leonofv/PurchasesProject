import _slicedToArray from"@babel/runtime/helpers/slicedToArray";import _objectWithoutProperties from"@babel/runtime/helpers/objectWithoutProperties";var _excluded=["onClose","autoClose","showProgress","icon","form","message","actions","status","onAutoClose","className"];import"../../Theme/_color/Theme_color_gpnDark.css";import"./SnackBarItem.css";import{IconClose}from"@consta/icons/IconClose";import React,{useEffect,useState}from"react";import{useFlag}from"../../../hooks/useFlag/useFlag";import{cn}from"../../../utils/bem";import{isNumber,isString}from"../../../utils/type-guards";import{Button}from"../../Button/Button";import{Text}from"../../Text/Text";import{cnTheme}from"../../Theme/Theme";import{SnackBarActionButton}from"../SnackBarActionButton/SnackBarActionButton";import{SnackBarLine}from"../SnackBarLine/SnackBarLine";import{SnackBarTimer}from"../SnackBarTimer/SnackBarTimer";import{snackBarItemStatusDefault,snackBarPropFormDefault}from"../types";var defaultInitialTimerTime=3;export var cnSnackBarItem=cn("SnackBarItem");var getAutoCloseTime=function(a){return!!a&&("number"==typeof a?a:defaultInitialTimerTime)};export var SnackBarItemRender=function(a,b){var c=a.onClose,d=a.autoClose,e=a.showProgress,f=a.icon,g=a.form,h=void 0===g?snackBarPropFormDefault:g,i=a.message,j=a.actions,k=a.status,l=void 0===k?snackBarItemStatusDefault:k,m=a.onAutoClose,n=a.className,o=_objectWithoutProperties(a,_excluded),p=useState(null),q=_slicedToArray(p,2),r=q[0],s=q[1],t=useFlag(!1),u=_slicedToArray(t,2),v=u[0],w=u[1],x=w.on,y=w.off,z=useFlag(!1),A=_slicedToArray(z,2),B=A[0],C=A[1].on,D=function(a){return s(a)},E=getAutoCloseTime(d),F=e===void 0||!(isNumber(E)&&0<E),G=function(){m?m():null===c||void 0===c?void 0:c()};useEffect(function(){B||(v?r&&r.pause():r&&r.start())},[v,B,r]);var H=function(){C(),G()},I=c?function(){return c()}:void 0;return React.createElement("div",Object.assign({ref:b,className:cnSnackBarItem({status:l,showProgress:e,form:h},[cnTheme({color:"gpnDark"}),n]),onMouseEnter:E?function handleMouseEnter(){return x()}:void 0,onMouseLeave:E?function handleMouseLeave(){return y()}:void 0},o),E&&"line"!==e&&React.createElement(SnackBarTimer,{className:cnSnackBarItem("Timer"),onMount:D,onTimeIsOver:H,startTime:E,hidden:F}),f&&(F&&"timer"===e||"timer"!==e)&&React.createElement(f,{className:cnSnackBarItem("Icon"),size:"m"}),React.createElement("div",{className:cnSnackBarItem("Content")},isString(i)||isNumber(i)?React.createElement(Text,{view:"primary",size:"m",className:cnSnackBarItem("Message"),lineHeight:"s"},i):i,j&&React.createElement(SnackBarActionButton,{actions:j,className:cnSnackBarItem("ActionButton")})),c&&React.createElement(Button,{className:cnSnackBarItem("CloseButton"),view:"clear",iconLeft:IconClose,form:"round",type:"button",size:"xs",onClick:I}),E&&"line"===e&&React.createElement(SnackBarLine,{className:cnSnackBarItem("Line"),onMount:D,onTimeIsOver:H,startTime:E}))};export var SnackBarItem=React.forwardRef(SnackBarItemRender);
//# sourceMappingURL=SnackBarItem.js.map