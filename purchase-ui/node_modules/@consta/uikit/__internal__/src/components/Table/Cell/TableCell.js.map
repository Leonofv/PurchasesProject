{"version":3,"file":"TableCell.js","names":["React","cn","cnTableCell","verticalAligns","horizontalAligns","getCellClasses","props","column","showVerticalShadow","className","isSticky","isResized","type","isSortable","sortable","isHeader","isResizer","stickyOnTop","stickyOnLeft","isFilterable","filterable","isControl","control","withoutBorder","isClickable","isBorderTop","isBorderLeft","getWrapperClasses","wrapperClassName","withoutPadding","verticalAlign","horizontalAlign","align","wrap","TableCell","forwardRef","ref","style","onClick","onContextMenu","children","propsWithRole","role"],"sources":["../../../../../../src/components/Table/Cell/TableCell.tsx"],"sourcesContent":["import './TableCell.css';\n\nimport React from 'react';\n\nimport { cn } from '../../../utils/bem';\nimport { TableColumn, TableRow } from '../Table';\n\nconst cnTableCell = cn('TableCell');\n\nexport const verticalAligns = ['top', 'center', 'bottom'] as const;\nexport type VerticalAlign = typeof verticalAligns[number];\nexport const horizontalAligns = ['left', 'center', 'right'] as const;\nexport type HorizontalAlign = typeof horizontalAligns[number];\n\ntype Props<T extends TableRow> = {\n  column: TableColumn<T> & {\n    isSticky?: boolean;\n    isResized?: boolean;\n    filterable?: boolean;\n  };\n  onClick?: (e: React.SyntheticEvent) => void;\n  onContextMenu?: (e: React.SyntheticEvent) => void;\n  style?: React.CSSProperties;\n  className?: string;\n  wrapperClassName?: string;\n  children: React.ReactNode;\n  wrap?: 'truncate' | 'break';\n  showVerticalShadow?: boolean;\n  verticalAlign?: VerticalAlign;\n} & (\n  | {\n      type: 'header';\n      isSticky?: boolean;\n      isResized?: boolean;\n    }\n  | {\n      type: 'content';\n      isClickable?: boolean;\n      isBorderTop?: boolean;\n      isBorderLeft?: boolean;\n    }\n  | {\n      type: 'resizer';\n    }\n) &\n  React.RefAttributes<HTMLDivElement>;\n\ntype TableCell = <T extends TableRow>(\n  props: Props<T>,\n) => React.ReactElement | null;\n\nconst getCellClasses = <T extends TableRow>(props: Props<T>): string => {\n  const { column, showVerticalShadow, className } = props;\n\n  return cnTableCell(\n    {\n      showVerticalShadow,\n      isSticky: column.isSticky,\n      isResized: props.type === 'header' ? props.isResized : column.isResized,\n      isSortable: column.sortable,\n      isHeader: props.type === 'header',\n      isResizer: props.type === 'resizer',\n      stickyOnTop:\n        (props.type === 'header' && props.isSticky) || props.type === 'resizer',\n      stickyOnLeft: column.isSticky,\n      isFilterable: column.filterable,\n      isControl: Boolean(column.control),\n      withoutBorder: props.type === 'resizer',\n      isClickable: 'isClickable' in props && props.isClickable,\n      isBorderTop: 'isBorderTop' in props && props.isBorderTop,\n      isBorderLeft: 'isBorderLeft' in props && props.isBorderLeft,\n    },\n    [className],\n  );\n};\n\nconst getWrapperClasses = <T extends TableRow>(props: Props<T>): string => {\n  const { column, wrapperClassName } = props;\n\n  return cnTableCell(\n    'Wrapper',\n    {\n      withoutPadding: column.withoutPadding || props.type === 'resizer',\n      verticalAlign: props.verticalAlign,\n      horizontalAlign: column.align,\n      isHeader: props.type === 'header',\n      wrap: props.wrap,\n    },\n    [wrapperClassName],\n  );\n};\n\nexport const TableCell: TableCell = React.forwardRef((props, ref) => {\n  const { style, onClick, onContextMenu, children } = props;\n\n  const propsWithRole = onClick\n    ? {\n        role: 'button',\n        onClick,\n      }\n    : {\n        role: 'cell',\n      };\n\n  return (\n    <div\n      {...propsWithRole}\n      onContextMenu={onContextMenu}\n      ref={ref}\n      className={getCellClasses(props)}\n      style={style}\n    >\n      <div className={getWrapperClasses(props)}>{children}</div>\n    </div>\n  );\n});\n"],"mappings":"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"}