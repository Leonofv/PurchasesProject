{"version":3,"file":"TableHeader.js","names":["React","cn","Button","TableCell","getOptionsForFilters","TableFilterTooltip","cnTableHeader","levelTypes","TableHeader","isStickyHeader","headersWithMetaData","headerRowsHeights","headerRowsRefs","getStickyLeftOffset","stickyColumnsGrid","showVerticalCellShadow","headerVerticalAlign","getSortIcon","handleSortClick","handleFilterTogglerClick","handleCellClick","handleTooltipSave","filters","visibleFilter","selectedFilters","showHorizontalCellShadow","borderBetweenColumns","tableHeaderHeight","reduce","a","b","tableHeaderStyle","getLevelType","column","position","colSpan","smallTextSize","isColumnResized","headers","build","header","columns","forEach","col","find","head","title","push","some","isResized","getFilterPopover","accessor","curFilter","field","FilterComponent","component","name","filterComponentProps","props","onToggle","filterId","id","filterable","selected","type","handleFilterSave","filterValue","value","control","withVerticalBorder","map","columnIdx","style","gridColumnEnd","rowSpan","gridRowEnd","top","slice","level","ref","current","left","gridIndex","topHeaderGridIndex","e","isFirstColumn","isFirst","isFirstRow","isLastInColumn","isSortingActive","isFilterActive","verticalAlign","sortable","show"],"sources":["../../../../../../src/components/Table/Header/TableHeader.tsx"],"sourcesContent":["import './TableHeader.css';\n\nimport React from 'react';\n\nimport { cn } from '../../../utils/bem';\nimport { Button } from '../../Button/Button';\nimport { TableCell } from '../Cell/TableCell';\nimport {\n  FieldSelectedValues,\n  Filters,\n  getOptionsForFilters,\n  SelectedFilters,\n} from '../filtering';\nimport { TableFilterTooltip } from '../FilterTooltip/TableFilterTooltip';\nimport { Header } from '../helpers';\nimport {\n  ColumnMetaData,\n  HeaderVerticalAlign,\n  onCellClick,\n  TableColumn,\n  TableRow,\n} from '../Table';\n\nconst cnTableHeader = cn('TableHeader');\n\ntype TableCSSCustomProperty = {\n  '--table-header-height': string;\n};\n\nexport const levelTypes = ['high', 'low', 'default'] as const;\nexport type LevelType = typeof levelTypes[number];\n\ntype Props<T extends TableRow> = {\n  isStickyHeader: boolean;\n  headersWithMetaData: Array<Header<T> & ColumnMetaData>;\n  headerRowsHeights: Array<number>;\n  headerRowsRefs: React.MutableRefObject<Record<number, HTMLDivElement | null>>;\n  getStickyLeftOffset: (\n    columnIndex: number,\n    topHeaderGridIndex: number,\n  ) => number | undefined;\n  stickyColumnsGrid: number;\n  showVerticalCellShadow: boolean;\n  headerVerticalAlign: HeaderVerticalAlign;\n  getSortIcon: (column: Header<T>) => React.FC;\n  handleSortClick: (column: TableColumn<T>) => void;\n  handleFilterTogglerClick: (id: string) => () => void;\n  handleCellClick: onCellClick;\n  handleTooltipSave: (\n    field: string,\n    tooltipSelectedFilters: FieldSelectedValues,\n    value?: unknown,\n  ) => void;\n  filters: Filters<T> | undefined;\n  visibleFilter: string | null;\n  selectedFilters: SelectedFilters;\n  showHorizontalCellShadow: boolean;\n  borderBetweenColumns: boolean;\n};\n\nexport const TableHeader = <T extends TableRow>({\n  isStickyHeader,\n  headersWithMetaData,\n  headerRowsHeights,\n  headerRowsRefs,\n  getStickyLeftOffset,\n  stickyColumnsGrid,\n  showVerticalCellShadow,\n  headerVerticalAlign,\n  getSortIcon,\n  handleSortClick,\n  handleFilterTogglerClick,\n  handleCellClick,\n  handleTooltipSave,\n  filters,\n  visibleFilter,\n  selectedFilters,\n  showHorizontalCellShadow,\n  borderBetweenColumns,\n}: Props<T>): React.ReactElement => {\n  const tableHeaderHeight = headerRowsHeights.reduce(\n    (a: number, b: number) => a + b,\n    0,\n  );\n  const tableHeaderStyle: React.CSSProperties & TableCSSCustomProperty = {\n    '--table-header-height': `${tableHeaderHeight}px`,\n  };\n  const getLevelType = (column: Header<T> & ColumnMetaData): LevelType => {\n    if (Number(column.position!.colSpan) >= 1) return 'high';\n    if (column.position?.smallTextSize) return 'low';\n    return 'default';\n  };\n  const isColumnResized = (column: Header<T> & ColumnMetaData): boolean => {\n    const headers: Array<Header<T> & ColumnMetaData> = [];\n    const build = (header: Header<T> & ColumnMetaData) => {\n      if (!header.columns) {\n        headers.push(header);\n      } else {\n        header.columns.forEach((col) =>\n          build(\n            headersWithMetaData.find(\n              (head) => head.title === col.title,\n            ) as Header<T> & ColumnMetaData,\n          ),\n        );\n      }\n    };\n    build(column);\n    return headers.some((header) => header.isResized);\n  };\n\n  const getFilterPopover = (\n    column: Header<T> & ColumnMetaData,\n  ): React.ReactNode => {\n    if (!filters || !column.accessor) {\n      return null;\n    }\n    const curFilter = filters.find(({ field }) => field === column.accessor);\n    const FilterComponent = curFilter?.component?.name;\n    const filterComponentProps = curFilter?.component?.props ?? {};\n    const onToggle = handleFilterTogglerClick(column.accessor);\n    const filterId = curFilter?.id;\n    const handleFilterSave = (filterValue?: unknown) => {\n      if (filterId) {\n        handleTooltipSave(column.accessor!, [filterId], filterValue);\n      }\n      onToggle();\n    };\n\n    return column.filterable ? (\n      <TableFilterTooltip\n        field={column.accessor}\n        isOpened={visibleFilter === column.accessor}\n        options={getOptionsForFilters(filters, column.accessor)}\n        values={selectedFilters[column.accessor].selected || []}\n        onChange={handleTooltipSave}\n        onToggle={handleFilterTogglerClick(column.accessor)}\n        className={cnTableHeader('Icon', { type: 'filter' })}\n      >\n        {FilterComponent && (\n          <FilterComponent\n            {...filterComponentProps}\n            onConfirm={handleFilterSave}\n            filterValue={selectedFilters[column.accessor]?.value}\n            onCancel={handleFilterTogglerClick(column.accessor)}\n          />\n        )}\n      </TableFilterTooltip>\n    ) : null;\n  };\n\n  const control = (column: Header<T> & ColumnMetaData): React.ReactNode => {\n    if (column.control) {\n      return (\n        <div className={cnTableHeader('Ð¡ontrol')}>\n          {column.control({ column })}\n        </div>\n      );\n    }\n\n    return null;\n  };\n\n  return (\n    <>\n      <div\n        className={cnTableHeader('Row', {\n          withVerticalBorder: borderBetweenColumns,\n        })}\n      >\n        {headersWithMetaData.map(\n          (column: Header<T> & ColumnMetaData, columnIdx: number) => {\n            const style: React.CSSProperties = {};\n            if (column.position!.colSpan) {\n              style.gridColumnEnd = `span ${column.position!.colSpan}`;\n            }\n            if (column.position!.rowSpan) {\n              style.gridRowEnd = `span ${column.position!.rowSpan}`;\n            }\n            if (isStickyHeader) {\n              style.top = headerRowsHeights\n                .slice(0, column.position!.level)\n                .reduce((a: number, b: number) => a + b, 0);\n            }\n            return (\n              <TableCell\n                type=\"header\"\n                key={columnIdx}\n                ref={(ref: HTMLDivElement | null): void => {\n                  /* eslint-disable-next-line no-param-reassign */\n                  headerRowsRefs.current[columnIdx] = ref;\n                }}\n                style={{\n                  ...style,\n                  left: getStickyLeftOffset(\n                    column.position!.gridIndex,\n                    column.position!.topHeaderGridIndex,\n                  ),\n                }}\n                isSticky={isStickyHeader}\n                isResized={isColumnResized(column)}\n                column={column}\n                verticalAlign={headerVerticalAlign}\n                onContextMenu={(e: React.SyntheticEvent) =>\n                  handleCellClick({\n                    e,\n                    type: 'contextMenu',\n                    columnIdx,\n                    ref: { current: headerRowsRefs.current[columnIdx] },\n                  })\n                }\n                onClick={(e: React.SyntheticEvent) =>\n                  handleCellClick({\n                    e,\n                    type: 'click',\n                    columnIdx,\n                    ref: { current: headerRowsRefs.current[columnIdx] },\n                  })\n                }\n                className={cnTableHeader('Cell', {\n                  isFirstColumn: column.position?.isFirst,\n                  isFirstRow: column.position!.level === 0,\n                  isLastInColumn:\n                    column.position?.topHeaderGridIndex !==\n                    headersWithMetaData[columnIdx + 1]?.position\n                      ?.topHeaderGridIndex,\n                  level: getLevelType(column),\n                })}\n                showVerticalShadow={\n                  showVerticalCellShadow &&\n                  column.position!.gridIndex! +\n                    (column?.position!.colSpan || 1) ===\n                    stickyColumnsGrid\n                }\n              >\n                {column.title}\n\n                <div\n                  className={cnTableHeader('Buttons', {\n                    isSortingActive: column.isSortingActive,\n                    isFilterActive: column.isFilterActive,\n                    verticalAlign: headerVerticalAlign,\n                  })}\n                >\n                  {column.sortable && (\n                    <Button\n                      type=\"button\"\n                      size=\"xs\"\n                      iconSize=\"s\"\n                      view=\"clear\"\n                      onlyIcon\n                      onClick={(): void => handleSortClick(column)}\n                      iconLeft={getSortIcon(column)}\n                      className={cnTableHeader('Icon', { type: 'sort' })}\n                    />\n                  )}\n\n                  {getFilterPopover(column)}\n\n                  {control(column)}\n                </div>\n              </TableCell>\n            );\n          },\n        )}\n      </div>\n      {/*\n        Ð ÐµÐ½Ð´ÐµÑÐ¸Ð¼ ÑÐµÐ½Ñ Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²ÐºÐ° Ð¾ÑÐ´ÐµÐ»ÑÐ½Ð¾ ÑÑÐ¾Ð±Ñ Ð¸Ð·Ð±ÐµÐ¶Ð°ÑÑ Ð²Ð¾Ð·Ð¼Ð¾Ð¶Ð½ÑÑ Ð½Ð°Ð»Ð¾Ð¶ÐµÐ½Ð¸Ð¹\n        ÑÐµÐ½ÐµÐ¹ Ð´Ð»Ñ ÑÑÐµÐµÐº Ð·Ð°Ð³Ð¾Ð»Ð¾Ð²ÐºÐ° Ð¸ ÑÑÐµÐµÐº Ð¿ÑÐ¸ÐºÑÐµÐ¿Ð»ÐµÐ½Ð½ÑÑ ÑÐ»ÐµÐ²Ð°.\n      */}\n      <div className={cnTableHeader('ShadowWrapper')} style={tableHeaderStyle}>\n        <div\n          className={cnTableHeader('Shadow', {\n            show: showHorizontalCellShadow && isStickyHeader,\n          })}\n        />\n      </div>\n    </>\n  );\n};\n"],"mappings":"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"}