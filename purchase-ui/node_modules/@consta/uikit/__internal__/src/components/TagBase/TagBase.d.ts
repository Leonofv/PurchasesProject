import './TagBase.css';
import { IconComponent, IconPropSize } from '@consta/icons/Icon';
import React from 'react';
export declare const tagBasePropSize: readonly ["m", "xs", "s", "l"];
export declare const tagBasePropSizeDefault: "m";
export declare type TagBasePropSize = typeof tagBasePropSize[number];
export declare const tagBasePropGroupNumberValue: readonly [1, 2, 3, 4, 5, 6, 7, 8, 9];
export declare const tagBasePropGroupStringValue: readonly ["1", "2", "3", "4", "5", "6", "7", "8", "9"];
export declare const tagBasePropGroup: ("1" | 1 | 4 | 2 | 3 | 5 | 7 | 9 | "2" | "3" | 8 | "4" | "5" | "6" | "7" | "8" | 6 | "9")[];
export declare type TagBasePropGroup = typeof tagBasePropGroup[number];
export declare const tagBasePropView: readonly ["stroked", "filled"];
export declare const tagBasePropViewDefault: "stroked";
export declare type TagBasePropView = typeof tagBasePropView[number];
export declare type Props = {
    size?: TagBasePropSize;
    label: string;
    children?: never;
    view?: TagBasePropView;
    group?: TagBasePropGroup;
    onCancel?: React.MouseEventHandler<HTMLButtonElement>;
    icon?: IconComponent;
    iconSize?: IconPropSize;
    withAction?: boolean;
};
export declare const cnTagBase: import("@bem-react/classname").ClassNameFormatter;
export declare const TagBase: import("../../utils/types/PropsWithAsAttributes").ComponentWithAs<Props, "div">;
