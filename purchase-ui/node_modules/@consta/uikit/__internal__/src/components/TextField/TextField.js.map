{"version":3,"file":"TextField.js","names":["IconClear","IconEye","IconEyeClose","IconSelect","React","forwardRef","useCallback","useEffect","TextAreaAutoSize","usePropsHandler","FieldCaption","FieldLabel","useFlag","useForkRef","useMutableRef","useSortSteps","cn","getByMap","isString","getIncrementFlag","getTypeForRender","getValueByStep","inputValue","sizeMap","textFieldPropFormDefault","textFieldPropSizeDefault","textFieldPropViewDefault","COMPONENT_NAME","cnTextField","TextFieldRender","props","ref","textFieldRef","useRef","inputRef","className","type","value","defaultValue","onChange","id","name","rows","cols","minRows","maxRows","inputRefProp","maxLength","disabled","size","view","form","state","status","onBlur","onFocus","autoFocus","placeholder","leftSide","rightSide","autoComplete","withClearButton","incrementButtons","max","min","readOnly","required","step","tabIndex","ariaLabel","label","labelIcon","inputContainerRef","labelPosition","caption","iconSizeProp","iconSize","focused","onClick","onKeyDownProp","onKeyDown","onKeyDownCapture","onKeyPress","onKeyPressCapture","onKeyUp","onKeyUpCapture","onClear","otherProps","focus","setFocus","passwordVisible","setPasswordVisuble","withValue","setWithValue","onClickRef","onChangeRef","handleEyeClick","e","stopPropagation","toggle","current","LeftIcon","RightIcon","leftSideIsString","rightSideIsString","sortedSteps","handleChange","target","on","off","handleFocus","commonProps","handleBlur","toString","Eye","textareaProps","inputProps","Array","isArray","flag","preventDefault","newValue","handleClear","changeNumberValue","isIncrement","rootProps","position","fn","TextField"],"sources":["../../../../../src/components/TextField/TextField.tsx"],"sourcesContent":["import './TextField.css';\n\nimport { IconClear } from '@consta/icons/IconClear';\nimport { IconEye } from '@consta/icons/IconEye';\nimport { IconEyeClose } from '@consta/icons/IconEyeClose';\nimport { IconSelect } from '@consta/icons/IconSelect';\nimport React, { forwardRef, useCallback, useEffect } from 'react';\nimport TextAreaAutoSize from 'react-textarea-autosize';\n\nimport { usePropsHandler } from '##/components/EventInterceptor/usePropsHandler';\nimport { FieldCaption } from '##/components/FieldCaption/FieldCaption';\nimport { FieldLabel } from '##/components/FieldLabel/FieldLabel';\nimport { useFlag } from '##/hooks/useFlag/useFlag';\nimport { useForkRef } from '##/hooks/useForkRef/useForkRef';\nimport { useMutableRef } from '##/hooks/useMutableRef/useMutableRef';\nimport { useSortSteps } from '##/hooks/useSortSteps/useSortSteps';\nimport { cn } from '##/utils/bem';\nimport { getByMap } from '##/utils/getByMap';\nimport { isString } from '##/utils/type-guards';\n\nimport {\n  getIncrementFlag,\n  getTypeForRender,\n  getValueByStep,\n  inputValue,\n  sizeMap,\n} from './helpers';\nimport {\n  TextFieldComponent,\n  textFieldPropFormDefault,\n  TextFieldProps,\n  textFieldPropSizeDefault,\n  textFieldPropViewDefault,\n} from './types';\n\nexport const COMPONENT_NAME = 'TextField' as const;\nexport const cnTextField = cn(COMPONENT_NAME);\n\nexport const TextFieldRender = <TYPE extends string>(\n  props: TextFieldProps<TYPE>,\n  ref: React.Ref<HTMLDivElement>,\n) => {\n  const textFieldRef = React.useRef<HTMLDivElement>(null);\n  const inputRef = React.useRef<HTMLInputElement | HTMLTextAreaElement>(null);\n\n  const {\n    className,\n    type = 'text',\n    value,\n    defaultValue,\n    onChange,\n    id,\n    name,\n    rows,\n    cols,\n    minRows,\n    maxRows,\n    inputRef: inputRefProp,\n    maxLength,\n    disabled,\n    size = textFieldPropSizeDefault,\n    view = textFieldPropViewDefault,\n    form = textFieldPropFormDefault,\n    state,\n    status,\n    onBlur,\n    onFocus,\n    autoFocus = false,\n    placeholder,\n    leftSide,\n    rightSide,\n    autoComplete,\n    withClearButton,\n    incrementButtons: incrementButtonsProp = true,\n    max,\n    min,\n    readOnly,\n    required,\n    step = 1,\n    tabIndex,\n    ariaLabel,\n    label,\n    labelIcon,\n    inputContainerRef,\n    labelPosition = 'top',\n    caption,\n    iconSize: iconSizeProp,\n    focused,\n    onClick,\n    // onkey props\n    onKeyDown: onKeyDownProp,\n    onKeyDownCapture,\n    onKeyPress,\n    onKeyPressCapture,\n    onKeyUp,\n    onKeyUpCapture,\n    onClear,\n    ...otherProps\n  } = usePropsHandler(COMPONENT_NAME, props, textFieldRef);\n\n  const incrementButtons = type === 'number' ? incrementButtonsProp : false;\n\n  const [focus, setFocus] = useFlag(autoFocus);\n  const [passwordVisible, setPasswordVisuble] = useFlag();\n  const [withValue, setWithValue] = useFlag();\n\n  const onClickRef = useMutableRef(onClick);\n  const onChangeRef = useMutableRef(onChange);\n\n  const handleEyeClick = useCallback(\n    (e: React.MouseEvent<HTMLButtonElement, MouseEvent>) => {\n      e.stopPropagation();\n      setPasswordVisuble.toggle();\n      inputRef.current?.focus();\n    },\n    [],\n  );\n\n  const textarea = type === 'textarea';\n  const LeftIcon = leftSide;\n  const RightIcon = rightSide;\n  const leftSideIsString = isString(leftSide);\n  const rightSideIsString = isString(rightSide);\n  const iconSize = getByMap(sizeMap, size, iconSizeProp);\n\n  const sortedSteps = useSortSteps({\n    step,\n    min: Number(min),\n    max: Number(max),\n  });\n\n  const handleChange: React.ChangeEventHandler<\n    HTMLInputElement | HTMLTextAreaElement\n  > = useCallback(\n    (e) => {\n      !disabled &&\n        onChangeRef.current?.(e.target.value || null, {\n          e,\n          id,\n          name,\n        });\n\n      if (e.target.value) {\n        setWithValue.on();\n      } else {\n        setWithValue.off();\n      }\n    },\n    [id, name, disabled],\n  );\n\n  const handleBlur: React.FocusEventHandler<HTMLElement> = (e) => {\n    setFocus.off();\n    onBlur?.(e);\n  };\n\n  const handleFocus: React.FocusEventHandler<HTMLElement> = (e) => {\n    setFocus.on();\n    onFocus?.(e);\n  };\n\n  const commonProps = {\n    'className': cnTextField('Input'),\n    'value': inputValue(value),\n    'defaultValue': inputValue(defaultValue),\n    'onChange': handleChange,\n    maxLength,\n    disabled,\n    'onBlur': handleBlur,\n    'onFocus': handleFocus,\n    autoFocus,\n    placeholder,\n    autoComplete,\n    readOnly,\n    tabIndex,\n    name,\n    onKeyDownCapture,\n    onKeyPress,\n    onKeyPressCapture,\n    onKeyUp,\n    onKeyUpCapture,\n    'id': id ? id.toString() : undefined,\n    'aria-label': ariaLabel,\n  };\n\n  const Eye = passwordVisible ? IconEyeClose : IconEye;\n\n  const onKeyDown = (e: React.KeyboardEvent) => {\n    const flag = getIncrementFlag(e);\n    onKeyDownProp?.(e);\n    if (type === 'number' && typeof flag === 'boolean' && !disabled) {\n      e.preventDefault();\n\n      const newValue = getValueByStep(\n        sortedSteps,\n        inputRef.current?.value,\n        flag,\n        min,\n        max,\n      );\n\n      onChangeRef.current?.(newValue, {\n        e,\n        id,\n        name,\n      });\n\n      if (inputRef.current) {\n        inputRef.current.value = newValue;\n        setWithValue.on();\n      }\n    }\n  };\n\n  const textareaProps = {\n    rows,\n    cols,\n    minRows: minRows || rows,\n    maxRows: maxRows || rows,\n    ref: useForkRef([inputRef, inputRefProp]) as (\n      node: HTMLTextAreaElement,\n    ) => void,\n  };\n\n  const inputProps = {\n    type: getTypeForRender(type, passwordVisible),\n    max,\n    min,\n    step: !Array.isArray(sortedSteps) ? sortedSteps : 0,\n    onKeyDown,\n    ref: useForkRef([\n      inputRef,\n      inputRefProp,\n    ]) as React.RefCallback<HTMLInputElement>,\n  };\n\n  const handleClear = useCallback((e: React.MouseEvent<HTMLButtonElement>) => {\n    onChangeRef.current?.(null, {\n      e,\n      id,\n      name,\n    });\n\n    if (inputRef.current) {\n      inputRef.current.value = '';\n      setWithValue.off();\n    }\n  }, []);\n\n  const changeNumberValue = (\n    e: React.MouseEvent<HTMLButtonElement>,\n    isIncrement = true,\n  ) => {\n    const newValue = getValueByStep(\n      sortedSteps,\n      inputRef.current?.value,\n      isIncrement,\n      min,\n      max,\n    );\n    onChangeRef.current?.(newValue, {\n      e,\n      id,\n      name,\n    });\n    if (inputRef.current) {\n      inputRef.current.value = newValue;\n      setWithValue.on();\n    }\n  };\n\n  const rootProps = {\n    onClick: useCallback((e: React.MouseEvent<HTMLDivElement, MouseEvent>) => {\n      inputRef.current?.focus();\n      onClickRef.current?.(e);\n    }, []),\n  };\n\n  useEffect(() => {\n    setWithValue[inputRef.current?.value ? 'on' : 'off']();\n  }, [inputRef.current?.value]);\n\n  return (\n    <div\n      className={cnTextField({ labelPosition, size, view }, [className])}\n      ref={useForkRef([ref, textFieldRef])}\n      {...rootProps}\n      {...otherProps}\n    >\n      {label && (\n        <FieldLabel\n          as=\"label\"\n          htmlFor={id?.toString()}\n          icon={labelIcon}\n          required={required}\n          className={cnTextField('Label', { labelPosition })}\n          size={size}\n        >\n          {label}\n        </FieldLabel>\n      )}\n      <div className={cnTextField('Body')}>\n        <div\n          ref={inputContainerRef}\n          className={cnTextField('InputContainer', {\n            view,\n            form,\n            status: status || state,\n            disabled,\n            type,\n            focus: focus || focused,\n            withValue,\n            incrementButtons: type === 'number' && incrementButtons,\n          })}\n        >\n          {LeftIcon && (\n            <div\n              className={cnTextField('Side', {\n                position: 'left',\n                type: leftSideIsString ? 'string' : 'icon',\n              })}\n              title={typeof leftSide === 'string' ? leftSide : undefined}\n            >\n              {leftSideIsString ? (\n                leftSide\n              ) : (\n                <LeftIcon className={cnTextField('Icon')} size={iconSize} />\n              )}\n            </div>\n          )}\n          {textarea ? (\n            <TextAreaAutoSize {...commonProps} {...textareaProps} />\n          ) : (\n            <input {...commonProps} {...inputProps} />\n          )}\n\n          {incrementButtons && !disabled && (\n            <div className={cnTextField('Counter')}>\n              <button\n                className={cnTextField('CounterButton', { fn: 'increment' })}\n                onFocus={handleFocus}\n                onClick={(e) => changeNumberValue(e, true)}\n                type=\"button\"\n              >\n                <IconSelect size=\"xs\" />\n              </button>\n              <button\n                className={cnTextField('CounterButton')}\n                onFocus={handleFocus}\n                onClick={(e) => changeNumberValue(e, false)}\n                type=\"button\"\n              >\n                <IconSelect size=\"xs\" />\n              </button>\n            </div>\n          )}\n\n          {!incrementButtons && withValue && withClearButton && !disabled && (\n            <button\n              type=\"button\"\n              disabled={disabled}\n              tabIndex={-1}\n              onClick={onClear || handleClear}\n              className={cnTextField('ClearButton')}\n            >\n              <IconClear\n                size={sizeMap[size]}\n                className={cnTextField('ClearButtonIcon')}\n              />\n            </button>\n          )}\n\n          {type === 'password' && inputRef.current?.value && (\n            <button\n              className={cnTextField('ClearButton')}\n              type=\"button\"\n              onClick={handleEyeClick}\n            >\n              <Eye className={cnTextField('Icon')} size={iconSize} />\n            </button>\n          )}\n\n          {RightIcon && !incrementButtons && type !== 'password' && (\n            <div\n              className={cnTextField('Side', {\n                position: 'right',\n                type: rightSideIsString ? 'string' : 'icon',\n              })}\n              title={typeof rightSide === 'string' ? rightSide : undefined}\n            >\n              {rightSideIsString ? (\n                rightSide\n              ) : (\n                <RightIcon className={cnTextField('Icon')} size={iconSize} />\n              )}\n            </div>\n          )}\n        </div>\n        {caption && (\n          <FieldCaption\n            className={cnTextField('Caption')}\n            status={status || state}\n          >\n            {caption}\n          </FieldCaption>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport const TextField = forwardRef(TextFieldRender) as TextFieldComponent;\nexport * from './types';\n"],"mappings":"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"}