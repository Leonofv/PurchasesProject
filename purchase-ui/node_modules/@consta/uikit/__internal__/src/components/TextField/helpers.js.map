{"version":3,"file":"helpers.js","names":["sizeMap","xs","s","m","l","getValueByStepArray","steps","value","min","max","isIncrement","currentValue","length","i","getValueByStepNumber","step","minValue","maxValue","Number","isNaN","toFixed","toString","split","getIncrementFlag","event","key","getTypeForRender","type","passwordVible","getValueByStep","Array","isArray","inputValue"],"sources":["../../../../../src/components/TextField/helpers.ts"],"sourcesContent":["import { IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { TextFieldPropSize, TextFieldPropValue } from './types';\n\nexport const sizeMap: Record<TextFieldPropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 's',\n  l: 'm',\n};\n\nexport const getValueByStepArray = (\n  steps: number[],\n  value: string | null | undefined,\n  min: number | string | undefined,\n  max: number | string | undefined,\n  isIncrement: boolean,\n): number => {\n  const currentValue = Number(value ?? min);\n  const minValue = Number(min);\n  if (typeof value !== 'string') {\n    return typeof min !== 'undefined' ? minValue : 0;\n  }\n  if (currentValue < steps[0]) {\n    return steps[0];\n  }\n  if (currentValue > steps[steps.length - 1]) {\n    return steps[steps.length - 1];\n  }\n  if (\n    (!isIncrement && currentValue === steps[0]) ||\n    (isIncrement && currentValue === steps[steps.length - 1])\n  ) {\n    return currentValue;\n  }\n  for (let i = 0; i < steps.length; i++) {\n    if (\n      currentValue === steps[i] ||\n      (steps[i] < currentValue && steps[i + 1] > currentValue)\n    ) {\n      return steps[i + (isIncrement ? 1 : -1)];\n    }\n  }\n  return 0;\n};\n\nexport const getValueByStepNumber = (\n  step: number | string,\n  value: string | null | undefined,\n  min: number | string | undefined,\n  max: number | string | undefined,\n  isIncrement: boolean,\n): number => {\n  const minValue = Number(min);\n  const maxValue = Number(max);\n  const currentValue: number =\n    (typeof value === 'string' ? Number(value) : 0) +\n    Number(step) * (isIncrement ? 1 : -1);\n  if (!Number.isNaN(minValue) && currentValue <= minValue) {\n    return minValue;\n  }\n  if (!Number.isNaN(maxValue) && currentValue >= maxValue) {\n    return maxValue;\n  }\n  return Number(\n    currentValue.toFixed(\n      Number(\n        /* Необходимо для того, чтобы избежать ситуации, когда по нажатию\nна кнопку прибавляется число с погрешностью.\nЗдесь мы берем разрядность дробной части шага и ограничиваем\nрезультирующее число этой разрядностью */\n        Number(step).toString().split('.')[1]?.length,\n      ) || 0,\n    ),\n  );\n};\n\nexport const getIncrementFlag = (\n  event: React.KeyboardEvent,\n): boolean | null => {\n  if (event?.key !== 'ArrowUp' && event?.key !== 'ArrowDown') {\n    return null;\n  }\n  return event?.key === 'ArrowUp';\n};\n\nexport const getTypeForRender = (type: string, passwordVible: boolean) => {\n  if (type !== 'password') {\n    return type;\n  }\n  if (passwordVible) {\n    return 'text';\n  }\n  return 'password';\n};\n\nexport const getValueByStep = (\n  steps: number | number[],\n  value: string | null | undefined,\n  isIncrement: boolean,\n  min?: number | string,\n  max?: number | string,\n) => {\n  return (\n    Array.isArray(steps)\n      ? getValueByStepArray(steps, value, min, max, isIncrement)\n      : getValueByStepNumber(steps, value, min, max, isIncrement)\n  ).toString();\n};\n\nexport const inputValue = (value?: TextFieldPropValue) =>\n  value === null ? '' : value;\n"],"mappings":"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"}