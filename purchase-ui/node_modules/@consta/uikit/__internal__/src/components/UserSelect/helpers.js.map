{"version":3,"file":"helpers.js","names":["defaultGetItemKey","item","id","defaultGetItemLabel","label","defaultGetItemSubLabel","subLabel","defaultGetItemAvatarUrl","avatarUrl","defaultGetItemGroupKey","groupId","defaultGetItemDisabled","disabled","defaultGetGroupKey","group","defaultGetGroupLabel","isMultipleParams","params","multiple","isNotMultipleParams","withDefaultGetters","props","getItemLabel","getItemKey","getItemGroupKey","getItemDisabled","getGroupLabel","getGroupKey","getItemSubLabel","getItemAvatarUrl","searchCompare","searchValue","compare","toLocaleLowerCase","indexOf","clearSizeMap","xs","s","m","l","iconSizeMap"],"sources":["../../../../../src/components/UserSelect/helpers.ts"],"sourcesContent":["import { IconComponent, IconPropSize } from '@consta/icons/Icon';\nimport React from 'react';\n\nimport { PropsWithHTMLAttributesAndRef } from '../../utils/types/PropsWithHTMLAttributes';\nimport {\n  PropForm,\n  PropSize,\n  PropStatus,\n  PropView,\n  RenderItemProps,\n} from '../SelectComponents/types';\n\nexport type UserSelectItemDefault = {\n  label: string;\n  id: string | number;\n  subLabel?: string;\n  avatarUrl?: string;\n  groupId?: string | number;\n  disabled?: boolean;\n};\n\nexport type UserSelectGroupDefault = {\n  label: string;\n  id: string | number;\n};\n\ntype UserSelectRenderValueProps<ITEM> = {\n  item: ITEM;\n  handleRemove?: (e: React.SyntheticEvent) => void;\n};\n\nexport type UserSelectPropGetItemLabel<ITEM> = (item: ITEM) => string;\nexport type UserSelectPropGetItemSubLabel<ITEM> = (\n  item: ITEM,\n) => string | undefined;\nexport type UserSelectPropGetItemAvatarUrl<ITEM> = (\n  item: ITEM,\n) => string | undefined;\nexport type UserSelectPropGetItemKey<ITEM> = (item: ITEM) => string | number;\nexport type UserSelectPropGetItemGroupKey<ITEM> = (\n  item: ITEM,\n) => string | number | undefined;\nexport type UserSelectPropGetItemDisabled<ITEM> = (\n  item: ITEM,\n) => boolean | undefined;\nexport type UserSelectPropGetGroupKey<GROUP> = (\n  group: GROUP,\n) => string | number;\nexport type UserSelectPropGetGroupLabel<GROUP> = (group: GROUP) => string;\n\ntype UserSelectPropSearchFunction<ITEM> = (\n  item: ITEM,\n  searchValue: string,\n) => boolean;\ntype UserSelectPropOnChange<ITEM, MULTIPLE extends boolean> = (\n  value: (MULTIPLE extends true ? ITEM[] : ITEM) | null,\n  props: {\n    e: React.SyntheticEvent;\n  },\n) => void;\ntype UserSelectPropValue<ITEM, MULTIPLE extends boolean> =\n  | (MULTIPLE extends true ? ITEM[] : ITEM)\n  | null\n  | undefined;\n\nexport type UserSelectPropRenderItem<ITEM> = (\n  props: RenderItemProps<ITEM>,\n) => React.ReactElement | null;\nexport type UserSelectPropRenderValue<ITEM> = (\n  props: UserSelectRenderValueProps<ITEM>,\n) => React.ReactElement | null;\n\nexport type UserSelectProps<\n  ITEM = UserSelectItemDefault,\n  GROUP = UserSelectGroupDefault,\n  MULTIPLE extends boolean = false,\n> = PropsWithHTMLAttributesAndRef<\n  {\n    disabled?: boolean;\n    form?: PropForm;\n    size?: Exclude<PropSize, 'xs'>;\n    view?: PropView;\n    dropdownForm?: 'default' | 'brick' | 'round';\n    placeholder?: string;\n    ariaLabel?: string;\n    dropdownClassName?: string;\n    status?: PropStatus;\n    dropdownRef?: React.RefObject<HTMLDivElement>;\n    name?: string;\n    items: ITEM[];\n    required?: boolean;\n    isLoading?: boolean;\n    renderItem?: UserSelectPropRenderItem<ITEM>;\n    renderValue?: UserSelectPropRenderValue<ITEM>;\n    onFocus?: React.FocusEventHandler<HTMLInputElement>;\n    onBlur?: React.FocusEventHandler<HTMLInputElement>;\n    onCreate?: (label: string, props: { e: React.SyntheticEvent }) => void;\n    inputRef?: React.RefObject<HTMLInputElement>;\n    labelForNotFound?: string;\n    labelForCreate?: string;\n    labelForEmptyItems?: string;\n    searchFunction?: UserSelectPropSearchFunction<ITEM>;\n    searchValue?: string;\n    multiple?: MULTIPLE;\n    value?: UserSelectPropValue<ITEM, MULTIPLE>;\n    onChange: UserSelectPropOnChange<ITEM, MULTIPLE>;\n    groups?: GROUP[];\n    getItemLabel?: UserSelectPropGetItemLabel<ITEM>;\n    getItemSubLabel?: UserSelectPropGetItemSubLabel<ITEM>;\n    getItemAvatarUrl?: UserSelectPropGetItemAvatarUrl<ITEM>;\n    getItemKey?: UserSelectPropGetItemKey<ITEM>;\n    getItemGroupKey?: UserSelectPropGetItemGroupKey<ITEM>;\n    getItemDisabled?: UserSelectPropGetItemDisabled<ITEM>;\n    getGroupLabel?: UserSelectPropGetGroupLabel<GROUP>;\n    getGroupKey?: UserSelectPropGetGroupKey<GROUP>;\n    label?: string;\n    labelIcon?: IconComponent;\n    caption?: string;\n    labelPosition?: 'top' | 'left';\n    virtualScroll?: boolean;\n    onScrollToBottom?: (lenght: number) => void;\n    onSearchValueChange?: (value: string) => void;\n    onDropdownOpen?: (isOpen: boolean) => void;\n    dropdownOpen?: boolean;\n    ignoreOutsideClicksRefs?: ReadonlyArray<React.RefObject<HTMLElement>>;\n  },\n  HTMLDivElement\n> &\n  (ITEM extends { label: UserSelectItemDefault['label'] }\n    ? {}\n    : { getItemLabel: UserSelectPropGetItemLabel<ITEM> }) &\n  (ITEM extends { id: UserSelectItemDefault['id'] }\n    ? {}\n    : { getItemKey: UserSelectPropGetItemKey<ITEM> }) &\n  (GROUP extends { label: UserSelectGroupDefault['label'] }\n    ? {}\n    : { getGroupLabel: UserSelectPropGetGroupLabel<GROUP> }) &\n  (GROUP extends { id: UserSelectGroupDefault['id'] }\n    ? {}\n    : { getGroupKey: UserSelectPropGetGroupKey<GROUP> });\n\nexport type UserSelectComponent = <\n  ITEM = UserSelectItemDefault,\n  GROUP = UserSelectGroupDefault,\n  MULTIPLE extends boolean = false,\n>(\n  props: UserSelectProps<ITEM, GROUP, MULTIPLE>,\n) => React.ReactElement | null;\n\nexport const defaultGetItemKey: UserSelectPropGetItemKey<\n  UserSelectItemDefault\n> = (item) => item.id;\nexport const defaultGetItemLabel: UserSelectPropGetItemLabel<\n  UserSelectItemDefault\n> = (item) => item.label;\nexport const defaultGetItemSubLabel: UserSelectPropGetItemSubLabel<\n  UserSelectItemDefault\n> = (item) => item.subLabel;\nexport const defaultGetItemAvatarUrl: UserSelectPropGetItemAvatarUrl<\n  UserSelectItemDefault\n> = (item) => item.avatarUrl;\nexport const defaultGetItemGroupKey: UserSelectPropGetItemGroupKey<\n  UserSelectItemDefault\n> = (item) => item.groupId;\nexport const defaultGetItemDisabled: UserSelectPropGetItemDisabled<\n  UserSelectItemDefault\n> = (item) => item.disabled;\n\nexport const defaultGetGroupKey: UserSelectPropGetGroupKey<\n  UserSelectGroupDefault\n> = (group) => group.id;\nexport const defaultGetGroupLabel: UserSelectPropGetGroupLabel<\n  UserSelectGroupDefault\n> = (group) => group.label;\n\nexport const isMultipleParams = <ITEM, GROUP>(\n  params: UserSelectProps<ITEM, GROUP, boolean>,\n): params is UserSelectProps<ITEM, GROUP, true> => {\n  return !!params.multiple;\n};\n\nexport const isNotMultipleParams = <ITEM, GROUP>(\n  params: UserSelectProps<ITEM, GROUP, boolean>,\n): params is UserSelectProps<ITEM, GROUP, false> => {\n  return !params.multiple;\n};\n\nexport function withDefaultGetters<\n  ITEM = UserSelectItemDefault,\n  GROUP = UserSelectGroupDefault,\n  MULTIPLE extends boolean = false,\n>(props: UserSelectProps<ITEM, GROUP, MULTIPLE>) {\n  return {\n    ...props,\n    getItemLabel: props.getItemLabel || defaultGetItemLabel,\n    getItemKey: props.getItemKey || defaultGetItemKey,\n    getItemGroupKey: props.getItemGroupKey || defaultGetItemGroupKey,\n    getItemDisabled: props.getItemDisabled || defaultGetItemDisabled,\n    getGroupLabel: props.getGroupLabel || defaultGetGroupLabel,\n    getGroupKey: props.getGroupKey || defaultGetGroupKey,\n    getItemSubLabel: props.getItemSubLabel || defaultGetItemSubLabel,\n    getItemAvatarUrl: props.getItemAvatarUrl || defaultGetItemAvatarUrl,\n  };\n}\n\nexport const searchCompare = (\n  searchValue: string,\n  compare?: string,\n): boolean => {\n  if (!compare) {\n    return false;\n  }\n\n  return (\n    compare.toLocaleLowerCase().indexOf(searchValue.toLocaleLowerCase()) !== -1\n  );\n};\n\nexport const clearSizeMap: Record<PropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 's',\n  l: 'm',\n};\n\nexport const iconSizeMap: Record<PropSize, IconPropSize> = {\n  xs: 'xs',\n  s: 's',\n  m: 'm',\n  l: 'm',\n};\n"],"mappings":"qqBAqJA,MAAO,IAAMA,kBAEZ,CAAG,SAACC,CAAD,QAAUA,EAAI,CAACC,EAAf,CAFG,CAGP,MAAO,IAAMC,oBAEZ,CAAG,SAACF,CAAD,QAAUA,EAAI,CAACG,KAAf,CAFG,CAGP,MAAO,IAAMC,uBAEZ,CAAG,SAACJ,CAAD,QAAUA,EAAI,CAACK,QAAf,CAFG,CAGP,MAAO,IAAMC,wBAEZ,CAAG,SAACN,CAAD,QAAUA,EAAI,CAACO,SAAf,CAFG,CAGP,MAAO,IAAMC,uBAEZ,CAAG,SAACR,CAAD,QAAUA,EAAI,CAACS,OAAf,CAFG,CAGP,MAAO,IAAMC,uBAEZ,CAAG,SAACV,CAAD,QAAUA,EAAI,CAACW,QAAf,CAFG,CAIP,MAAO,IAAMC,mBAEZ,CAAG,SAACC,CAAD,QAAWA,EAAK,CAACZ,EAAjB,CAFG,CAGP,MAAO,IAAMa,qBAEZ,CAAG,SAACD,CAAD,QAAWA,EAAK,CAACV,KAAjB,CAFG,CAIP,MAAO,IAAMY,iBAAgB,CAAG,SAC9BC,CAD8B,CAEmB,CACjD,MAAO,CAAC,CAACA,CAAM,CAACC,QACjB,CAJM,CAMP,MAAO,IAAMC,oBAAmB,CAAG,SACjCF,CADiC,CAEiB,CAClD,MAAO,CAACA,CAAM,CAACC,QAChB,CAJM,CAMP,MAAO,SAASE,mBAAT,CAILC,CAJK,CAI0C,CAC/C,sCACKA,CADL,MAEEC,YAAY,CAAED,CAAK,CAACC,YAAN,EAAsBnB,mBAFtC,CAGEoB,UAAU,CAAEF,CAAK,CAACE,UAAN,EAAoBvB,iBAHlC,CAIEwB,eAAe,CAAEH,CAAK,CAACG,eAAN,EAAyBf,sBAJ5C,CAKEgB,eAAe,CAAEJ,CAAK,CAACI,eAAN,EAAyBd,sBAL5C,CAMEe,aAAa,CAAEL,CAAK,CAACK,aAAN,EAAuBX,oBANxC,CAOEY,WAAW,CAAEN,CAAK,CAACM,WAAN,EAAqBd,kBAPpC,CAQEe,eAAe,CAAEP,CAAK,CAACO,eAAN,EAAyBvB,sBAR5C,CASEwB,gBAAgB,CAAER,CAAK,CAACQ,gBAAN,EAA0BtB,uBAT9C,EAWD,CAED,MAAO,IAAMuB,cAAa,CAAG,SAC3BC,CAD2B,CAE3BC,CAF2B,CAGf,SACPA,CADO,EAM+D,CAAC,CAA1E,GAAAA,CAAO,CAACC,iBAAR,GAA4BC,OAA5B,CAAoCH,CAAW,CAACE,iBAAZ,EAApC,CAEH,CAXM,CAaP,MAAO,IAAME,aAA4C,CAAG,CAC1DC,EAAE,CAAE,IADsD,CAE1DC,CAAC,CAAE,GAFuD,CAG1DC,CAAC,CAAE,GAHuD,CAI1DC,CAAC,CAAE,GAJuD,CAArD,CAOP,MAAO,IAAMC,YAA2C,CAAG,CACzDJ,EAAE,CAAE,IADqD,CAEzDC,CAAC,CAAE,GAFsD,CAGzDC,CAAC,CAAE,GAHsD,CAIzDC,CAAC,CAAE,GAJsD,CAApD"}