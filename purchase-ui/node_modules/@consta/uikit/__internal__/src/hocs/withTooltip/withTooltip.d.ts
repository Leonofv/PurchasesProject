import React from 'react';
import { TooltipProps as TooltipComponentProps } from "../../components/Tooltip";
export declare const withTooltipPropMode: readonly ["mouseover", "click"];
export declare const withTooltipPropModeDefault: "mouseover";
declare type WithTooltipPropMode = typeof withTooltipPropMode[number];
export declare const appearTimeoutDefault = 400;
export declare const exitTimeoutDefault = 200;
declare type ComponentProps = {
    onClick?: React.MouseEventHandler;
    onMouseEnter?: React.MouseEventHandler;
    onMouseLeave?: React.MouseEventHandler;
};
export declare type TooltipProps = Omit<TooltipComponentProps, 'children' | 'ref'> & {
    tooltipContent?: React.ReactNode;
    /** @deprecated use tooltipContent */
    content?: React.ReactNode;
    mode?: WithTooltipPropMode;
    closeOnClickOutside?: boolean;
    appearTimeout?: number;
    exitTimeout?: number;
};
export declare type WithTooltipProps<Props> = Omit<Props, 'tooltipProps'> & {
    tooltipProps?: TooltipProps;
};
export declare function withTooltip(hocProps?: TooltipProps): <COMPONENT_TYPE, COMPONENT_PROPS extends ComponentProps>(Component: COMPONENT_TYPE) => COMPONENT_TYPE | React.ComponentType<{
    tooltipProps?: TooltipProps | undefined;
}>;
export {};
