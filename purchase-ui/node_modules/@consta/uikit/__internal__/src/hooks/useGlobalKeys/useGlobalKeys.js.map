{"version":3,"file":"useGlobalKeys.js","names":["useEffect","useRef","useGlobalKeys","keyHandlers","eventType","keyHandlersRef","current","handler","e","userHandler","code","key","document","addEventListener","removeEventListener"],"sources":["../../../../../src/hooks/useGlobalKeys/useGlobalKeys.ts"],"sourcesContent":["import { useEffect, useRef } from 'react';\n\nimport { KeyCode } from '##/utils/types/KeyCode';\n\nexport type KeyHandlers = Partial<\n  Record<KeyCode, (e: KeyboardEvent) => void>\n> & {\n  [key: string]: (e: KeyboardEvent) => void;\n};\n\nexport type EventType = 'keyup' | 'keydown';\n\nexport const useGlobalKeys = (\n  keyHandlers: KeyHandlers,\n  eventType: EventType = 'keyup',\n) => {\n  const keyHandlersRef = useRef<KeyHandlers>({});\n\n  useEffect(() => {\n    keyHandlersRef.current = keyHandlers;\n  }, [keyHandlers]);\n\n  useEffect(() => {\n    const handler = (e: KeyboardEvent) => {\n      const { current } = keyHandlersRef;\n\n      const userHandler =\n        current[e.code as KeyCode] || current[e.key as KeyCode];\n      userHandler && userHandler(e);\n    };\n\n    document.addEventListener(eventType, handler);\n\n    return () => {\n      document.removeEventListener(eventType, handler);\n    };\n  }, [eventType]);\n};\n"],"mappings":"AAAA,OAASA,SAAT,CAAoBC,MAApB,KAAkC,OAAlC,CAYA,MAAO,IAAMC,cAAa,CAAG,SAC3BC,CAD2B,CAGxB,IADHC,EACG,wDADoB,OACpB,CACGC,CAAc,CAAGJ,MAAM,CAAc,EAAd,CAD1B,CAGHD,SAAS,CAAC,UAAM,CACdK,CAAc,CAACC,OAAf,CAAyBH,CAC1B,CAFQ,CAEN,CAACA,CAAD,CAFM,CAHN,CAOHH,SAAS,CAAC,UAAM,CACd,GAAMO,EAAO,CAAG,SAACC,CAAD,CAAsB,IAC5BF,EAD4B,CAChBD,CADgB,CAC5BC,OAD4B,CAG9BG,CAAW,CACfH,CAAO,CAACE,CAAC,CAACE,IAAH,CAAP,EAA8BJ,CAAO,CAACE,CAAC,CAACG,GAAH,CAJH,CAKpCF,CAAW,EAAIA,CAAW,CAACD,CAAD,CAC3B,CAND,CAUA,MAFAI,SAAQ,CAACC,gBAAT,CAA0BT,CAA1B,CAAqCG,CAArC,CAEA,CAAO,UAAM,CACXK,QAAQ,CAACE,mBAAT,CAA6BV,CAA7B,CAAwCG,CAAxC,CACD,CACF,CAdQ,CAcN,CAACH,CAAD,CAdM,CAeV,CAzBM"}