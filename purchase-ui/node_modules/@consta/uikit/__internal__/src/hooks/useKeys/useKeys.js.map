{"version":3,"file":"useKeys.js","names":["useCallback","useMutableRef","useKeys","props","propsRef","e","current","isActive","keys","onEvent","code","key"],"sources":["../../../../../src/hooks/useKeys/useKeys.ts"],"sourcesContent":["import { useCallback } from 'react';\n\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { KeyCode } from '##/utils/types/KeyCode';\n\ntype KeyHandlers = Partial<Record<KeyCode, React.KeyboardEventHandler>> & {\n  [key: string]: React.KeyboardEventHandler;\n};\n\ntype UseKeysProps = {\n  keys: KeyHandlers;\n  onEvent?: React.KeyboardEventHandler;\n  isActive: boolean;\n};\n\nexport const useKeys = (props: UseKeysProps): React.KeyboardEventHandler => {\n  const propsRef = useMutableRef(props);\n  return useCallback((e) => {\n    const { isActive, keys, onEvent } = propsRef.current;\n    if (isActive) {\n      (keys[e.code as KeyCode] || keys[e.key as KeyCode])?.(e);\n    }\n    onEvent?.(e);\n  }, []);\n};\n"],"mappings":"AAAA,OAASA,WAAT,KAA4B,OAA5B,CAEA,OAASC,aAAT,wBAaA,MAAO,IAAMC,QAAO,CAAG,SAACC,CAAD,CAAqD,CAC1E,GAAMC,EAAQ,CAAGH,aAAa,CAACE,CAAD,CAA9B,CACA,MAAOH,YAAW,CAAC,SAACK,CAAD,CAAO,CACxB,MAAoCD,CAAQ,CAACE,OAA7C,CAAQC,CAAR,GAAQA,QAAR,CAAkBC,CAAlB,GAAkBA,IAAlB,CAAwBC,CAAxB,GAAwBA,OAAxB,CACA,GAAIF,CAAJ,CAAc,iBACXC,CAAI,CAACH,CAAC,CAACK,IAAH,CAAJ,EAA2BF,CAAI,CAACH,CAAC,CAACM,GAAH,CADpB,qBACZ,EAAsDN,CAAtD,CACD,CAJuB,OAKxBI,CALwB,WAKxBA,CALwB,QAKxBA,CAAO,CAAGJ,CAAH,CACR,CANiB,CAMf,EANe,CAOnB,CATM"}