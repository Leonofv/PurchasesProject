{"version":3,"file":"useKeysRef.js","names":["useEffect","useMutableRef","useKeysRef","params","ref","keys","isActive","eventType","fn","e","code","key","current","addEventListener","removeEventListener"],"sources":["../../../../../src/hooks/useKeysRef/useKeysRef.ts"],"sourcesContent":["import React, { useEffect } from 'react';\n\nimport { useMutableRef } from '##/hooks/useMutableRef';\nimport { KeyCode } from '##/utils/types/KeyCode';\n\nexport type KeyHandlers = Partial<\n  Record<KeyCode, (e: KeyboardEvent) => void>\n> & {\n  [key: string]: (e: KeyboardEvent) => void;\n};\n\ntype UseKeysProps = {\n  ref?: React.RefObject<HTMLElement>;\n  keys: KeyHandlers;\n  isActive?: boolean;\n  eventHandler?: (event: KeyboardEvent) => void;\n  eventType?: 'keypress' | 'keydown' | 'keyup';\n};\n\nexport const useKeysRef = (params: UseKeysProps) => {\n  const { ref, keys, isActive = false, eventType = 'keydown' } = params;\n\n  const fn = useMutableRef((e: KeyboardEvent) => {\n    if (isActive) {\n      (keys[e.code as KeyCode] || keys[e.key as KeyCode])?.(e);\n    }\n  });\n\n  useEffect(() => {\n    ref?.current?.addEventListener(eventType, fn.current);\n\n    return () => {\n      ref?.current?.removeEventListener(eventType, fn.current);\n    };\n  }, [ref?.current, eventType]);\n};\n"],"mappings":"AAAA,OAAgBA,SAAhB,KAAiC,OAAjC,CAEA,OAASC,aAAT,wBAiBA,MAAO,IAAMC,WAAU,CAAG,SAACC,CAAD,CAA0B,IAC1CC,EAD0C,CACaD,CADb,CAC1CC,GAD0C,CACrCC,CADqC,CACaF,CADb,CACrCE,IADqC,GACaF,CADb,CAC/BG,QAD+B,GACaH,CADb,CACbI,SADa,CACbA,CADa,YACD,SADC,GAG5CC,CAAE,CAAGP,aAAa,CAAC,SAACQ,CAAD,CAAsB,CAC7C,iBAAc,iBACXJ,CAAI,CAACI,CAAC,CAACC,IAAH,CAAJ,EAA2BL,CAAI,CAACI,CAAC,CAACE,GAAH,CADpB,qBACZ,EAAsDF,CAAtD,CACD,CACF,CAJuB,CAH0B,CASlDT,SAAS,CAAC,UAAM,OAGd,cAFAI,CAEA,WAFAA,CAEA,YAFAA,CAAG,CAAEQ,OAEL,qBAFA,EAAcC,gBAAd,CAA+BN,CAA/B,CAA0CC,CAAE,CAACI,OAA7C,CAEA,CAAO,UAAM,cACXR,CADW,WACXA,CADW,YACXA,CAAG,CAAEQ,OADM,qBACX,EAAcE,mBAAd,CAAkCP,CAAlC,CAA6CC,CAAE,CAACI,OAAhD,CACD,CACF,CANQ,CAMN,QAACR,CAAD,WAACA,CAAD,QAACA,CAAG,CAAEQ,OAAN,CAAeL,CAAf,CANM,CAOV,CAhBM"}