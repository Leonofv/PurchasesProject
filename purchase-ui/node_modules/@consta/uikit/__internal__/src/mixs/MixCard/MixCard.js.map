{"version":3,"file":"MixCard.js","names":["cn","cnMixSpace","formMap","cardStatus","cnCard","cnMixCard","props","classNames","verticalSpace","horizontalSpace","otherProps","pV","pH"],"sources":["../../../../../src/mixs/MixCard/MixCard.tsx"],"sourcesContent":["import './MixCard.css';\n\nimport { cn } from '../../utils/bem';\nimport { cnMixSpace } from '../MixSpace/MixSpace';\n\ntype Size = 'xs' | 's' | 'm' | 'l' | 'xl' | '2xl' | '3xl' | '4xl' | '5xl';\n\nconst formMap = ['round', 'square'] as const;\ntype FormMap = typeof formMap[number];\n\nconst cardStatus = ['alert', 'success', 'warning'] as const;\ntype CardStatus = typeof cardStatus[number] | string;\n\ntype Props = {\n  shadow?: boolean;\n  border?: boolean;\n  verticalSpace?: Size;\n  horizontalSpace?: Size;\n  form?: FormMap;\n  status?: CardStatus;\n};\n\ntype CnCard = (props: Props, classNames?: Array<string | undefined>) => string;\n\nconst cnCard = cn('MixCard');\n\nexport const cnMixCard: CnCard = (props, classNames = []) => {\n  const { verticalSpace, horizontalSpace, ...otherProps } = props;\n  return cnCard({ ...otherProps }, [\n    cnMixSpace({ pV: verticalSpace, pH: horizontalSpace }),\n    ...classNames,\n  ]);\n};\n"],"mappings":"q3BAAA,sBAEA,OAASA,EAAT,uBACA,OAASC,UAAT,4B,GAIMC,QAAO,CAAG,CAAC,OAAD,CAAU,QAAV,C,CAGVC,UAAU,CAAG,CAAC,OAAD,CAAU,SAAV,CAAqB,SAArB,C,CAcbC,MAAM,CAAGJ,EAAE,CAAC,SAAD,C,CAEjB,MAAO,IAAMK,UAAiB,CAAG,SAACC,CAAD,CAA4B,IAApBC,EAAoB,wDAAP,EAAO,CACnDC,CADmD,CACDF,CADC,CACnDE,aADmD,CACpCC,CADoC,CACDH,CADC,CACpCG,eADoC,CAChBC,CADgB,0BACDJ,CADC,YAE3D,MAAOF,OAAM,kBAAMM,CAAN,GACXT,UAAU,CAAC,CAAEU,EAAE,CAAEH,CAAN,CAAqBI,EAAE,CAAEH,CAAzB,CAAD,CADC,4BAERF,CAFQ,GAId,CANM"}