{"version":3,"file":"isDisableDate.js","names":["clearTime","date","type","params","hours","minutes","seconds","miliseconds","copyDate","Date","setHours","setMinutes","setSeconds","setMilliseconds","isInRangeWithoutTime","min","max","minTime","getTime","maxTime","dateTime","isEqualDates","firstDate","secondDate","mode","timeType","years","getFullYear","months","getMonth","dates","getDate","isInRange","minDate","maxDate","compare","dateTimes","isDisableDate","disableDates","find","compareDate"],"sources":["../../../../../src/utils/date/isDisableDate.ts"],"sourcesContent":["import {\n  DateTimePropDisableDates,\n  DateTimePropType,\n} from '##/components/DateTime';\n\nconst clearTime = (\n  date: Date,\n  type: 'start' | 'end',\n  params?: {\n    hours?: boolean;\n    minutes?: boolean;\n    seconds?: boolean;\n    miliseconds?: boolean;\n  },\n) => {\n  const { hours, minutes, seconds, miliseconds } = params ?? {};\n  const copyDate = new Date(date);\n  hours && copyDate.setHours(type === 'start' ? 0 : 23);\n  minutes && copyDate.setMinutes(type === 'start' ? 0 : 59);\n  seconds && copyDate.setSeconds(type === 'start' ? 0 : 59);\n  miliseconds && copyDate.setMilliseconds(type === 'start' ? 0 : 999);\n  return copyDate;\n};\n\nconst isInRangeWithoutTime = (date: Date, min: Date, max: Date) => {\n  const minTime = min.getTime();\n  const maxTime = max.getTime();\n  const dateTime = [\n    clearTime(date, 'start', {\n      hours: true,\n      minutes: true,\n      seconds: true,\n      miliseconds: true,\n    }).getTime(),\n    clearTime(date, 'end', {\n      hours: true,\n      minutes: true,\n      seconds: true,\n      miliseconds: true,\n    }).getTime(),\n  ];\n  return (\n    minTime <= dateTime[0] &&\n    dateTime[0] <= maxTime &&\n    minTime <= dateTime[1] &&\n    dateTime[1] <= maxTime\n  );\n};\n\nexport const isEqualDates = (\n  firstDate: Date,\n  secondDate: Date,\n  mode: DateTimePropType | undefined,\n  timeType: 'hours' | 'minutes' | 'seconds' | undefined = 'hours',\n) => {\n  if (mode === 'time') {\n    if (timeType === 'seconds') {\n      return (\n        clearTime(firstDate, 'start', { miliseconds: true }).getTime() ===\n        clearTime(secondDate, 'start', { miliseconds: true }).getTime()\n      );\n    }\n    return false;\n  }\n  const years = [firstDate.getFullYear(), secondDate.getFullYear()];\n  const months = [firstDate.getMonth(), secondDate.getMonth()];\n  const dates = [firstDate.getDate(), secondDate.getDate()];\n\n  if (mode === 'year') {\n    return years[0] === years[1];\n  }\n  if (mode === 'month') {\n    return months[0] === months[1] && years[0] === years[1];\n  }\n\n  return (\n    dates[0] === dates[1] && months[0] === months[1] && years[0] === years[1]\n  );\n};\n\nconst isInRange = (\n  date: Date,\n  minDate: Date,\n  maxDate: Date,\n  mode: DateTimePropType | undefined,\n  timeType: 'hours' | 'minutes' | 'seconds' | undefined = 'hours',\n) => {\n  if (mode === 'year' || mode === 'month' || mode === 'date') {\n    return isInRangeWithoutTime(date, minDate, maxDate);\n  }\n  const minTime = minDate.getTime();\n  const maxTime = maxDate.getTime();\n  const compare = minTime <= date.getTime() && date.getTime() <= maxTime;\n  if (isEqualDates(date, maxDate, 'date', timeType)) {\n    const dateTimes = [\n      clearTime(date, 'start', {\n        minutes: timeType === 'hours',\n        seconds: timeType === 'hours' || timeType === 'minutes',\n        miliseconds: false,\n      }).getTime(),\n      clearTime(date, 'end', {\n        minutes: timeType === 'hours',\n        seconds: timeType === 'hours' || timeType === 'minutes',\n        miliseconds: false,\n      }).getTime(),\n    ];\n    return (\n      minTime <= dateTimes[0] &&\n      dateTimes[0] <= maxTime &&\n      minTime <= dateTimes[1] &&\n      dateTimes[1] <= maxTime\n    );\n  }\n  return compare;\n};\n\nexport const isDisableDate = <TYPE extends DateTimePropType>(params: {\n  date: Date;\n  disableDates: DateTimePropDisableDates | undefined;\n  mode?: DateTimePropType;\n  timeType?: TYPE extends 'time' ? 'hours' | 'minutes' | 'seconds' : undefined;\n}) => {\n  const { disableDates, mode, date, timeType } = params;\n  if (!disableDates) {\n    return false;\n  }\n  return !!disableDates.find((compareDate) =>\n    compareDate instanceof Date\n      ? isEqualDates(compareDate, date, mode, timeType)\n      : isInRange(date, compareDate[0], compareDate[1], mode, timeType),\n  );\n};\n"],"mappings":"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"}