import _toConsumableArray from"@babel/runtime/helpers/toConsumableArray";function _createForOfIteratorHelper(a,b){var c="undefined"!=typeof Symbol&&a[Symbol.iterator]||a["@@iterator"];if(!c){if(Array.isArray(a)||(c=_unsupportedIterableToArray(a))||b&&a&&"number"==typeof a.length){c&&(a=c);var d=0,e=function(){};return{s:e,n:function n(){return d>=a.length?{done:!0}:{done:!1,value:a[d++]}},e:function e(a){throw a},f:e}}throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}var f,g=!0,h=!1;return{s:function s(){c=c.call(a)},n:function n(){var a=c.next();return g=a.done,a},e:function e(a){h=!0,f=a},f:function f(){try{g||null==c["return"]||c["return"]()}finally{if(h)throw f}}}}function _unsupportedIterableToArray(a,b){if(a){if("string"==typeof a)return _arrayLikeToArray(a,b);var c=Object.prototype.toString.call(a).slice(8,-1);return"Object"===c&&a.constructor&&(c=a.constructor.name),"Map"===c||"Set"===c?Array.from(a):"Arguments"===c||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(c)?_arrayLikeToArray(a,b):void 0}}function _arrayLikeToArray(a,b){(null==b||b>a.length)&&(b=a.length);for(var c=0,d=Array(b);c<b;c++)d[c]=a[c];return d}export var defaultGroupKey="no-group";var getItemGroupKeyGuard=function(a,b,c){var d=a(b);return"undefined"==typeof d?c:d};export function getGroups(a,b,c,d,e){var f=5<arguments.length&&void 0!==arguments[5]?arguments[5]:defaultGroupKey;if("function"!=typeof b)return[{items:a,key:f,groupIndex:-1}];var g,h=[],i=_createForOfIteratorHelper(a);try{var j=function _loop(){var a=g.value,e=getItemGroupKeyGuard(b,a,f),i=h.findIndex(function(a){return a.key===e});if(0<=i)h[i].items.push(a);else{var j=d&&c?c.findIndex(function(a){return d(a)===e}):-1,k={key:e,items:[a],groupIndex:j,group:c?c[j]:void 0};h.push(k)}};for(i.s();!(g=i.n()).done;)j()}catch(a){i.e(a)}finally{i.f()}return"function"==typeof e?h.sort(e):c&&d&&h.sort(function(c,a){return c.groupIndex>a.groupIndex?1:c.groupIndex<a.groupIndex?-1:0}),h}export function getCountedGroups(a,b,c,d,e){var f=_toConsumableArray(a);return c&&a.forEach(function(a,c){var g=0,h=0;a.items.forEach(function(a){e&&null!==e&&void 0!==e&&e(a)||(g+=1),null!==b&&void 0!==b&&b.find(function(b){return d(a)===d(b)})&&(h+=1)}),f[c].items=[{__optionSelctAll:!0,totalCount:g,groupKey:a.key,checkedCount:h}].concat(_toConsumableArray(f[c].items))}),f}
//# sourceMappingURL=getGroups.js.map